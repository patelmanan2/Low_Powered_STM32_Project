
Switching_Tool_Prototype.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a480  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000500  0800a540  0800a540  0001a540  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800aa40  0800aa40  000201d4  2**0
                  CONTENTS
  4 .ARM          00000008  0800aa40  0800aa40  0001aa40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800aa48  0800aa48  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800aa48  0800aa48  0001aa48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800aa4c  0800aa4c  0001aa4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  0800aa50  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001f0  200001d4  0800ac24  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003c4  0800ac24  000203c4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000201fc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00004f10  00000000  00000000  0002023f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001462  00000000  00000000  0002514f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000005d0  00000000  00000000  000265b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000446  00000000  00000000  00026b88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00011513  00000000  00000000  00026fce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00007dc2  00000000  00000000  000384e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000661d6  00000000  00000000  000402a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000029c4  00000000  00000000  000a647c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008a  00000000  00000000  000a8e40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d4 	.word	0x200001d4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800a528 	.word	0x0800a528

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001d8 	.word	0x200001d8
 8000104:	0800a528 	.word	0x0800a528

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 ff97 	bl	8002370 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 fee7 	bl	8002220 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 ff89 	bl	8002370 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 ff7f 	bl	8002370 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 ff0f 	bl	80022a4 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 ff05 	bl	80022a4 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_cfrcmple>:
 80004a8:	4684      	mov	ip, r0
 80004aa:	0008      	movs	r0, r1
 80004ac:	4661      	mov	r1, ip
 80004ae:	e7ff      	b.n	80004b0 <__aeabi_cfcmpeq>

080004b0 <__aeabi_cfcmpeq>:
 80004b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004b2:	f000 fce3 	bl	8000e7c <__lesf2>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d401      	bmi.n	80004be <__aeabi_cfcmpeq+0xe>
 80004ba:	2100      	movs	r1, #0
 80004bc:	42c8      	cmn	r0, r1
 80004be:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004c0 <__aeabi_fcmpeq>:
 80004c0:	b510      	push	{r4, lr}
 80004c2:	f000 fc6f 	bl	8000da4 <__eqsf2>
 80004c6:	4240      	negs	r0, r0
 80004c8:	3001      	adds	r0, #1
 80004ca:	bd10      	pop	{r4, pc}

080004cc <__aeabi_fcmplt>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 fcd5 	bl	8000e7c <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	db01      	blt.n	80004da <__aeabi_fcmplt+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__aeabi_fcmple>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fccb 	bl	8000e7c <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dd01      	ble.n	80004ee <__aeabi_fcmple+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmpgt>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 fc7b 	bl	8000df0 <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dc01      	bgt.n	8000502 <__aeabi_fcmpgt+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_fcmpge>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 fc71 	bl	8000df0 <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	da01      	bge.n	8000516 <__aeabi_fcmpge+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			; (mov r8, r8)

0800051c <__aeabi_uldivmod>:
 800051c:	2b00      	cmp	r3, #0
 800051e:	d111      	bne.n	8000544 <__aeabi_uldivmod+0x28>
 8000520:	2a00      	cmp	r2, #0
 8000522:	d10f      	bne.n	8000544 <__aeabi_uldivmod+0x28>
 8000524:	2900      	cmp	r1, #0
 8000526:	d100      	bne.n	800052a <__aeabi_uldivmod+0xe>
 8000528:	2800      	cmp	r0, #0
 800052a:	d002      	beq.n	8000532 <__aeabi_uldivmod+0x16>
 800052c:	2100      	movs	r1, #0
 800052e:	43c9      	mvns	r1, r1
 8000530:	0008      	movs	r0, r1
 8000532:	b407      	push	{r0, r1, r2}
 8000534:	4802      	ldr	r0, [pc, #8]	; (8000540 <__aeabi_uldivmod+0x24>)
 8000536:	a102      	add	r1, pc, #8	; (adr r1, 8000540 <__aeabi_uldivmod+0x24>)
 8000538:	1840      	adds	r0, r0, r1
 800053a:	9002      	str	r0, [sp, #8]
 800053c:	bd03      	pop	{r0, r1, pc}
 800053e:	46c0      	nop			; (mov r8, r8)
 8000540:	fffffee9 	.word	0xfffffee9
 8000544:	b403      	push	{r0, r1}
 8000546:	4668      	mov	r0, sp
 8000548:	b501      	push	{r0, lr}
 800054a:	9802      	ldr	r0, [sp, #8]
 800054c:	f000 f8a4 	bl	8000698 <__udivmoddi4>
 8000550:	9b01      	ldr	r3, [sp, #4]
 8000552:	469e      	mov	lr, r3
 8000554:	b002      	add	sp, #8
 8000556:	bc0c      	pop	{r2, r3}
 8000558:	4770      	bx	lr
 800055a:	46c0      	nop			; (mov r8, r8)

0800055c <__aeabi_lmul>:
 800055c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800055e:	46ce      	mov	lr, r9
 8000560:	4699      	mov	r9, r3
 8000562:	0c03      	lsrs	r3, r0, #16
 8000564:	469c      	mov	ip, r3
 8000566:	0413      	lsls	r3, r2, #16
 8000568:	4647      	mov	r7, r8
 800056a:	0c1b      	lsrs	r3, r3, #16
 800056c:	001d      	movs	r5, r3
 800056e:	000e      	movs	r6, r1
 8000570:	4661      	mov	r1, ip
 8000572:	0404      	lsls	r4, r0, #16
 8000574:	0c24      	lsrs	r4, r4, #16
 8000576:	b580      	push	{r7, lr}
 8000578:	0007      	movs	r7, r0
 800057a:	0c10      	lsrs	r0, r2, #16
 800057c:	434b      	muls	r3, r1
 800057e:	4365      	muls	r5, r4
 8000580:	4341      	muls	r1, r0
 8000582:	4360      	muls	r0, r4
 8000584:	0c2c      	lsrs	r4, r5, #16
 8000586:	18c0      	adds	r0, r0, r3
 8000588:	1820      	adds	r0, r4, r0
 800058a:	468c      	mov	ip, r1
 800058c:	4283      	cmp	r3, r0
 800058e:	d903      	bls.n	8000598 <__aeabi_lmul+0x3c>
 8000590:	2380      	movs	r3, #128	; 0x80
 8000592:	025b      	lsls	r3, r3, #9
 8000594:	4698      	mov	r8, r3
 8000596:	44c4      	add	ip, r8
 8000598:	4649      	mov	r1, r9
 800059a:	4379      	muls	r1, r7
 800059c:	4356      	muls	r6, r2
 800059e:	0c03      	lsrs	r3, r0, #16
 80005a0:	042d      	lsls	r5, r5, #16
 80005a2:	0c2d      	lsrs	r5, r5, #16
 80005a4:	1989      	adds	r1, r1, r6
 80005a6:	4463      	add	r3, ip
 80005a8:	0400      	lsls	r0, r0, #16
 80005aa:	1940      	adds	r0, r0, r5
 80005ac:	18c9      	adds	r1, r1, r3
 80005ae:	bcc0      	pop	{r6, r7}
 80005b0:	46b9      	mov	r9, r7
 80005b2:	46b0      	mov	r8, r6
 80005b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005b6:	46c0      	nop			; (mov r8, r8)

080005b8 <__aeabi_d2uiz>:
 80005b8:	b570      	push	{r4, r5, r6, lr}
 80005ba:	2200      	movs	r2, #0
 80005bc:	4b0c      	ldr	r3, [pc, #48]	; (80005f0 <__aeabi_d2uiz+0x38>)
 80005be:	0004      	movs	r4, r0
 80005c0:	000d      	movs	r5, r1
 80005c2:	f7ff ff67 	bl	8000494 <__aeabi_dcmpge>
 80005c6:	2800      	cmp	r0, #0
 80005c8:	d104      	bne.n	80005d4 <__aeabi_d2uiz+0x1c>
 80005ca:	0020      	movs	r0, r4
 80005cc:	0029      	movs	r1, r5
 80005ce:	f002 fd95 	bl	80030fc <__aeabi_d2iz>
 80005d2:	bd70      	pop	{r4, r5, r6, pc}
 80005d4:	4b06      	ldr	r3, [pc, #24]	; (80005f0 <__aeabi_d2uiz+0x38>)
 80005d6:	2200      	movs	r2, #0
 80005d8:	0020      	movs	r0, r4
 80005da:	0029      	movs	r1, r5
 80005dc:	f002 f9ee 	bl	80029bc <__aeabi_dsub>
 80005e0:	f002 fd8c 	bl	80030fc <__aeabi_d2iz>
 80005e4:	2380      	movs	r3, #128	; 0x80
 80005e6:	061b      	lsls	r3, r3, #24
 80005e8:	469c      	mov	ip, r3
 80005ea:	4460      	add	r0, ip
 80005ec:	e7f1      	b.n	80005d2 <__aeabi_d2uiz+0x1a>
 80005ee:	46c0      	nop			; (mov r8, r8)
 80005f0:	41e00000 	.word	0x41e00000

080005f4 <__aeabi_d2lz>:
 80005f4:	b570      	push	{r4, r5, r6, lr}
 80005f6:	0005      	movs	r5, r0
 80005f8:	000c      	movs	r4, r1
 80005fa:	2200      	movs	r2, #0
 80005fc:	2300      	movs	r3, #0
 80005fe:	0028      	movs	r0, r5
 8000600:	0021      	movs	r1, r4
 8000602:	f7ff ff29 	bl	8000458 <__aeabi_dcmplt>
 8000606:	2800      	cmp	r0, #0
 8000608:	d108      	bne.n	800061c <__aeabi_d2lz+0x28>
 800060a:	0028      	movs	r0, r5
 800060c:	0021      	movs	r1, r4
 800060e:	f000 f80f 	bl	8000630 <__aeabi_d2ulz>
 8000612:	0002      	movs	r2, r0
 8000614:	000b      	movs	r3, r1
 8000616:	0010      	movs	r0, r2
 8000618:	0019      	movs	r1, r3
 800061a:	bd70      	pop	{r4, r5, r6, pc}
 800061c:	2380      	movs	r3, #128	; 0x80
 800061e:	061b      	lsls	r3, r3, #24
 8000620:	18e1      	adds	r1, r4, r3
 8000622:	0028      	movs	r0, r5
 8000624:	f000 f804 	bl	8000630 <__aeabi_d2ulz>
 8000628:	2300      	movs	r3, #0
 800062a:	4242      	negs	r2, r0
 800062c:	418b      	sbcs	r3, r1
 800062e:	e7f2      	b.n	8000616 <__aeabi_d2lz+0x22>

08000630 <__aeabi_d2ulz>:
 8000630:	b570      	push	{r4, r5, r6, lr}
 8000632:	2200      	movs	r2, #0
 8000634:	4b0b      	ldr	r3, [pc, #44]	; (8000664 <__aeabi_d2ulz+0x34>)
 8000636:	000d      	movs	r5, r1
 8000638:	0004      	movs	r4, r0
 800063a:	f001 fefd 	bl	8002438 <__aeabi_dmul>
 800063e:	f7ff ffbb 	bl	80005b8 <__aeabi_d2uiz>
 8000642:	0006      	movs	r6, r0
 8000644:	f002 fdc0 	bl	80031c8 <__aeabi_ui2d>
 8000648:	2200      	movs	r2, #0
 800064a:	4b07      	ldr	r3, [pc, #28]	; (8000668 <__aeabi_d2ulz+0x38>)
 800064c:	f001 fef4 	bl	8002438 <__aeabi_dmul>
 8000650:	0002      	movs	r2, r0
 8000652:	000b      	movs	r3, r1
 8000654:	0020      	movs	r0, r4
 8000656:	0029      	movs	r1, r5
 8000658:	f002 f9b0 	bl	80029bc <__aeabi_dsub>
 800065c:	f7ff ffac 	bl	80005b8 <__aeabi_d2uiz>
 8000660:	0031      	movs	r1, r6
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	3df00000 	.word	0x3df00000
 8000668:	41f00000 	.word	0x41f00000

0800066c <__aeabi_l2d>:
 800066c:	b570      	push	{r4, r5, r6, lr}
 800066e:	0006      	movs	r6, r0
 8000670:	0008      	movs	r0, r1
 8000672:	f002 fd79 	bl	8003168 <__aeabi_i2d>
 8000676:	2200      	movs	r2, #0
 8000678:	4b06      	ldr	r3, [pc, #24]	; (8000694 <__aeabi_l2d+0x28>)
 800067a:	f001 fedd 	bl	8002438 <__aeabi_dmul>
 800067e:	000d      	movs	r5, r1
 8000680:	0004      	movs	r4, r0
 8000682:	0030      	movs	r0, r6
 8000684:	f002 fda0 	bl	80031c8 <__aeabi_ui2d>
 8000688:	002b      	movs	r3, r5
 800068a:	0022      	movs	r2, r4
 800068c:	f000 ff7a 	bl	8001584 <__aeabi_dadd>
 8000690:	bd70      	pop	{r4, r5, r6, pc}
 8000692:	46c0      	nop			; (mov r8, r8)
 8000694:	41f00000 	.word	0x41f00000

08000698 <__udivmoddi4>:
 8000698:	b5f0      	push	{r4, r5, r6, r7, lr}
 800069a:	4657      	mov	r7, sl
 800069c:	464e      	mov	r6, r9
 800069e:	4645      	mov	r5, r8
 80006a0:	46de      	mov	lr, fp
 80006a2:	b5e0      	push	{r5, r6, r7, lr}
 80006a4:	0004      	movs	r4, r0
 80006a6:	000d      	movs	r5, r1
 80006a8:	4692      	mov	sl, r2
 80006aa:	4699      	mov	r9, r3
 80006ac:	b083      	sub	sp, #12
 80006ae:	428b      	cmp	r3, r1
 80006b0:	d830      	bhi.n	8000714 <__udivmoddi4+0x7c>
 80006b2:	d02d      	beq.n	8000710 <__udivmoddi4+0x78>
 80006b4:	4649      	mov	r1, r9
 80006b6:	4650      	mov	r0, sl
 80006b8:	f002 fe50 	bl	800335c <__clzdi2>
 80006bc:	0029      	movs	r1, r5
 80006be:	0006      	movs	r6, r0
 80006c0:	0020      	movs	r0, r4
 80006c2:	f002 fe4b 	bl	800335c <__clzdi2>
 80006c6:	1a33      	subs	r3, r6, r0
 80006c8:	4698      	mov	r8, r3
 80006ca:	3b20      	subs	r3, #32
 80006cc:	d434      	bmi.n	8000738 <__udivmoddi4+0xa0>
 80006ce:	469b      	mov	fp, r3
 80006d0:	4653      	mov	r3, sl
 80006d2:	465a      	mov	r2, fp
 80006d4:	4093      	lsls	r3, r2
 80006d6:	4642      	mov	r2, r8
 80006d8:	001f      	movs	r7, r3
 80006da:	4653      	mov	r3, sl
 80006dc:	4093      	lsls	r3, r2
 80006de:	001e      	movs	r6, r3
 80006e0:	42af      	cmp	r7, r5
 80006e2:	d83b      	bhi.n	800075c <__udivmoddi4+0xc4>
 80006e4:	42af      	cmp	r7, r5
 80006e6:	d100      	bne.n	80006ea <__udivmoddi4+0x52>
 80006e8:	e079      	b.n	80007de <__udivmoddi4+0x146>
 80006ea:	465b      	mov	r3, fp
 80006ec:	1ba4      	subs	r4, r4, r6
 80006ee:	41bd      	sbcs	r5, r7
 80006f0:	2b00      	cmp	r3, #0
 80006f2:	da00      	bge.n	80006f6 <__udivmoddi4+0x5e>
 80006f4:	e076      	b.n	80007e4 <__udivmoddi4+0x14c>
 80006f6:	2200      	movs	r2, #0
 80006f8:	2300      	movs	r3, #0
 80006fa:	9200      	str	r2, [sp, #0]
 80006fc:	9301      	str	r3, [sp, #4]
 80006fe:	2301      	movs	r3, #1
 8000700:	465a      	mov	r2, fp
 8000702:	4093      	lsls	r3, r2
 8000704:	9301      	str	r3, [sp, #4]
 8000706:	2301      	movs	r3, #1
 8000708:	4642      	mov	r2, r8
 800070a:	4093      	lsls	r3, r2
 800070c:	9300      	str	r3, [sp, #0]
 800070e:	e029      	b.n	8000764 <__udivmoddi4+0xcc>
 8000710:	4282      	cmp	r2, r0
 8000712:	d9cf      	bls.n	80006b4 <__udivmoddi4+0x1c>
 8000714:	2200      	movs	r2, #0
 8000716:	2300      	movs	r3, #0
 8000718:	9200      	str	r2, [sp, #0]
 800071a:	9301      	str	r3, [sp, #4]
 800071c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800071e:	2b00      	cmp	r3, #0
 8000720:	d001      	beq.n	8000726 <__udivmoddi4+0x8e>
 8000722:	601c      	str	r4, [r3, #0]
 8000724:	605d      	str	r5, [r3, #4]
 8000726:	9800      	ldr	r0, [sp, #0]
 8000728:	9901      	ldr	r1, [sp, #4]
 800072a:	b003      	add	sp, #12
 800072c:	bcf0      	pop	{r4, r5, r6, r7}
 800072e:	46bb      	mov	fp, r7
 8000730:	46b2      	mov	sl, r6
 8000732:	46a9      	mov	r9, r5
 8000734:	46a0      	mov	r8, r4
 8000736:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000738:	4642      	mov	r2, r8
 800073a:	469b      	mov	fp, r3
 800073c:	2320      	movs	r3, #32
 800073e:	1a9b      	subs	r3, r3, r2
 8000740:	4652      	mov	r2, sl
 8000742:	40da      	lsrs	r2, r3
 8000744:	4641      	mov	r1, r8
 8000746:	0013      	movs	r3, r2
 8000748:	464a      	mov	r2, r9
 800074a:	408a      	lsls	r2, r1
 800074c:	0017      	movs	r7, r2
 800074e:	4642      	mov	r2, r8
 8000750:	431f      	orrs	r7, r3
 8000752:	4653      	mov	r3, sl
 8000754:	4093      	lsls	r3, r2
 8000756:	001e      	movs	r6, r3
 8000758:	42af      	cmp	r7, r5
 800075a:	d9c3      	bls.n	80006e4 <__udivmoddi4+0x4c>
 800075c:	2200      	movs	r2, #0
 800075e:	2300      	movs	r3, #0
 8000760:	9200      	str	r2, [sp, #0]
 8000762:	9301      	str	r3, [sp, #4]
 8000764:	4643      	mov	r3, r8
 8000766:	2b00      	cmp	r3, #0
 8000768:	d0d8      	beq.n	800071c <__udivmoddi4+0x84>
 800076a:	07fb      	lsls	r3, r7, #31
 800076c:	0872      	lsrs	r2, r6, #1
 800076e:	431a      	orrs	r2, r3
 8000770:	4646      	mov	r6, r8
 8000772:	087b      	lsrs	r3, r7, #1
 8000774:	e00e      	b.n	8000794 <__udivmoddi4+0xfc>
 8000776:	42ab      	cmp	r3, r5
 8000778:	d101      	bne.n	800077e <__udivmoddi4+0xe6>
 800077a:	42a2      	cmp	r2, r4
 800077c:	d80c      	bhi.n	8000798 <__udivmoddi4+0x100>
 800077e:	1aa4      	subs	r4, r4, r2
 8000780:	419d      	sbcs	r5, r3
 8000782:	2001      	movs	r0, #1
 8000784:	1924      	adds	r4, r4, r4
 8000786:	416d      	adcs	r5, r5
 8000788:	2100      	movs	r1, #0
 800078a:	3e01      	subs	r6, #1
 800078c:	1824      	adds	r4, r4, r0
 800078e:	414d      	adcs	r5, r1
 8000790:	2e00      	cmp	r6, #0
 8000792:	d006      	beq.n	80007a2 <__udivmoddi4+0x10a>
 8000794:	42ab      	cmp	r3, r5
 8000796:	d9ee      	bls.n	8000776 <__udivmoddi4+0xde>
 8000798:	3e01      	subs	r6, #1
 800079a:	1924      	adds	r4, r4, r4
 800079c:	416d      	adcs	r5, r5
 800079e:	2e00      	cmp	r6, #0
 80007a0:	d1f8      	bne.n	8000794 <__udivmoddi4+0xfc>
 80007a2:	9800      	ldr	r0, [sp, #0]
 80007a4:	9901      	ldr	r1, [sp, #4]
 80007a6:	465b      	mov	r3, fp
 80007a8:	1900      	adds	r0, r0, r4
 80007aa:	4169      	adcs	r1, r5
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	db24      	blt.n	80007fa <__udivmoddi4+0x162>
 80007b0:	002b      	movs	r3, r5
 80007b2:	465a      	mov	r2, fp
 80007b4:	4644      	mov	r4, r8
 80007b6:	40d3      	lsrs	r3, r2
 80007b8:	002a      	movs	r2, r5
 80007ba:	40e2      	lsrs	r2, r4
 80007bc:	001c      	movs	r4, r3
 80007be:	465b      	mov	r3, fp
 80007c0:	0015      	movs	r5, r2
 80007c2:	2b00      	cmp	r3, #0
 80007c4:	db2a      	blt.n	800081c <__udivmoddi4+0x184>
 80007c6:	0026      	movs	r6, r4
 80007c8:	409e      	lsls	r6, r3
 80007ca:	0033      	movs	r3, r6
 80007cc:	0026      	movs	r6, r4
 80007ce:	4647      	mov	r7, r8
 80007d0:	40be      	lsls	r6, r7
 80007d2:	0032      	movs	r2, r6
 80007d4:	1a80      	subs	r0, r0, r2
 80007d6:	4199      	sbcs	r1, r3
 80007d8:	9000      	str	r0, [sp, #0]
 80007da:	9101      	str	r1, [sp, #4]
 80007dc:	e79e      	b.n	800071c <__udivmoddi4+0x84>
 80007de:	42a3      	cmp	r3, r4
 80007e0:	d8bc      	bhi.n	800075c <__udivmoddi4+0xc4>
 80007e2:	e782      	b.n	80006ea <__udivmoddi4+0x52>
 80007e4:	4642      	mov	r2, r8
 80007e6:	2320      	movs	r3, #32
 80007e8:	2100      	movs	r1, #0
 80007ea:	1a9b      	subs	r3, r3, r2
 80007ec:	2200      	movs	r2, #0
 80007ee:	9100      	str	r1, [sp, #0]
 80007f0:	9201      	str	r2, [sp, #4]
 80007f2:	2201      	movs	r2, #1
 80007f4:	40da      	lsrs	r2, r3
 80007f6:	9201      	str	r2, [sp, #4]
 80007f8:	e785      	b.n	8000706 <__udivmoddi4+0x6e>
 80007fa:	4642      	mov	r2, r8
 80007fc:	2320      	movs	r3, #32
 80007fe:	1a9b      	subs	r3, r3, r2
 8000800:	002a      	movs	r2, r5
 8000802:	4646      	mov	r6, r8
 8000804:	409a      	lsls	r2, r3
 8000806:	0023      	movs	r3, r4
 8000808:	40f3      	lsrs	r3, r6
 800080a:	4644      	mov	r4, r8
 800080c:	4313      	orrs	r3, r2
 800080e:	002a      	movs	r2, r5
 8000810:	40e2      	lsrs	r2, r4
 8000812:	001c      	movs	r4, r3
 8000814:	465b      	mov	r3, fp
 8000816:	0015      	movs	r5, r2
 8000818:	2b00      	cmp	r3, #0
 800081a:	dad4      	bge.n	80007c6 <__udivmoddi4+0x12e>
 800081c:	4642      	mov	r2, r8
 800081e:	002f      	movs	r7, r5
 8000820:	2320      	movs	r3, #32
 8000822:	0026      	movs	r6, r4
 8000824:	4097      	lsls	r7, r2
 8000826:	1a9b      	subs	r3, r3, r2
 8000828:	40de      	lsrs	r6, r3
 800082a:	003b      	movs	r3, r7
 800082c:	4333      	orrs	r3, r6
 800082e:	e7cd      	b.n	80007cc <__udivmoddi4+0x134>

08000830 <__aeabi_fadd>:
 8000830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000832:	4647      	mov	r7, r8
 8000834:	46ce      	mov	lr, r9
 8000836:	024a      	lsls	r2, r1, #9
 8000838:	0243      	lsls	r3, r0, #9
 800083a:	0045      	lsls	r5, r0, #1
 800083c:	0fc4      	lsrs	r4, r0, #31
 800083e:	0a50      	lsrs	r0, r2, #9
 8000840:	4680      	mov	r8, r0
 8000842:	0048      	lsls	r0, r1, #1
 8000844:	0a5b      	lsrs	r3, r3, #9
 8000846:	0e00      	lsrs	r0, r0, #24
 8000848:	0992      	lsrs	r2, r2, #6
 800084a:	4694      	mov	ip, r2
 800084c:	b580      	push	{r7, lr}
 800084e:	001e      	movs	r6, r3
 8000850:	4681      	mov	r9, r0
 8000852:	0002      	movs	r2, r0
 8000854:	0e2d      	lsrs	r5, r5, #24
 8000856:	00df      	lsls	r7, r3, #3
 8000858:	0fc9      	lsrs	r1, r1, #31
 800085a:	428c      	cmp	r4, r1
 800085c:	d024      	beq.n	80008a8 <__aeabi_fadd+0x78>
 800085e:	1a28      	subs	r0, r5, r0
 8000860:	2800      	cmp	r0, #0
 8000862:	dd0e      	ble.n	8000882 <__aeabi_fadd+0x52>
 8000864:	2a00      	cmp	r2, #0
 8000866:	d13e      	bne.n	80008e6 <__aeabi_fadd+0xb6>
 8000868:	4662      	mov	r2, ip
 800086a:	2a00      	cmp	r2, #0
 800086c:	d100      	bne.n	8000870 <__aeabi_fadd+0x40>
 800086e:	e0fd      	b.n	8000a6c <__aeabi_fadd+0x23c>
 8000870:	1e42      	subs	r2, r0, #1
 8000872:	2801      	cmp	r0, #1
 8000874:	d100      	bne.n	8000878 <__aeabi_fadd+0x48>
 8000876:	e137      	b.n	8000ae8 <__aeabi_fadd+0x2b8>
 8000878:	28ff      	cmp	r0, #255	; 0xff
 800087a:	d100      	bne.n	800087e <__aeabi_fadd+0x4e>
 800087c:	e0a9      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 800087e:	0010      	movs	r0, r2
 8000880:	e039      	b.n	80008f6 <__aeabi_fadd+0xc6>
 8000882:	2800      	cmp	r0, #0
 8000884:	d063      	beq.n	800094e <__aeabi_fadd+0x11e>
 8000886:	464b      	mov	r3, r9
 8000888:	1b52      	subs	r2, r2, r5
 800088a:	2d00      	cmp	r5, #0
 800088c:	d000      	beq.n	8000890 <__aeabi_fadd+0x60>
 800088e:	e0e0      	b.n	8000a52 <__aeabi_fadd+0x222>
 8000890:	2f00      	cmp	r7, #0
 8000892:	d100      	bne.n	8000896 <__aeabi_fadd+0x66>
 8000894:	e0ce      	b.n	8000a34 <__aeabi_fadd+0x204>
 8000896:	1e53      	subs	r3, r2, #1
 8000898:	2a01      	cmp	r2, #1
 800089a:	d100      	bne.n	800089e <__aeabi_fadd+0x6e>
 800089c:	e155      	b.n	8000b4a <__aeabi_fadd+0x31a>
 800089e:	2aff      	cmp	r2, #255	; 0xff
 80008a0:	d100      	bne.n	80008a4 <__aeabi_fadd+0x74>
 80008a2:	e094      	b.n	80009ce <__aeabi_fadd+0x19e>
 80008a4:	001a      	movs	r2, r3
 80008a6:	e0d9      	b.n	8000a5c <__aeabi_fadd+0x22c>
 80008a8:	1a2a      	subs	r2, r5, r0
 80008aa:	2a00      	cmp	r2, #0
 80008ac:	dc00      	bgt.n	80008b0 <__aeabi_fadd+0x80>
 80008ae:	e099      	b.n	80009e4 <__aeabi_fadd+0x1b4>
 80008b0:	2800      	cmp	r0, #0
 80008b2:	d062      	beq.n	800097a <__aeabi_fadd+0x14a>
 80008b4:	2dff      	cmp	r5, #255	; 0xff
 80008b6:	d100      	bne.n	80008ba <__aeabi_fadd+0x8a>
 80008b8:	e08b      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 80008ba:	2380      	movs	r3, #128	; 0x80
 80008bc:	4661      	mov	r1, ip
 80008be:	04db      	lsls	r3, r3, #19
 80008c0:	4319      	orrs	r1, r3
 80008c2:	468c      	mov	ip, r1
 80008c4:	2a1b      	cmp	r2, #27
 80008c6:	dc00      	bgt.n	80008ca <__aeabi_fadd+0x9a>
 80008c8:	e0d2      	b.n	8000a70 <__aeabi_fadd+0x240>
 80008ca:	2301      	movs	r3, #1
 80008cc:	19db      	adds	r3, r3, r7
 80008ce:	015a      	lsls	r2, r3, #5
 80008d0:	d56a      	bpl.n	80009a8 <__aeabi_fadd+0x178>
 80008d2:	3501      	adds	r5, #1
 80008d4:	2dff      	cmp	r5, #255	; 0xff
 80008d6:	d05b      	beq.n	8000990 <__aeabi_fadd+0x160>
 80008d8:	2201      	movs	r2, #1
 80008da:	49a3      	ldr	r1, [pc, #652]	; (8000b68 <__aeabi_fadd+0x338>)
 80008dc:	401a      	ands	r2, r3
 80008de:	085b      	lsrs	r3, r3, #1
 80008e0:	400b      	ands	r3, r1
 80008e2:	4313      	orrs	r3, r2
 80008e4:	e01c      	b.n	8000920 <__aeabi_fadd+0xf0>
 80008e6:	2dff      	cmp	r5, #255	; 0xff
 80008e8:	d100      	bne.n	80008ec <__aeabi_fadd+0xbc>
 80008ea:	e072      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 80008ec:	2380      	movs	r3, #128	; 0x80
 80008ee:	4662      	mov	r2, ip
 80008f0:	04db      	lsls	r3, r3, #19
 80008f2:	431a      	orrs	r2, r3
 80008f4:	4694      	mov	ip, r2
 80008f6:	281b      	cmp	r0, #27
 80008f8:	dc00      	bgt.n	80008fc <__aeabi_fadd+0xcc>
 80008fa:	e090      	b.n	8000a1e <__aeabi_fadd+0x1ee>
 80008fc:	2301      	movs	r3, #1
 80008fe:	1afb      	subs	r3, r7, r3
 8000900:	015a      	lsls	r2, r3, #5
 8000902:	d551      	bpl.n	80009a8 <__aeabi_fadd+0x178>
 8000904:	019b      	lsls	r3, r3, #6
 8000906:	099e      	lsrs	r6, r3, #6
 8000908:	0030      	movs	r0, r6
 800090a:	f002 fd09 	bl	8003320 <__clzsi2>
 800090e:	0033      	movs	r3, r6
 8000910:	3805      	subs	r0, #5
 8000912:	4083      	lsls	r3, r0
 8000914:	4285      	cmp	r5, r0
 8000916:	dc00      	bgt.n	800091a <__aeabi_fadd+0xea>
 8000918:	e075      	b.n	8000a06 <__aeabi_fadd+0x1d6>
 800091a:	4a94      	ldr	r2, [pc, #592]	; (8000b6c <__aeabi_fadd+0x33c>)
 800091c:	1a2d      	subs	r5, r5, r0
 800091e:	4013      	ands	r3, r2
 8000920:	075a      	lsls	r2, r3, #29
 8000922:	d004      	beq.n	800092e <__aeabi_fadd+0xfe>
 8000924:	220f      	movs	r2, #15
 8000926:	401a      	ands	r2, r3
 8000928:	2a04      	cmp	r2, #4
 800092a:	d000      	beq.n	800092e <__aeabi_fadd+0xfe>
 800092c:	3304      	adds	r3, #4
 800092e:	015a      	lsls	r2, r3, #5
 8000930:	d53c      	bpl.n	80009ac <__aeabi_fadd+0x17c>
 8000932:	1c68      	adds	r0, r5, #1
 8000934:	2dfe      	cmp	r5, #254	; 0xfe
 8000936:	d02b      	beq.n	8000990 <__aeabi_fadd+0x160>
 8000938:	019b      	lsls	r3, r3, #6
 800093a:	0a5e      	lsrs	r6, r3, #9
 800093c:	b2c0      	uxtb	r0, r0
 800093e:	05c0      	lsls	r0, r0, #23
 8000940:	4330      	orrs	r0, r6
 8000942:	07e4      	lsls	r4, r4, #31
 8000944:	4320      	orrs	r0, r4
 8000946:	bcc0      	pop	{r6, r7}
 8000948:	46b9      	mov	r9, r7
 800094a:	46b0      	mov	r8, r6
 800094c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800094e:	20fe      	movs	r0, #254	; 0xfe
 8000950:	1c6a      	adds	r2, r5, #1
 8000952:	4210      	tst	r0, r2
 8000954:	d172      	bne.n	8000a3c <__aeabi_fadd+0x20c>
 8000956:	2d00      	cmp	r5, #0
 8000958:	d000      	beq.n	800095c <__aeabi_fadd+0x12c>
 800095a:	e0ae      	b.n	8000aba <__aeabi_fadd+0x28a>
 800095c:	2f00      	cmp	r7, #0
 800095e:	d100      	bne.n	8000962 <__aeabi_fadd+0x132>
 8000960:	e0ec      	b.n	8000b3c <__aeabi_fadd+0x30c>
 8000962:	4663      	mov	r3, ip
 8000964:	2000      	movs	r0, #0
 8000966:	2b00      	cmp	r3, #0
 8000968:	d0e9      	beq.n	800093e <__aeabi_fadd+0x10e>
 800096a:	1afb      	subs	r3, r7, r3
 800096c:	015a      	lsls	r2, r3, #5
 800096e:	d400      	bmi.n	8000972 <__aeabi_fadd+0x142>
 8000970:	e0f3      	b.n	8000b5a <__aeabi_fadd+0x32a>
 8000972:	4663      	mov	r3, ip
 8000974:	000c      	movs	r4, r1
 8000976:	1bdb      	subs	r3, r3, r7
 8000978:	e7d2      	b.n	8000920 <__aeabi_fadd+0xf0>
 800097a:	4661      	mov	r1, ip
 800097c:	2900      	cmp	r1, #0
 800097e:	d05b      	beq.n	8000a38 <__aeabi_fadd+0x208>
 8000980:	1e51      	subs	r1, r2, #1
 8000982:	2a01      	cmp	r2, #1
 8000984:	d100      	bne.n	8000988 <__aeabi_fadd+0x158>
 8000986:	e0a7      	b.n	8000ad8 <__aeabi_fadd+0x2a8>
 8000988:	2aff      	cmp	r2, #255	; 0xff
 800098a:	d022      	beq.n	80009d2 <__aeabi_fadd+0x1a2>
 800098c:	000a      	movs	r2, r1
 800098e:	e799      	b.n	80008c4 <__aeabi_fadd+0x94>
 8000990:	20ff      	movs	r0, #255	; 0xff
 8000992:	2600      	movs	r6, #0
 8000994:	e7d3      	b.n	800093e <__aeabi_fadd+0x10e>
 8000996:	21fe      	movs	r1, #254	; 0xfe
 8000998:	1c6a      	adds	r2, r5, #1
 800099a:	4211      	tst	r1, r2
 800099c:	d073      	beq.n	8000a86 <__aeabi_fadd+0x256>
 800099e:	2aff      	cmp	r2, #255	; 0xff
 80009a0:	d0f6      	beq.n	8000990 <__aeabi_fadd+0x160>
 80009a2:	0015      	movs	r5, r2
 80009a4:	4467      	add	r7, ip
 80009a6:	087b      	lsrs	r3, r7, #1
 80009a8:	075a      	lsls	r2, r3, #29
 80009aa:	d1bb      	bne.n	8000924 <__aeabi_fadd+0xf4>
 80009ac:	08db      	lsrs	r3, r3, #3
 80009ae:	2dff      	cmp	r5, #255	; 0xff
 80009b0:	d00f      	beq.n	80009d2 <__aeabi_fadd+0x1a2>
 80009b2:	025b      	lsls	r3, r3, #9
 80009b4:	0a5e      	lsrs	r6, r3, #9
 80009b6:	b2e8      	uxtb	r0, r5
 80009b8:	e7c1      	b.n	800093e <__aeabi_fadd+0x10e>
 80009ba:	4662      	mov	r2, ip
 80009bc:	2a00      	cmp	r2, #0
 80009be:	d008      	beq.n	80009d2 <__aeabi_fadd+0x1a2>
 80009c0:	2280      	movs	r2, #128	; 0x80
 80009c2:	03d2      	lsls	r2, r2, #15
 80009c4:	4213      	tst	r3, r2
 80009c6:	d004      	beq.n	80009d2 <__aeabi_fadd+0x1a2>
 80009c8:	4640      	mov	r0, r8
 80009ca:	4210      	tst	r0, r2
 80009cc:	d101      	bne.n	80009d2 <__aeabi_fadd+0x1a2>
 80009ce:	000c      	movs	r4, r1
 80009d0:	4643      	mov	r3, r8
 80009d2:	2b00      	cmp	r3, #0
 80009d4:	d0dc      	beq.n	8000990 <__aeabi_fadd+0x160>
 80009d6:	2680      	movs	r6, #128	; 0x80
 80009d8:	03f6      	lsls	r6, r6, #15
 80009da:	431e      	orrs	r6, r3
 80009dc:	0276      	lsls	r6, r6, #9
 80009de:	20ff      	movs	r0, #255	; 0xff
 80009e0:	0a76      	lsrs	r6, r6, #9
 80009e2:	e7ac      	b.n	800093e <__aeabi_fadd+0x10e>
 80009e4:	2a00      	cmp	r2, #0
 80009e6:	d0d6      	beq.n	8000996 <__aeabi_fadd+0x166>
 80009e8:	1b42      	subs	r2, r0, r5
 80009ea:	2d00      	cmp	r5, #0
 80009ec:	d05c      	beq.n	8000aa8 <__aeabi_fadd+0x278>
 80009ee:	28ff      	cmp	r0, #255	; 0xff
 80009f0:	d0ee      	beq.n	80009d0 <__aeabi_fadd+0x1a0>
 80009f2:	2380      	movs	r3, #128	; 0x80
 80009f4:	04db      	lsls	r3, r3, #19
 80009f6:	431f      	orrs	r7, r3
 80009f8:	2a1b      	cmp	r2, #27
 80009fa:	dc00      	bgt.n	80009fe <__aeabi_fadd+0x1ce>
 80009fc:	e082      	b.n	8000b04 <__aeabi_fadd+0x2d4>
 80009fe:	2301      	movs	r3, #1
 8000a00:	464d      	mov	r5, r9
 8000a02:	4463      	add	r3, ip
 8000a04:	e763      	b.n	80008ce <__aeabi_fadd+0x9e>
 8000a06:	2220      	movs	r2, #32
 8000a08:	1b40      	subs	r0, r0, r5
 8000a0a:	3001      	adds	r0, #1
 8000a0c:	1a12      	subs	r2, r2, r0
 8000a0e:	0019      	movs	r1, r3
 8000a10:	4093      	lsls	r3, r2
 8000a12:	40c1      	lsrs	r1, r0
 8000a14:	1e5a      	subs	r2, r3, #1
 8000a16:	4193      	sbcs	r3, r2
 8000a18:	2500      	movs	r5, #0
 8000a1a:	430b      	orrs	r3, r1
 8000a1c:	e780      	b.n	8000920 <__aeabi_fadd+0xf0>
 8000a1e:	2320      	movs	r3, #32
 8000a20:	4661      	mov	r1, ip
 8000a22:	1a1b      	subs	r3, r3, r0
 8000a24:	4099      	lsls	r1, r3
 8000a26:	4662      	mov	r2, ip
 8000a28:	000b      	movs	r3, r1
 8000a2a:	40c2      	lsrs	r2, r0
 8000a2c:	1e59      	subs	r1, r3, #1
 8000a2e:	418b      	sbcs	r3, r1
 8000a30:	4313      	orrs	r3, r2
 8000a32:	e764      	b.n	80008fe <__aeabi_fadd+0xce>
 8000a34:	000c      	movs	r4, r1
 8000a36:	4643      	mov	r3, r8
 8000a38:	0015      	movs	r5, r2
 8000a3a:	e7b8      	b.n	80009ae <__aeabi_fadd+0x17e>
 8000a3c:	4663      	mov	r3, ip
 8000a3e:	1afe      	subs	r6, r7, r3
 8000a40:	0173      	lsls	r3, r6, #5
 8000a42:	d445      	bmi.n	8000ad0 <__aeabi_fadd+0x2a0>
 8000a44:	2e00      	cmp	r6, #0
 8000a46:	d000      	beq.n	8000a4a <__aeabi_fadd+0x21a>
 8000a48:	e75e      	b.n	8000908 <__aeabi_fadd+0xd8>
 8000a4a:	2400      	movs	r4, #0
 8000a4c:	2000      	movs	r0, #0
 8000a4e:	2600      	movs	r6, #0
 8000a50:	e775      	b.n	800093e <__aeabi_fadd+0x10e>
 8000a52:	2bff      	cmp	r3, #255	; 0xff
 8000a54:	d0bb      	beq.n	80009ce <__aeabi_fadd+0x19e>
 8000a56:	2380      	movs	r3, #128	; 0x80
 8000a58:	04db      	lsls	r3, r3, #19
 8000a5a:	431f      	orrs	r7, r3
 8000a5c:	2a1b      	cmp	r2, #27
 8000a5e:	dd47      	ble.n	8000af0 <__aeabi_fadd+0x2c0>
 8000a60:	2301      	movs	r3, #1
 8000a62:	4662      	mov	r2, ip
 8000a64:	000c      	movs	r4, r1
 8000a66:	464d      	mov	r5, r9
 8000a68:	1ad3      	subs	r3, r2, r3
 8000a6a:	e749      	b.n	8000900 <__aeabi_fadd+0xd0>
 8000a6c:	0005      	movs	r5, r0
 8000a6e:	e79e      	b.n	80009ae <__aeabi_fadd+0x17e>
 8000a70:	4661      	mov	r1, ip
 8000a72:	2320      	movs	r3, #32
 8000a74:	40d1      	lsrs	r1, r2
 8000a76:	1a9b      	subs	r3, r3, r2
 8000a78:	4662      	mov	r2, ip
 8000a7a:	409a      	lsls	r2, r3
 8000a7c:	0013      	movs	r3, r2
 8000a7e:	1e5a      	subs	r2, r3, #1
 8000a80:	4193      	sbcs	r3, r2
 8000a82:	430b      	orrs	r3, r1
 8000a84:	e722      	b.n	80008cc <__aeabi_fadd+0x9c>
 8000a86:	2d00      	cmp	r5, #0
 8000a88:	d146      	bne.n	8000b18 <__aeabi_fadd+0x2e8>
 8000a8a:	2f00      	cmp	r7, #0
 8000a8c:	d062      	beq.n	8000b54 <__aeabi_fadd+0x324>
 8000a8e:	4663      	mov	r3, ip
 8000a90:	2000      	movs	r0, #0
 8000a92:	2b00      	cmp	r3, #0
 8000a94:	d100      	bne.n	8000a98 <__aeabi_fadd+0x268>
 8000a96:	e752      	b.n	800093e <__aeabi_fadd+0x10e>
 8000a98:	003b      	movs	r3, r7
 8000a9a:	4463      	add	r3, ip
 8000a9c:	015a      	lsls	r2, r3, #5
 8000a9e:	d583      	bpl.n	80009a8 <__aeabi_fadd+0x178>
 8000aa0:	4a32      	ldr	r2, [pc, #200]	; (8000b6c <__aeabi_fadd+0x33c>)
 8000aa2:	3501      	adds	r5, #1
 8000aa4:	4013      	ands	r3, r2
 8000aa6:	e77f      	b.n	80009a8 <__aeabi_fadd+0x178>
 8000aa8:	2f00      	cmp	r7, #0
 8000aaa:	d0c4      	beq.n	8000a36 <__aeabi_fadd+0x206>
 8000aac:	1e53      	subs	r3, r2, #1
 8000aae:	2a01      	cmp	r2, #1
 8000ab0:	d012      	beq.n	8000ad8 <__aeabi_fadd+0x2a8>
 8000ab2:	2aff      	cmp	r2, #255	; 0xff
 8000ab4:	d08c      	beq.n	80009d0 <__aeabi_fadd+0x1a0>
 8000ab6:	001a      	movs	r2, r3
 8000ab8:	e79e      	b.n	80009f8 <__aeabi_fadd+0x1c8>
 8000aba:	2f00      	cmp	r7, #0
 8000abc:	d000      	beq.n	8000ac0 <__aeabi_fadd+0x290>
 8000abe:	e77c      	b.n	80009ba <__aeabi_fadd+0x18a>
 8000ac0:	4663      	mov	r3, ip
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	d183      	bne.n	80009ce <__aeabi_fadd+0x19e>
 8000ac6:	2680      	movs	r6, #128	; 0x80
 8000ac8:	2400      	movs	r4, #0
 8000aca:	20ff      	movs	r0, #255	; 0xff
 8000acc:	03f6      	lsls	r6, r6, #15
 8000ace:	e736      	b.n	800093e <__aeabi_fadd+0x10e>
 8000ad0:	4663      	mov	r3, ip
 8000ad2:	000c      	movs	r4, r1
 8000ad4:	1bde      	subs	r6, r3, r7
 8000ad6:	e717      	b.n	8000908 <__aeabi_fadd+0xd8>
 8000ad8:	003b      	movs	r3, r7
 8000ada:	4463      	add	r3, ip
 8000adc:	2501      	movs	r5, #1
 8000ade:	015a      	lsls	r2, r3, #5
 8000ae0:	d400      	bmi.n	8000ae4 <__aeabi_fadd+0x2b4>
 8000ae2:	e761      	b.n	80009a8 <__aeabi_fadd+0x178>
 8000ae4:	2502      	movs	r5, #2
 8000ae6:	e6f7      	b.n	80008d8 <__aeabi_fadd+0xa8>
 8000ae8:	4663      	mov	r3, ip
 8000aea:	2501      	movs	r5, #1
 8000aec:	1afb      	subs	r3, r7, r3
 8000aee:	e707      	b.n	8000900 <__aeabi_fadd+0xd0>
 8000af0:	2320      	movs	r3, #32
 8000af2:	1a9b      	subs	r3, r3, r2
 8000af4:	0038      	movs	r0, r7
 8000af6:	409f      	lsls	r7, r3
 8000af8:	003b      	movs	r3, r7
 8000afa:	40d0      	lsrs	r0, r2
 8000afc:	1e5a      	subs	r2, r3, #1
 8000afe:	4193      	sbcs	r3, r2
 8000b00:	4303      	orrs	r3, r0
 8000b02:	e7ae      	b.n	8000a62 <__aeabi_fadd+0x232>
 8000b04:	2320      	movs	r3, #32
 8000b06:	1a9b      	subs	r3, r3, r2
 8000b08:	0039      	movs	r1, r7
 8000b0a:	409f      	lsls	r7, r3
 8000b0c:	003b      	movs	r3, r7
 8000b0e:	40d1      	lsrs	r1, r2
 8000b10:	1e5a      	subs	r2, r3, #1
 8000b12:	4193      	sbcs	r3, r2
 8000b14:	430b      	orrs	r3, r1
 8000b16:	e773      	b.n	8000a00 <__aeabi_fadd+0x1d0>
 8000b18:	2f00      	cmp	r7, #0
 8000b1a:	d100      	bne.n	8000b1e <__aeabi_fadd+0x2ee>
 8000b1c:	e758      	b.n	80009d0 <__aeabi_fadd+0x1a0>
 8000b1e:	4662      	mov	r2, ip
 8000b20:	2a00      	cmp	r2, #0
 8000b22:	d100      	bne.n	8000b26 <__aeabi_fadd+0x2f6>
 8000b24:	e755      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 8000b26:	2280      	movs	r2, #128	; 0x80
 8000b28:	03d2      	lsls	r2, r2, #15
 8000b2a:	4213      	tst	r3, r2
 8000b2c:	d100      	bne.n	8000b30 <__aeabi_fadd+0x300>
 8000b2e:	e750      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 8000b30:	4641      	mov	r1, r8
 8000b32:	4211      	tst	r1, r2
 8000b34:	d000      	beq.n	8000b38 <__aeabi_fadd+0x308>
 8000b36:	e74c      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 8000b38:	4643      	mov	r3, r8
 8000b3a:	e74a      	b.n	80009d2 <__aeabi_fadd+0x1a2>
 8000b3c:	4663      	mov	r3, ip
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d083      	beq.n	8000a4a <__aeabi_fadd+0x21a>
 8000b42:	000c      	movs	r4, r1
 8000b44:	4646      	mov	r6, r8
 8000b46:	2000      	movs	r0, #0
 8000b48:	e6f9      	b.n	800093e <__aeabi_fadd+0x10e>
 8000b4a:	4663      	mov	r3, ip
 8000b4c:	000c      	movs	r4, r1
 8000b4e:	1bdb      	subs	r3, r3, r7
 8000b50:	3501      	adds	r5, #1
 8000b52:	e6d5      	b.n	8000900 <__aeabi_fadd+0xd0>
 8000b54:	4646      	mov	r6, r8
 8000b56:	2000      	movs	r0, #0
 8000b58:	e6f1      	b.n	800093e <__aeabi_fadd+0x10e>
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	d000      	beq.n	8000b60 <__aeabi_fadd+0x330>
 8000b5e:	e723      	b.n	80009a8 <__aeabi_fadd+0x178>
 8000b60:	2400      	movs	r4, #0
 8000b62:	2600      	movs	r6, #0
 8000b64:	e6eb      	b.n	800093e <__aeabi_fadd+0x10e>
 8000b66:	46c0      	nop			; (mov r8, r8)
 8000b68:	7dffffff 	.word	0x7dffffff
 8000b6c:	fbffffff 	.word	0xfbffffff

08000b70 <__aeabi_fdiv>:
 8000b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b72:	464f      	mov	r7, r9
 8000b74:	4646      	mov	r6, r8
 8000b76:	46d6      	mov	lr, sl
 8000b78:	0245      	lsls	r5, r0, #9
 8000b7a:	b5c0      	push	{r6, r7, lr}
 8000b7c:	0047      	lsls	r7, r0, #1
 8000b7e:	1c0c      	adds	r4, r1, #0
 8000b80:	0a6d      	lsrs	r5, r5, #9
 8000b82:	0e3f      	lsrs	r7, r7, #24
 8000b84:	0fc6      	lsrs	r6, r0, #31
 8000b86:	2f00      	cmp	r7, #0
 8000b88:	d100      	bne.n	8000b8c <__aeabi_fdiv+0x1c>
 8000b8a:	e06f      	b.n	8000c6c <__aeabi_fdiv+0xfc>
 8000b8c:	2fff      	cmp	r7, #255	; 0xff
 8000b8e:	d100      	bne.n	8000b92 <__aeabi_fdiv+0x22>
 8000b90:	e074      	b.n	8000c7c <__aeabi_fdiv+0x10c>
 8000b92:	2300      	movs	r3, #0
 8000b94:	2280      	movs	r2, #128	; 0x80
 8000b96:	4699      	mov	r9, r3
 8000b98:	469a      	mov	sl, r3
 8000b9a:	00ed      	lsls	r5, r5, #3
 8000b9c:	04d2      	lsls	r2, r2, #19
 8000b9e:	4315      	orrs	r5, r2
 8000ba0:	3f7f      	subs	r7, #127	; 0x7f
 8000ba2:	0263      	lsls	r3, r4, #9
 8000ba4:	0a5b      	lsrs	r3, r3, #9
 8000ba6:	4698      	mov	r8, r3
 8000ba8:	0063      	lsls	r3, r4, #1
 8000baa:	0e1b      	lsrs	r3, r3, #24
 8000bac:	0fe4      	lsrs	r4, r4, #31
 8000bae:	2b00      	cmp	r3, #0
 8000bb0:	d04d      	beq.n	8000c4e <__aeabi_fdiv+0xde>
 8000bb2:	2bff      	cmp	r3, #255	; 0xff
 8000bb4:	d045      	beq.n	8000c42 <__aeabi_fdiv+0xd2>
 8000bb6:	4642      	mov	r2, r8
 8000bb8:	2180      	movs	r1, #128	; 0x80
 8000bba:	00d2      	lsls	r2, r2, #3
 8000bbc:	04c9      	lsls	r1, r1, #19
 8000bbe:	4311      	orrs	r1, r2
 8000bc0:	4688      	mov	r8, r1
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	3b7f      	subs	r3, #127	; 0x7f
 8000bc6:	0031      	movs	r1, r6
 8000bc8:	1aff      	subs	r7, r7, r3
 8000bca:	464b      	mov	r3, r9
 8000bcc:	4061      	eors	r1, r4
 8000bce:	b2c9      	uxtb	r1, r1
 8000bd0:	2b0f      	cmp	r3, #15
 8000bd2:	d900      	bls.n	8000bd6 <__aeabi_fdiv+0x66>
 8000bd4:	e0b8      	b.n	8000d48 <__aeabi_fdiv+0x1d8>
 8000bd6:	4870      	ldr	r0, [pc, #448]	; (8000d98 <__aeabi_fdiv+0x228>)
 8000bd8:	009b      	lsls	r3, r3, #2
 8000bda:	58c3      	ldr	r3, [r0, r3]
 8000bdc:	469f      	mov	pc, r3
 8000bde:	2300      	movs	r3, #0
 8000be0:	4698      	mov	r8, r3
 8000be2:	0026      	movs	r6, r4
 8000be4:	4645      	mov	r5, r8
 8000be6:	4692      	mov	sl, r2
 8000be8:	4653      	mov	r3, sl
 8000bea:	2b02      	cmp	r3, #2
 8000bec:	d100      	bne.n	8000bf0 <__aeabi_fdiv+0x80>
 8000bee:	e08d      	b.n	8000d0c <__aeabi_fdiv+0x19c>
 8000bf0:	2b03      	cmp	r3, #3
 8000bf2:	d100      	bne.n	8000bf6 <__aeabi_fdiv+0x86>
 8000bf4:	e0a1      	b.n	8000d3a <__aeabi_fdiv+0x1ca>
 8000bf6:	2b01      	cmp	r3, #1
 8000bf8:	d018      	beq.n	8000c2c <__aeabi_fdiv+0xbc>
 8000bfa:	003b      	movs	r3, r7
 8000bfc:	337f      	adds	r3, #127	; 0x7f
 8000bfe:	2b00      	cmp	r3, #0
 8000c00:	dd6d      	ble.n	8000cde <__aeabi_fdiv+0x16e>
 8000c02:	076a      	lsls	r2, r5, #29
 8000c04:	d004      	beq.n	8000c10 <__aeabi_fdiv+0xa0>
 8000c06:	220f      	movs	r2, #15
 8000c08:	402a      	ands	r2, r5
 8000c0a:	2a04      	cmp	r2, #4
 8000c0c:	d000      	beq.n	8000c10 <__aeabi_fdiv+0xa0>
 8000c0e:	3504      	adds	r5, #4
 8000c10:	012a      	lsls	r2, r5, #4
 8000c12:	d503      	bpl.n	8000c1c <__aeabi_fdiv+0xac>
 8000c14:	4b61      	ldr	r3, [pc, #388]	; (8000d9c <__aeabi_fdiv+0x22c>)
 8000c16:	401d      	ands	r5, r3
 8000c18:	003b      	movs	r3, r7
 8000c1a:	3380      	adds	r3, #128	; 0x80
 8000c1c:	2bfe      	cmp	r3, #254	; 0xfe
 8000c1e:	dd00      	ble.n	8000c22 <__aeabi_fdiv+0xb2>
 8000c20:	e074      	b.n	8000d0c <__aeabi_fdiv+0x19c>
 8000c22:	01aa      	lsls	r2, r5, #6
 8000c24:	0a52      	lsrs	r2, r2, #9
 8000c26:	b2d8      	uxtb	r0, r3
 8000c28:	e002      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000c2a:	000e      	movs	r6, r1
 8000c2c:	2000      	movs	r0, #0
 8000c2e:	2200      	movs	r2, #0
 8000c30:	05c0      	lsls	r0, r0, #23
 8000c32:	07f6      	lsls	r6, r6, #31
 8000c34:	4310      	orrs	r0, r2
 8000c36:	4330      	orrs	r0, r6
 8000c38:	bce0      	pop	{r5, r6, r7}
 8000c3a:	46ba      	mov	sl, r7
 8000c3c:	46b1      	mov	r9, r6
 8000c3e:	46a8      	mov	r8, r5
 8000c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c42:	4643      	mov	r3, r8
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	d13f      	bne.n	8000cc8 <__aeabi_fdiv+0x158>
 8000c48:	2202      	movs	r2, #2
 8000c4a:	3fff      	subs	r7, #255	; 0xff
 8000c4c:	e003      	b.n	8000c56 <__aeabi_fdiv+0xe6>
 8000c4e:	4643      	mov	r3, r8
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	d12d      	bne.n	8000cb0 <__aeabi_fdiv+0x140>
 8000c54:	2201      	movs	r2, #1
 8000c56:	0031      	movs	r1, r6
 8000c58:	464b      	mov	r3, r9
 8000c5a:	4061      	eors	r1, r4
 8000c5c:	b2c9      	uxtb	r1, r1
 8000c5e:	4313      	orrs	r3, r2
 8000c60:	2b0f      	cmp	r3, #15
 8000c62:	d838      	bhi.n	8000cd6 <__aeabi_fdiv+0x166>
 8000c64:	484e      	ldr	r0, [pc, #312]	; (8000da0 <__aeabi_fdiv+0x230>)
 8000c66:	009b      	lsls	r3, r3, #2
 8000c68:	58c3      	ldr	r3, [r0, r3]
 8000c6a:	469f      	mov	pc, r3
 8000c6c:	2d00      	cmp	r5, #0
 8000c6e:	d113      	bne.n	8000c98 <__aeabi_fdiv+0x128>
 8000c70:	2304      	movs	r3, #4
 8000c72:	4699      	mov	r9, r3
 8000c74:	3b03      	subs	r3, #3
 8000c76:	2700      	movs	r7, #0
 8000c78:	469a      	mov	sl, r3
 8000c7a:	e792      	b.n	8000ba2 <__aeabi_fdiv+0x32>
 8000c7c:	2d00      	cmp	r5, #0
 8000c7e:	d105      	bne.n	8000c8c <__aeabi_fdiv+0x11c>
 8000c80:	2308      	movs	r3, #8
 8000c82:	4699      	mov	r9, r3
 8000c84:	3b06      	subs	r3, #6
 8000c86:	27ff      	movs	r7, #255	; 0xff
 8000c88:	469a      	mov	sl, r3
 8000c8a:	e78a      	b.n	8000ba2 <__aeabi_fdiv+0x32>
 8000c8c:	230c      	movs	r3, #12
 8000c8e:	4699      	mov	r9, r3
 8000c90:	3b09      	subs	r3, #9
 8000c92:	27ff      	movs	r7, #255	; 0xff
 8000c94:	469a      	mov	sl, r3
 8000c96:	e784      	b.n	8000ba2 <__aeabi_fdiv+0x32>
 8000c98:	0028      	movs	r0, r5
 8000c9a:	f002 fb41 	bl	8003320 <__clzsi2>
 8000c9e:	2776      	movs	r7, #118	; 0x76
 8000ca0:	1f43      	subs	r3, r0, #5
 8000ca2:	409d      	lsls	r5, r3
 8000ca4:	2300      	movs	r3, #0
 8000ca6:	427f      	negs	r7, r7
 8000ca8:	4699      	mov	r9, r3
 8000caa:	469a      	mov	sl, r3
 8000cac:	1a3f      	subs	r7, r7, r0
 8000cae:	e778      	b.n	8000ba2 <__aeabi_fdiv+0x32>
 8000cb0:	4640      	mov	r0, r8
 8000cb2:	f002 fb35 	bl	8003320 <__clzsi2>
 8000cb6:	4642      	mov	r2, r8
 8000cb8:	1f43      	subs	r3, r0, #5
 8000cba:	409a      	lsls	r2, r3
 8000cbc:	2376      	movs	r3, #118	; 0x76
 8000cbe:	425b      	negs	r3, r3
 8000cc0:	4690      	mov	r8, r2
 8000cc2:	1a1b      	subs	r3, r3, r0
 8000cc4:	2200      	movs	r2, #0
 8000cc6:	e77e      	b.n	8000bc6 <__aeabi_fdiv+0x56>
 8000cc8:	2303      	movs	r3, #3
 8000cca:	464a      	mov	r2, r9
 8000ccc:	431a      	orrs	r2, r3
 8000cce:	4691      	mov	r9, r2
 8000cd0:	33fc      	adds	r3, #252	; 0xfc
 8000cd2:	2203      	movs	r2, #3
 8000cd4:	e777      	b.n	8000bc6 <__aeabi_fdiv+0x56>
 8000cd6:	000e      	movs	r6, r1
 8000cd8:	20ff      	movs	r0, #255	; 0xff
 8000cda:	2200      	movs	r2, #0
 8000cdc:	e7a8      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000cde:	2201      	movs	r2, #1
 8000ce0:	1ad3      	subs	r3, r2, r3
 8000ce2:	2b1b      	cmp	r3, #27
 8000ce4:	dca2      	bgt.n	8000c2c <__aeabi_fdiv+0xbc>
 8000ce6:	379e      	adds	r7, #158	; 0x9e
 8000ce8:	002a      	movs	r2, r5
 8000cea:	40bd      	lsls	r5, r7
 8000cec:	40da      	lsrs	r2, r3
 8000cee:	1e6b      	subs	r3, r5, #1
 8000cf0:	419d      	sbcs	r5, r3
 8000cf2:	4315      	orrs	r5, r2
 8000cf4:	076a      	lsls	r2, r5, #29
 8000cf6:	d004      	beq.n	8000d02 <__aeabi_fdiv+0x192>
 8000cf8:	220f      	movs	r2, #15
 8000cfa:	402a      	ands	r2, r5
 8000cfc:	2a04      	cmp	r2, #4
 8000cfe:	d000      	beq.n	8000d02 <__aeabi_fdiv+0x192>
 8000d00:	3504      	adds	r5, #4
 8000d02:	016a      	lsls	r2, r5, #5
 8000d04:	d544      	bpl.n	8000d90 <__aeabi_fdiv+0x220>
 8000d06:	2001      	movs	r0, #1
 8000d08:	2200      	movs	r2, #0
 8000d0a:	e791      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000d0c:	20ff      	movs	r0, #255	; 0xff
 8000d0e:	2200      	movs	r2, #0
 8000d10:	e78e      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000d12:	2280      	movs	r2, #128	; 0x80
 8000d14:	2600      	movs	r6, #0
 8000d16:	20ff      	movs	r0, #255	; 0xff
 8000d18:	03d2      	lsls	r2, r2, #15
 8000d1a:	e789      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	4698      	mov	r8, r3
 8000d20:	2280      	movs	r2, #128	; 0x80
 8000d22:	03d2      	lsls	r2, r2, #15
 8000d24:	4215      	tst	r5, r2
 8000d26:	d008      	beq.n	8000d3a <__aeabi_fdiv+0x1ca>
 8000d28:	4643      	mov	r3, r8
 8000d2a:	4213      	tst	r3, r2
 8000d2c:	d105      	bne.n	8000d3a <__aeabi_fdiv+0x1ca>
 8000d2e:	431a      	orrs	r2, r3
 8000d30:	0252      	lsls	r2, r2, #9
 8000d32:	0026      	movs	r6, r4
 8000d34:	20ff      	movs	r0, #255	; 0xff
 8000d36:	0a52      	lsrs	r2, r2, #9
 8000d38:	e77a      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000d3a:	2280      	movs	r2, #128	; 0x80
 8000d3c:	03d2      	lsls	r2, r2, #15
 8000d3e:	432a      	orrs	r2, r5
 8000d40:	0252      	lsls	r2, r2, #9
 8000d42:	20ff      	movs	r0, #255	; 0xff
 8000d44:	0a52      	lsrs	r2, r2, #9
 8000d46:	e773      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000d48:	4642      	mov	r2, r8
 8000d4a:	016b      	lsls	r3, r5, #5
 8000d4c:	0155      	lsls	r5, r2, #5
 8000d4e:	42ab      	cmp	r3, r5
 8000d50:	d21a      	bcs.n	8000d88 <__aeabi_fdiv+0x218>
 8000d52:	201b      	movs	r0, #27
 8000d54:	2200      	movs	r2, #0
 8000d56:	3f01      	subs	r7, #1
 8000d58:	2601      	movs	r6, #1
 8000d5a:	001c      	movs	r4, r3
 8000d5c:	0052      	lsls	r2, r2, #1
 8000d5e:	005b      	lsls	r3, r3, #1
 8000d60:	2c00      	cmp	r4, #0
 8000d62:	db01      	blt.n	8000d68 <__aeabi_fdiv+0x1f8>
 8000d64:	429d      	cmp	r5, r3
 8000d66:	d801      	bhi.n	8000d6c <__aeabi_fdiv+0x1fc>
 8000d68:	1b5b      	subs	r3, r3, r5
 8000d6a:	4332      	orrs	r2, r6
 8000d6c:	3801      	subs	r0, #1
 8000d6e:	2800      	cmp	r0, #0
 8000d70:	d1f3      	bne.n	8000d5a <__aeabi_fdiv+0x1ea>
 8000d72:	1e58      	subs	r0, r3, #1
 8000d74:	4183      	sbcs	r3, r0
 8000d76:	4313      	orrs	r3, r2
 8000d78:	001d      	movs	r5, r3
 8000d7a:	003b      	movs	r3, r7
 8000d7c:	337f      	adds	r3, #127	; 0x7f
 8000d7e:	000e      	movs	r6, r1
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	dd00      	ble.n	8000d86 <__aeabi_fdiv+0x216>
 8000d84:	e73d      	b.n	8000c02 <__aeabi_fdiv+0x92>
 8000d86:	e7aa      	b.n	8000cde <__aeabi_fdiv+0x16e>
 8000d88:	201a      	movs	r0, #26
 8000d8a:	2201      	movs	r2, #1
 8000d8c:	1b5b      	subs	r3, r3, r5
 8000d8e:	e7e3      	b.n	8000d58 <__aeabi_fdiv+0x1e8>
 8000d90:	01aa      	lsls	r2, r5, #6
 8000d92:	2000      	movs	r0, #0
 8000d94:	0a52      	lsrs	r2, r2, #9
 8000d96:	e74b      	b.n	8000c30 <__aeabi_fdiv+0xc0>
 8000d98:	0800a540 	.word	0x0800a540
 8000d9c:	f7ffffff 	.word	0xf7ffffff
 8000da0:	0800a580 	.word	0x0800a580

08000da4 <__eqsf2>:
 8000da4:	b570      	push	{r4, r5, r6, lr}
 8000da6:	0042      	lsls	r2, r0, #1
 8000da8:	0245      	lsls	r5, r0, #9
 8000daa:	024e      	lsls	r6, r1, #9
 8000dac:	004c      	lsls	r4, r1, #1
 8000dae:	0fc3      	lsrs	r3, r0, #31
 8000db0:	0a6d      	lsrs	r5, r5, #9
 8000db2:	2001      	movs	r0, #1
 8000db4:	0e12      	lsrs	r2, r2, #24
 8000db6:	0a76      	lsrs	r6, r6, #9
 8000db8:	0e24      	lsrs	r4, r4, #24
 8000dba:	0fc9      	lsrs	r1, r1, #31
 8000dbc:	2aff      	cmp	r2, #255	; 0xff
 8000dbe:	d006      	beq.n	8000dce <__eqsf2+0x2a>
 8000dc0:	2cff      	cmp	r4, #255	; 0xff
 8000dc2:	d003      	beq.n	8000dcc <__eqsf2+0x28>
 8000dc4:	42a2      	cmp	r2, r4
 8000dc6:	d101      	bne.n	8000dcc <__eqsf2+0x28>
 8000dc8:	42b5      	cmp	r5, r6
 8000dca:	d006      	beq.n	8000dda <__eqsf2+0x36>
 8000dcc:	bd70      	pop	{r4, r5, r6, pc}
 8000dce:	2d00      	cmp	r5, #0
 8000dd0:	d1fc      	bne.n	8000dcc <__eqsf2+0x28>
 8000dd2:	2cff      	cmp	r4, #255	; 0xff
 8000dd4:	d1fa      	bne.n	8000dcc <__eqsf2+0x28>
 8000dd6:	2e00      	cmp	r6, #0
 8000dd8:	d1f8      	bne.n	8000dcc <__eqsf2+0x28>
 8000dda:	428b      	cmp	r3, r1
 8000ddc:	d006      	beq.n	8000dec <__eqsf2+0x48>
 8000dde:	2001      	movs	r0, #1
 8000de0:	2a00      	cmp	r2, #0
 8000de2:	d1f3      	bne.n	8000dcc <__eqsf2+0x28>
 8000de4:	0028      	movs	r0, r5
 8000de6:	1e43      	subs	r3, r0, #1
 8000de8:	4198      	sbcs	r0, r3
 8000dea:	e7ef      	b.n	8000dcc <__eqsf2+0x28>
 8000dec:	2000      	movs	r0, #0
 8000dee:	e7ed      	b.n	8000dcc <__eqsf2+0x28>

08000df0 <__gesf2>:
 8000df0:	b570      	push	{r4, r5, r6, lr}
 8000df2:	0042      	lsls	r2, r0, #1
 8000df4:	0245      	lsls	r5, r0, #9
 8000df6:	024e      	lsls	r6, r1, #9
 8000df8:	004c      	lsls	r4, r1, #1
 8000dfa:	0fc3      	lsrs	r3, r0, #31
 8000dfc:	0a6d      	lsrs	r5, r5, #9
 8000dfe:	0e12      	lsrs	r2, r2, #24
 8000e00:	0a76      	lsrs	r6, r6, #9
 8000e02:	0e24      	lsrs	r4, r4, #24
 8000e04:	0fc8      	lsrs	r0, r1, #31
 8000e06:	2aff      	cmp	r2, #255	; 0xff
 8000e08:	d01b      	beq.n	8000e42 <__gesf2+0x52>
 8000e0a:	2cff      	cmp	r4, #255	; 0xff
 8000e0c:	d00e      	beq.n	8000e2c <__gesf2+0x3c>
 8000e0e:	2a00      	cmp	r2, #0
 8000e10:	d11b      	bne.n	8000e4a <__gesf2+0x5a>
 8000e12:	2c00      	cmp	r4, #0
 8000e14:	d101      	bne.n	8000e1a <__gesf2+0x2a>
 8000e16:	2e00      	cmp	r6, #0
 8000e18:	d01c      	beq.n	8000e54 <__gesf2+0x64>
 8000e1a:	2d00      	cmp	r5, #0
 8000e1c:	d00c      	beq.n	8000e38 <__gesf2+0x48>
 8000e1e:	4283      	cmp	r3, r0
 8000e20:	d01c      	beq.n	8000e5c <__gesf2+0x6c>
 8000e22:	2102      	movs	r1, #2
 8000e24:	1e58      	subs	r0, r3, #1
 8000e26:	4008      	ands	r0, r1
 8000e28:	3801      	subs	r0, #1
 8000e2a:	bd70      	pop	{r4, r5, r6, pc}
 8000e2c:	2e00      	cmp	r6, #0
 8000e2e:	d122      	bne.n	8000e76 <__gesf2+0x86>
 8000e30:	2a00      	cmp	r2, #0
 8000e32:	d1f4      	bne.n	8000e1e <__gesf2+0x2e>
 8000e34:	2d00      	cmp	r5, #0
 8000e36:	d1f2      	bne.n	8000e1e <__gesf2+0x2e>
 8000e38:	2800      	cmp	r0, #0
 8000e3a:	d1f6      	bne.n	8000e2a <__gesf2+0x3a>
 8000e3c:	2001      	movs	r0, #1
 8000e3e:	4240      	negs	r0, r0
 8000e40:	e7f3      	b.n	8000e2a <__gesf2+0x3a>
 8000e42:	2d00      	cmp	r5, #0
 8000e44:	d117      	bne.n	8000e76 <__gesf2+0x86>
 8000e46:	2cff      	cmp	r4, #255	; 0xff
 8000e48:	d0f0      	beq.n	8000e2c <__gesf2+0x3c>
 8000e4a:	2c00      	cmp	r4, #0
 8000e4c:	d1e7      	bne.n	8000e1e <__gesf2+0x2e>
 8000e4e:	2e00      	cmp	r6, #0
 8000e50:	d1e5      	bne.n	8000e1e <__gesf2+0x2e>
 8000e52:	e7e6      	b.n	8000e22 <__gesf2+0x32>
 8000e54:	2000      	movs	r0, #0
 8000e56:	2d00      	cmp	r5, #0
 8000e58:	d0e7      	beq.n	8000e2a <__gesf2+0x3a>
 8000e5a:	e7e2      	b.n	8000e22 <__gesf2+0x32>
 8000e5c:	42a2      	cmp	r2, r4
 8000e5e:	dc05      	bgt.n	8000e6c <__gesf2+0x7c>
 8000e60:	dbea      	blt.n	8000e38 <__gesf2+0x48>
 8000e62:	42b5      	cmp	r5, r6
 8000e64:	d802      	bhi.n	8000e6c <__gesf2+0x7c>
 8000e66:	d3e7      	bcc.n	8000e38 <__gesf2+0x48>
 8000e68:	2000      	movs	r0, #0
 8000e6a:	e7de      	b.n	8000e2a <__gesf2+0x3a>
 8000e6c:	4243      	negs	r3, r0
 8000e6e:	4158      	adcs	r0, r3
 8000e70:	0040      	lsls	r0, r0, #1
 8000e72:	3801      	subs	r0, #1
 8000e74:	e7d9      	b.n	8000e2a <__gesf2+0x3a>
 8000e76:	2002      	movs	r0, #2
 8000e78:	4240      	negs	r0, r0
 8000e7a:	e7d6      	b.n	8000e2a <__gesf2+0x3a>

08000e7c <__lesf2>:
 8000e7c:	b570      	push	{r4, r5, r6, lr}
 8000e7e:	0042      	lsls	r2, r0, #1
 8000e80:	0245      	lsls	r5, r0, #9
 8000e82:	024e      	lsls	r6, r1, #9
 8000e84:	004c      	lsls	r4, r1, #1
 8000e86:	0fc3      	lsrs	r3, r0, #31
 8000e88:	0a6d      	lsrs	r5, r5, #9
 8000e8a:	0e12      	lsrs	r2, r2, #24
 8000e8c:	0a76      	lsrs	r6, r6, #9
 8000e8e:	0e24      	lsrs	r4, r4, #24
 8000e90:	0fc8      	lsrs	r0, r1, #31
 8000e92:	2aff      	cmp	r2, #255	; 0xff
 8000e94:	d00b      	beq.n	8000eae <__lesf2+0x32>
 8000e96:	2cff      	cmp	r4, #255	; 0xff
 8000e98:	d00d      	beq.n	8000eb6 <__lesf2+0x3a>
 8000e9a:	2a00      	cmp	r2, #0
 8000e9c:	d11f      	bne.n	8000ede <__lesf2+0x62>
 8000e9e:	2c00      	cmp	r4, #0
 8000ea0:	d116      	bne.n	8000ed0 <__lesf2+0x54>
 8000ea2:	2e00      	cmp	r6, #0
 8000ea4:	d114      	bne.n	8000ed0 <__lesf2+0x54>
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	2d00      	cmp	r5, #0
 8000eaa:	d010      	beq.n	8000ece <__lesf2+0x52>
 8000eac:	e009      	b.n	8000ec2 <__lesf2+0x46>
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d10c      	bne.n	8000ecc <__lesf2+0x50>
 8000eb2:	2cff      	cmp	r4, #255	; 0xff
 8000eb4:	d113      	bne.n	8000ede <__lesf2+0x62>
 8000eb6:	2e00      	cmp	r6, #0
 8000eb8:	d108      	bne.n	8000ecc <__lesf2+0x50>
 8000eba:	2a00      	cmp	r2, #0
 8000ebc:	d008      	beq.n	8000ed0 <__lesf2+0x54>
 8000ebe:	4283      	cmp	r3, r0
 8000ec0:	d012      	beq.n	8000ee8 <__lesf2+0x6c>
 8000ec2:	2102      	movs	r1, #2
 8000ec4:	1e58      	subs	r0, r3, #1
 8000ec6:	4008      	ands	r0, r1
 8000ec8:	3801      	subs	r0, #1
 8000eca:	e000      	b.n	8000ece <__lesf2+0x52>
 8000ecc:	2002      	movs	r0, #2
 8000ece:	bd70      	pop	{r4, r5, r6, pc}
 8000ed0:	2d00      	cmp	r5, #0
 8000ed2:	d1f4      	bne.n	8000ebe <__lesf2+0x42>
 8000ed4:	2800      	cmp	r0, #0
 8000ed6:	d1fa      	bne.n	8000ece <__lesf2+0x52>
 8000ed8:	2001      	movs	r0, #1
 8000eda:	4240      	negs	r0, r0
 8000edc:	e7f7      	b.n	8000ece <__lesf2+0x52>
 8000ede:	2c00      	cmp	r4, #0
 8000ee0:	d1ed      	bne.n	8000ebe <__lesf2+0x42>
 8000ee2:	2e00      	cmp	r6, #0
 8000ee4:	d1eb      	bne.n	8000ebe <__lesf2+0x42>
 8000ee6:	e7ec      	b.n	8000ec2 <__lesf2+0x46>
 8000ee8:	42a2      	cmp	r2, r4
 8000eea:	dc05      	bgt.n	8000ef8 <__lesf2+0x7c>
 8000eec:	dbf2      	blt.n	8000ed4 <__lesf2+0x58>
 8000eee:	42b5      	cmp	r5, r6
 8000ef0:	d802      	bhi.n	8000ef8 <__lesf2+0x7c>
 8000ef2:	d3ef      	bcc.n	8000ed4 <__lesf2+0x58>
 8000ef4:	2000      	movs	r0, #0
 8000ef6:	e7ea      	b.n	8000ece <__lesf2+0x52>
 8000ef8:	4243      	negs	r3, r0
 8000efa:	4158      	adcs	r0, r3
 8000efc:	0040      	lsls	r0, r0, #1
 8000efe:	3801      	subs	r0, #1
 8000f00:	e7e5      	b.n	8000ece <__lesf2+0x52>
 8000f02:	46c0      	nop			; (mov r8, r8)

08000f04 <__aeabi_fmul>:
 8000f04:	0243      	lsls	r3, r0, #9
 8000f06:	0a5b      	lsrs	r3, r3, #9
 8000f08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f0a:	464f      	mov	r7, r9
 8000f0c:	4646      	mov	r6, r8
 8000f0e:	4699      	mov	r9, r3
 8000f10:	46d6      	mov	lr, sl
 8000f12:	0fc3      	lsrs	r3, r0, #31
 8000f14:	0045      	lsls	r5, r0, #1
 8000f16:	4698      	mov	r8, r3
 8000f18:	b5c0      	push	{r6, r7, lr}
 8000f1a:	464b      	mov	r3, r9
 8000f1c:	1c0f      	adds	r7, r1, #0
 8000f1e:	0e2d      	lsrs	r5, r5, #24
 8000f20:	d100      	bne.n	8000f24 <__aeabi_fmul+0x20>
 8000f22:	e0cb      	b.n	80010bc <__aeabi_fmul+0x1b8>
 8000f24:	2dff      	cmp	r5, #255	; 0xff
 8000f26:	d100      	bne.n	8000f2a <__aeabi_fmul+0x26>
 8000f28:	e0cf      	b.n	80010ca <__aeabi_fmul+0x1c6>
 8000f2a:	2280      	movs	r2, #128	; 0x80
 8000f2c:	00db      	lsls	r3, r3, #3
 8000f2e:	04d2      	lsls	r2, r2, #19
 8000f30:	431a      	orrs	r2, r3
 8000f32:	2300      	movs	r3, #0
 8000f34:	4691      	mov	r9, r2
 8000f36:	2600      	movs	r6, #0
 8000f38:	469a      	mov	sl, r3
 8000f3a:	3d7f      	subs	r5, #127	; 0x7f
 8000f3c:	027c      	lsls	r4, r7, #9
 8000f3e:	007b      	lsls	r3, r7, #1
 8000f40:	0a64      	lsrs	r4, r4, #9
 8000f42:	0e1b      	lsrs	r3, r3, #24
 8000f44:	0fff      	lsrs	r7, r7, #31
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d100      	bne.n	8000f4c <__aeabi_fmul+0x48>
 8000f4a:	e0a9      	b.n	80010a0 <__aeabi_fmul+0x19c>
 8000f4c:	2bff      	cmp	r3, #255	; 0xff
 8000f4e:	d011      	beq.n	8000f74 <__aeabi_fmul+0x70>
 8000f50:	2280      	movs	r2, #128	; 0x80
 8000f52:	00e4      	lsls	r4, r4, #3
 8000f54:	04d2      	lsls	r2, r2, #19
 8000f56:	4314      	orrs	r4, r2
 8000f58:	4642      	mov	r2, r8
 8000f5a:	3b7f      	subs	r3, #127	; 0x7f
 8000f5c:	195b      	adds	r3, r3, r5
 8000f5e:	407a      	eors	r2, r7
 8000f60:	2000      	movs	r0, #0
 8000f62:	b2d2      	uxtb	r2, r2
 8000f64:	1c5d      	adds	r5, r3, #1
 8000f66:	2e0a      	cmp	r6, #10
 8000f68:	dd13      	ble.n	8000f92 <__aeabi_fmul+0x8e>
 8000f6a:	003a      	movs	r2, r7
 8000f6c:	2e0b      	cmp	r6, #11
 8000f6e:	d047      	beq.n	8001000 <__aeabi_fmul+0xfc>
 8000f70:	4647      	mov	r7, r8
 8000f72:	e03f      	b.n	8000ff4 <__aeabi_fmul+0xf0>
 8000f74:	002b      	movs	r3, r5
 8000f76:	33ff      	adds	r3, #255	; 0xff
 8000f78:	2c00      	cmp	r4, #0
 8000f7a:	d11e      	bne.n	8000fba <__aeabi_fmul+0xb6>
 8000f7c:	2202      	movs	r2, #2
 8000f7e:	4316      	orrs	r6, r2
 8000f80:	4642      	mov	r2, r8
 8000f82:	3501      	adds	r5, #1
 8000f84:	407a      	eors	r2, r7
 8000f86:	b2d2      	uxtb	r2, r2
 8000f88:	35ff      	adds	r5, #255	; 0xff
 8000f8a:	2e0a      	cmp	r6, #10
 8000f8c:	dd00      	ble.n	8000f90 <__aeabi_fmul+0x8c>
 8000f8e:	e0e4      	b.n	800115a <__aeabi_fmul+0x256>
 8000f90:	2002      	movs	r0, #2
 8000f92:	2e02      	cmp	r6, #2
 8000f94:	dc1c      	bgt.n	8000fd0 <__aeabi_fmul+0xcc>
 8000f96:	3e01      	subs	r6, #1
 8000f98:	2e01      	cmp	r6, #1
 8000f9a:	d842      	bhi.n	8001022 <__aeabi_fmul+0x11e>
 8000f9c:	2802      	cmp	r0, #2
 8000f9e:	d03d      	beq.n	800101c <__aeabi_fmul+0x118>
 8000fa0:	2801      	cmp	r0, #1
 8000fa2:	d166      	bne.n	8001072 <__aeabi_fmul+0x16e>
 8000fa4:	2000      	movs	r0, #0
 8000fa6:	2100      	movs	r1, #0
 8000fa8:	05c0      	lsls	r0, r0, #23
 8000faa:	4308      	orrs	r0, r1
 8000fac:	07d2      	lsls	r2, r2, #31
 8000fae:	4310      	orrs	r0, r2
 8000fb0:	bce0      	pop	{r5, r6, r7}
 8000fb2:	46ba      	mov	sl, r7
 8000fb4:	46b1      	mov	r9, r6
 8000fb6:	46a8      	mov	r8, r5
 8000fb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000fba:	2203      	movs	r2, #3
 8000fbc:	4316      	orrs	r6, r2
 8000fbe:	4642      	mov	r2, r8
 8000fc0:	3501      	adds	r5, #1
 8000fc2:	407a      	eors	r2, r7
 8000fc4:	b2d2      	uxtb	r2, r2
 8000fc6:	35ff      	adds	r5, #255	; 0xff
 8000fc8:	2e0a      	cmp	r6, #10
 8000fca:	dd00      	ble.n	8000fce <__aeabi_fmul+0xca>
 8000fcc:	e0e4      	b.n	8001198 <__aeabi_fmul+0x294>
 8000fce:	2003      	movs	r0, #3
 8000fd0:	2101      	movs	r1, #1
 8000fd2:	40b1      	lsls	r1, r6
 8000fd4:	26a6      	movs	r6, #166	; 0xa6
 8000fd6:	00f6      	lsls	r6, r6, #3
 8000fd8:	4231      	tst	r1, r6
 8000fda:	d10a      	bne.n	8000ff2 <__aeabi_fmul+0xee>
 8000fdc:	2690      	movs	r6, #144	; 0x90
 8000fde:	00b6      	lsls	r6, r6, #2
 8000fe0:	4231      	tst	r1, r6
 8000fe2:	d116      	bne.n	8001012 <__aeabi_fmul+0x10e>
 8000fe4:	3eb9      	subs	r6, #185	; 0xb9
 8000fe6:	3eff      	subs	r6, #255	; 0xff
 8000fe8:	420e      	tst	r6, r1
 8000fea:	d01a      	beq.n	8001022 <__aeabi_fmul+0x11e>
 8000fec:	46a1      	mov	r9, r4
 8000fee:	4682      	mov	sl, r0
 8000ff0:	e000      	b.n	8000ff4 <__aeabi_fmul+0xf0>
 8000ff2:	0017      	movs	r7, r2
 8000ff4:	4653      	mov	r3, sl
 8000ff6:	003a      	movs	r2, r7
 8000ff8:	2b02      	cmp	r3, #2
 8000ffa:	d00f      	beq.n	800101c <__aeabi_fmul+0x118>
 8000ffc:	464c      	mov	r4, r9
 8000ffe:	4650      	mov	r0, sl
 8001000:	2803      	cmp	r0, #3
 8001002:	d1cd      	bne.n	8000fa0 <__aeabi_fmul+0x9c>
 8001004:	2180      	movs	r1, #128	; 0x80
 8001006:	03c9      	lsls	r1, r1, #15
 8001008:	4321      	orrs	r1, r4
 800100a:	0249      	lsls	r1, r1, #9
 800100c:	20ff      	movs	r0, #255	; 0xff
 800100e:	0a49      	lsrs	r1, r1, #9
 8001010:	e7ca      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 8001012:	2180      	movs	r1, #128	; 0x80
 8001014:	2200      	movs	r2, #0
 8001016:	20ff      	movs	r0, #255	; 0xff
 8001018:	03c9      	lsls	r1, r1, #15
 800101a:	e7c5      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 800101c:	20ff      	movs	r0, #255	; 0xff
 800101e:	2100      	movs	r1, #0
 8001020:	e7c2      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 8001022:	0c20      	lsrs	r0, r4, #16
 8001024:	4649      	mov	r1, r9
 8001026:	0424      	lsls	r4, r4, #16
 8001028:	0c24      	lsrs	r4, r4, #16
 800102a:	0027      	movs	r7, r4
 800102c:	0c0e      	lsrs	r6, r1, #16
 800102e:	0409      	lsls	r1, r1, #16
 8001030:	0c09      	lsrs	r1, r1, #16
 8001032:	4374      	muls	r4, r6
 8001034:	434f      	muls	r7, r1
 8001036:	4346      	muls	r6, r0
 8001038:	4348      	muls	r0, r1
 800103a:	0c39      	lsrs	r1, r7, #16
 800103c:	1900      	adds	r0, r0, r4
 800103e:	1809      	adds	r1, r1, r0
 8001040:	428c      	cmp	r4, r1
 8001042:	d903      	bls.n	800104c <__aeabi_fmul+0x148>
 8001044:	2080      	movs	r0, #128	; 0x80
 8001046:	0240      	lsls	r0, r0, #9
 8001048:	4684      	mov	ip, r0
 800104a:	4466      	add	r6, ip
 800104c:	043f      	lsls	r7, r7, #16
 800104e:	0408      	lsls	r0, r1, #16
 8001050:	0c3f      	lsrs	r7, r7, #16
 8001052:	19c0      	adds	r0, r0, r7
 8001054:	0184      	lsls	r4, r0, #6
 8001056:	1e67      	subs	r7, r4, #1
 8001058:	41bc      	sbcs	r4, r7
 800105a:	0c09      	lsrs	r1, r1, #16
 800105c:	0e80      	lsrs	r0, r0, #26
 800105e:	1989      	adds	r1, r1, r6
 8001060:	4304      	orrs	r4, r0
 8001062:	0189      	lsls	r1, r1, #6
 8001064:	430c      	orrs	r4, r1
 8001066:	0109      	lsls	r1, r1, #4
 8001068:	d571      	bpl.n	800114e <__aeabi_fmul+0x24a>
 800106a:	2301      	movs	r3, #1
 800106c:	0861      	lsrs	r1, r4, #1
 800106e:	401c      	ands	r4, r3
 8001070:	430c      	orrs	r4, r1
 8001072:	002b      	movs	r3, r5
 8001074:	337f      	adds	r3, #127	; 0x7f
 8001076:	2b00      	cmp	r3, #0
 8001078:	dd51      	ble.n	800111e <__aeabi_fmul+0x21a>
 800107a:	0761      	lsls	r1, r4, #29
 800107c:	d004      	beq.n	8001088 <__aeabi_fmul+0x184>
 800107e:	210f      	movs	r1, #15
 8001080:	4021      	ands	r1, r4
 8001082:	2904      	cmp	r1, #4
 8001084:	d000      	beq.n	8001088 <__aeabi_fmul+0x184>
 8001086:	3404      	adds	r4, #4
 8001088:	0121      	lsls	r1, r4, #4
 800108a:	d503      	bpl.n	8001094 <__aeabi_fmul+0x190>
 800108c:	4b43      	ldr	r3, [pc, #268]	; (800119c <__aeabi_fmul+0x298>)
 800108e:	401c      	ands	r4, r3
 8001090:	002b      	movs	r3, r5
 8001092:	3380      	adds	r3, #128	; 0x80
 8001094:	2bfe      	cmp	r3, #254	; 0xfe
 8001096:	dcc1      	bgt.n	800101c <__aeabi_fmul+0x118>
 8001098:	01a1      	lsls	r1, r4, #6
 800109a:	0a49      	lsrs	r1, r1, #9
 800109c:	b2d8      	uxtb	r0, r3
 800109e:	e783      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 80010a0:	2c00      	cmp	r4, #0
 80010a2:	d12c      	bne.n	80010fe <__aeabi_fmul+0x1fa>
 80010a4:	2301      	movs	r3, #1
 80010a6:	4642      	mov	r2, r8
 80010a8:	431e      	orrs	r6, r3
 80010aa:	002b      	movs	r3, r5
 80010ac:	407a      	eors	r2, r7
 80010ae:	2001      	movs	r0, #1
 80010b0:	b2d2      	uxtb	r2, r2
 80010b2:	1c5d      	adds	r5, r3, #1
 80010b4:	2e0a      	cmp	r6, #10
 80010b6:	dd00      	ble.n	80010ba <__aeabi_fmul+0x1b6>
 80010b8:	e757      	b.n	8000f6a <__aeabi_fmul+0x66>
 80010ba:	e76a      	b.n	8000f92 <__aeabi_fmul+0x8e>
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d110      	bne.n	80010e2 <__aeabi_fmul+0x1de>
 80010c0:	2301      	movs	r3, #1
 80010c2:	2604      	movs	r6, #4
 80010c4:	2500      	movs	r5, #0
 80010c6:	469a      	mov	sl, r3
 80010c8:	e738      	b.n	8000f3c <__aeabi_fmul+0x38>
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d104      	bne.n	80010d8 <__aeabi_fmul+0x1d4>
 80010ce:	2302      	movs	r3, #2
 80010d0:	2608      	movs	r6, #8
 80010d2:	25ff      	movs	r5, #255	; 0xff
 80010d4:	469a      	mov	sl, r3
 80010d6:	e731      	b.n	8000f3c <__aeabi_fmul+0x38>
 80010d8:	2303      	movs	r3, #3
 80010da:	260c      	movs	r6, #12
 80010dc:	25ff      	movs	r5, #255	; 0xff
 80010de:	469a      	mov	sl, r3
 80010e0:	e72c      	b.n	8000f3c <__aeabi_fmul+0x38>
 80010e2:	4648      	mov	r0, r9
 80010e4:	f002 f91c 	bl	8003320 <__clzsi2>
 80010e8:	464a      	mov	r2, r9
 80010ea:	1f43      	subs	r3, r0, #5
 80010ec:	2576      	movs	r5, #118	; 0x76
 80010ee:	409a      	lsls	r2, r3
 80010f0:	2300      	movs	r3, #0
 80010f2:	426d      	negs	r5, r5
 80010f4:	4691      	mov	r9, r2
 80010f6:	2600      	movs	r6, #0
 80010f8:	469a      	mov	sl, r3
 80010fa:	1a2d      	subs	r5, r5, r0
 80010fc:	e71e      	b.n	8000f3c <__aeabi_fmul+0x38>
 80010fe:	0020      	movs	r0, r4
 8001100:	f002 f90e 	bl	8003320 <__clzsi2>
 8001104:	4642      	mov	r2, r8
 8001106:	1f43      	subs	r3, r0, #5
 8001108:	409c      	lsls	r4, r3
 800110a:	1a2b      	subs	r3, r5, r0
 800110c:	3b76      	subs	r3, #118	; 0x76
 800110e:	407a      	eors	r2, r7
 8001110:	2000      	movs	r0, #0
 8001112:	b2d2      	uxtb	r2, r2
 8001114:	1c5d      	adds	r5, r3, #1
 8001116:	2e0a      	cmp	r6, #10
 8001118:	dd00      	ble.n	800111c <__aeabi_fmul+0x218>
 800111a:	e726      	b.n	8000f6a <__aeabi_fmul+0x66>
 800111c:	e739      	b.n	8000f92 <__aeabi_fmul+0x8e>
 800111e:	2101      	movs	r1, #1
 8001120:	1acb      	subs	r3, r1, r3
 8001122:	2b1b      	cmp	r3, #27
 8001124:	dd00      	ble.n	8001128 <__aeabi_fmul+0x224>
 8001126:	e73d      	b.n	8000fa4 <__aeabi_fmul+0xa0>
 8001128:	359e      	adds	r5, #158	; 0x9e
 800112a:	0021      	movs	r1, r4
 800112c:	40ac      	lsls	r4, r5
 800112e:	40d9      	lsrs	r1, r3
 8001130:	1e63      	subs	r3, r4, #1
 8001132:	419c      	sbcs	r4, r3
 8001134:	4321      	orrs	r1, r4
 8001136:	074b      	lsls	r3, r1, #29
 8001138:	d004      	beq.n	8001144 <__aeabi_fmul+0x240>
 800113a:	230f      	movs	r3, #15
 800113c:	400b      	ands	r3, r1
 800113e:	2b04      	cmp	r3, #4
 8001140:	d000      	beq.n	8001144 <__aeabi_fmul+0x240>
 8001142:	3104      	adds	r1, #4
 8001144:	014b      	lsls	r3, r1, #5
 8001146:	d504      	bpl.n	8001152 <__aeabi_fmul+0x24e>
 8001148:	2001      	movs	r0, #1
 800114a:	2100      	movs	r1, #0
 800114c:	e72c      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 800114e:	001d      	movs	r5, r3
 8001150:	e78f      	b.n	8001072 <__aeabi_fmul+0x16e>
 8001152:	0189      	lsls	r1, r1, #6
 8001154:	2000      	movs	r0, #0
 8001156:	0a49      	lsrs	r1, r1, #9
 8001158:	e726      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 800115a:	2302      	movs	r3, #2
 800115c:	2e0f      	cmp	r6, #15
 800115e:	d10c      	bne.n	800117a <__aeabi_fmul+0x276>
 8001160:	2180      	movs	r1, #128	; 0x80
 8001162:	464b      	mov	r3, r9
 8001164:	03c9      	lsls	r1, r1, #15
 8001166:	420b      	tst	r3, r1
 8001168:	d00d      	beq.n	8001186 <__aeabi_fmul+0x282>
 800116a:	420c      	tst	r4, r1
 800116c:	d10b      	bne.n	8001186 <__aeabi_fmul+0x282>
 800116e:	4321      	orrs	r1, r4
 8001170:	0249      	lsls	r1, r1, #9
 8001172:	003a      	movs	r2, r7
 8001174:	20ff      	movs	r0, #255	; 0xff
 8001176:	0a49      	lsrs	r1, r1, #9
 8001178:	e716      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 800117a:	2e0b      	cmp	r6, #11
 800117c:	d000      	beq.n	8001180 <__aeabi_fmul+0x27c>
 800117e:	e6f7      	b.n	8000f70 <__aeabi_fmul+0x6c>
 8001180:	46a1      	mov	r9, r4
 8001182:	469a      	mov	sl, r3
 8001184:	e736      	b.n	8000ff4 <__aeabi_fmul+0xf0>
 8001186:	2180      	movs	r1, #128	; 0x80
 8001188:	464b      	mov	r3, r9
 800118a:	03c9      	lsls	r1, r1, #15
 800118c:	4319      	orrs	r1, r3
 800118e:	0249      	lsls	r1, r1, #9
 8001190:	4642      	mov	r2, r8
 8001192:	20ff      	movs	r0, #255	; 0xff
 8001194:	0a49      	lsrs	r1, r1, #9
 8001196:	e707      	b.n	8000fa8 <__aeabi_fmul+0xa4>
 8001198:	2303      	movs	r3, #3
 800119a:	e7df      	b.n	800115c <__aeabi_fmul+0x258>
 800119c:	f7ffffff 	.word	0xf7ffffff

080011a0 <__aeabi_fsub>:
 80011a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011a2:	46c6      	mov	lr, r8
 80011a4:	0243      	lsls	r3, r0, #9
 80011a6:	0a5b      	lsrs	r3, r3, #9
 80011a8:	0045      	lsls	r5, r0, #1
 80011aa:	00da      	lsls	r2, r3, #3
 80011ac:	0fc4      	lsrs	r4, r0, #31
 80011ae:	0248      	lsls	r0, r1, #9
 80011b0:	004f      	lsls	r7, r1, #1
 80011b2:	4694      	mov	ip, r2
 80011b4:	0a42      	lsrs	r2, r0, #9
 80011b6:	001e      	movs	r6, r3
 80011b8:	4690      	mov	r8, r2
 80011ba:	b500      	push	{lr}
 80011bc:	0e2d      	lsrs	r5, r5, #24
 80011be:	0e3f      	lsrs	r7, r7, #24
 80011c0:	0fc9      	lsrs	r1, r1, #31
 80011c2:	0980      	lsrs	r0, r0, #6
 80011c4:	2fff      	cmp	r7, #255	; 0xff
 80011c6:	d059      	beq.n	800127c <__aeabi_fsub+0xdc>
 80011c8:	2201      	movs	r2, #1
 80011ca:	4051      	eors	r1, r2
 80011cc:	428c      	cmp	r4, r1
 80011ce:	d039      	beq.n	8001244 <__aeabi_fsub+0xa4>
 80011d0:	1bea      	subs	r2, r5, r7
 80011d2:	2a00      	cmp	r2, #0
 80011d4:	dd58      	ble.n	8001288 <__aeabi_fsub+0xe8>
 80011d6:	2f00      	cmp	r7, #0
 80011d8:	d068      	beq.n	80012ac <__aeabi_fsub+0x10c>
 80011da:	2dff      	cmp	r5, #255	; 0xff
 80011dc:	d100      	bne.n	80011e0 <__aeabi_fsub+0x40>
 80011de:	e0d1      	b.n	8001384 <__aeabi_fsub+0x1e4>
 80011e0:	2380      	movs	r3, #128	; 0x80
 80011e2:	04db      	lsls	r3, r3, #19
 80011e4:	4318      	orrs	r0, r3
 80011e6:	2a1b      	cmp	r2, #27
 80011e8:	dc00      	bgt.n	80011ec <__aeabi_fsub+0x4c>
 80011ea:	e0e3      	b.n	80013b4 <__aeabi_fsub+0x214>
 80011ec:	2301      	movs	r3, #1
 80011ee:	4662      	mov	r2, ip
 80011f0:	1ad3      	subs	r3, r2, r3
 80011f2:	015a      	lsls	r2, r3, #5
 80011f4:	d400      	bmi.n	80011f8 <__aeabi_fsub+0x58>
 80011f6:	e0ac      	b.n	8001352 <__aeabi_fsub+0x1b2>
 80011f8:	019b      	lsls	r3, r3, #6
 80011fa:	099e      	lsrs	r6, r3, #6
 80011fc:	0030      	movs	r0, r6
 80011fe:	f002 f88f 	bl	8003320 <__clzsi2>
 8001202:	0033      	movs	r3, r6
 8001204:	3805      	subs	r0, #5
 8001206:	4083      	lsls	r3, r0
 8001208:	4285      	cmp	r5, r0
 800120a:	dc00      	bgt.n	800120e <__aeabi_fsub+0x6e>
 800120c:	e0c6      	b.n	800139c <__aeabi_fsub+0x1fc>
 800120e:	4ab2      	ldr	r2, [pc, #712]	; (80014d8 <__aeabi_fsub+0x338>)
 8001210:	1a2d      	subs	r5, r5, r0
 8001212:	4013      	ands	r3, r2
 8001214:	075a      	lsls	r2, r3, #29
 8001216:	d004      	beq.n	8001222 <__aeabi_fsub+0x82>
 8001218:	220f      	movs	r2, #15
 800121a:	401a      	ands	r2, r3
 800121c:	2a04      	cmp	r2, #4
 800121e:	d000      	beq.n	8001222 <__aeabi_fsub+0x82>
 8001220:	3304      	adds	r3, #4
 8001222:	015a      	lsls	r2, r3, #5
 8001224:	d400      	bmi.n	8001228 <__aeabi_fsub+0x88>
 8001226:	e097      	b.n	8001358 <__aeabi_fsub+0x1b8>
 8001228:	1c6a      	adds	r2, r5, #1
 800122a:	2dfe      	cmp	r5, #254	; 0xfe
 800122c:	d100      	bne.n	8001230 <__aeabi_fsub+0x90>
 800122e:	e084      	b.n	800133a <__aeabi_fsub+0x19a>
 8001230:	019b      	lsls	r3, r3, #6
 8001232:	0a5e      	lsrs	r6, r3, #9
 8001234:	b2d2      	uxtb	r2, r2
 8001236:	05d0      	lsls	r0, r2, #23
 8001238:	4330      	orrs	r0, r6
 800123a:	07e4      	lsls	r4, r4, #31
 800123c:	4320      	orrs	r0, r4
 800123e:	bc80      	pop	{r7}
 8001240:	46b8      	mov	r8, r7
 8001242:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001244:	1bea      	subs	r2, r5, r7
 8001246:	2a00      	cmp	r2, #0
 8001248:	dd41      	ble.n	80012ce <__aeabi_fsub+0x12e>
 800124a:	2f00      	cmp	r7, #0
 800124c:	d06b      	beq.n	8001326 <__aeabi_fsub+0x186>
 800124e:	2dff      	cmp	r5, #255	; 0xff
 8001250:	d100      	bne.n	8001254 <__aeabi_fsub+0xb4>
 8001252:	e097      	b.n	8001384 <__aeabi_fsub+0x1e4>
 8001254:	2380      	movs	r3, #128	; 0x80
 8001256:	04db      	lsls	r3, r3, #19
 8001258:	4318      	orrs	r0, r3
 800125a:	2a1b      	cmp	r2, #27
 800125c:	dc00      	bgt.n	8001260 <__aeabi_fsub+0xc0>
 800125e:	e0cc      	b.n	80013fa <__aeabi_fsub+0x25a>
 8001260:	2301      	movs	r3, #1
 8001262:	4463      	add	r3, ip
 8001264:	015a      	lsls	r2, r3, #5
 8001266:	d574      	bpl.n	8001352 <__aeabi_fsub+0x1b2>
 8001268:	3501      	adds	r5, #1
 800126a:	2dff      	cmp	r5, #255	; 0xff
 800126c:	d065      	beq.n	800133a <__aeabi_fsub+0x19a>
 800126e:	2201      	movs	r2, #1
 8001270:	499a      	ldr	r1, [pc, #616]	; (80014dc <__aeabi_fsub+0x33c>)
 8001272:	401a      	ands	r2, r3
 8001274:	085b      	lsrs	r3, r3, #1
 8001276:	400b      	ands	r3, r1
 8001278:	4313      	orrs	r3, r2
 800127a:	e7cb      	b.n	8001214 <__aeabi_fsub+0x74>
 800127c:	2800      	cmp	r0, #0
 800127e:	d01f      	beq.n	80012c0 <__aeabi_fsub+0x120>
 8001280:	428c      	cmp	r4, r1
 8001282:	d022      	beq.n	80012ca <__aeabi_fsub+0x12a>
 8001284:	002a      	movs	r2, r5
 8001286:	3aff      	subs	r2, #255	; 0xff
 8001288:	2a00      	cmp	r2, #0
 800128a:	d035      	beq.n	80012f8 <__aeabi_fsub+0x158>
 800128c:	1b7a      	subs	r2, r7, r5
 800128e:	2d00      	cmp	r5, #0
 8001290:	d000      	beq.n	8001294 <__aeabi_fsub+0xf4>
 8001292:	e099      	b.n	80013c8 <__aeabi_fsub+0x228>
 8001294:	4663      	mov	r3, ip
 8001296:	2b00      	cmp	r3, #0
 8001298:	d100      	bne.n	800129c <__aeabi_fsub+0xfc>
 800129a:	e0dd      	b.n	8001458 <__aeabi_fsub+0x2b8>
 800129c:	1e53      	subs	r3, r2, #1
 800129e:	2a01      	cmp	r2, #1
 80012a0:	d100      	bne.n	80012a4 <__aeabi_fsub+0x104>
 80012a2:	e105      	b.n	80014b0 <__aeabi_fsub+0x310>
 80012a4:	2aff      	cmp	r2, #255	; 0xff
 80012a6:	d06b      	beq.n	8001380 <__aeabi_fsub+0x1e0>
 80012a8:	001a      	movs	r2, r3
 80012aa:	e094      	b.n	80013d6 <__aeabi_fsub+0x236>
 80012ac:	2800      	cmp	r0, #0
 80012ae:	d073      	beq.n	8001398 <__aeabi_fsub+0x1f8>
 80012b0:	1e51      	subs	r1, r2, #1
 80012b2:	2a01      	cmp	r2, #1
 80012b4:	d100      	bne.n	80012b8 <__aeabi_fsub+0x118>
 80012b6:	e0df      	b.n	8001478 <__aeabi_fsub+0x2d8>
 80012b8:	2aff      	cmp	r2, #255	; 0xff
 80012ba:	d063      	beq.n	8001384 <__aeabi_fsub+0x1e4>
 80012bc:	000a      	movs	r2, r1
 80012be:	e792      	b.n	80011e6 <__aeabi_fsub+0x46>
 80012c0:	2201      	movs	r2, #1
 80012c2:	4051      	eors	r1, r2
 80012c4:	42a1      	cmp	r1, r4
 80012c6:	d000      	beq.n	80012ca <__aeabi_fsub+0x12a>
 80012c8:	e782      	b.n	80011d0 <__aeabi_fsub+0x30>
 80012ca:	002a      	movs	r2, r5
 80012cc:	3aff      	subs	r2, #255	; 0xff
 80012ce:	2a00      	cmp	r2, #0
 80012d0:	d036      	beq.n	8001340 <__aeabi_fsub+0x1a0>
 80012d2:	1b7a      	subs	r2, r7, r5
 80012d4:	2d00      	cmp	r5, #0
 80012d6:	d100      	bne.n	80012da <__aeabi_fsub+0x13a>
 80012d8:	e0aa      	b.n	8001430 <__aeabi_fsub+0x290>
 80012da:	2fff      	cmp	r7, #255	; 0xff
 80012dc:	d100      	bne.n	80012e0 <__aeabi_fsub+0x140>
 80012de:	e0da      	b.n	8001496 <__aeabi_fsub+0x2f6>
 80012e0:	2380      	movs	r3, #128	; 0x80
 80012e2:	4661      	mov	r1, ip
 80012e4:	04db      	lsls	r3, r3, #19
 80012e6:	4319      	orrs	r1, r3
 80012e8:	468c      	mov	ip, r1
 80012ea:	2a1b      	cmp	r2, #27
 80012ec:	dc00      	bgt.n	80012f0 <__aeabi_fsub+0x150>
 80012ee:	e0d4      	b.n	800149a <__aeabi_fsub+0x2fa>
 80012f0:	2301      	movs	r3, #1
 80012f2:	003d      	movs	r5, r7
 80012f4:	181b      	adds	r3, r3, r0
 80012f6:	e7b5      	b.n	8001264 <__aeabi_fsub+0xc4>
 80012f8:	27fe      	movs	r7, #254	; 0xfe
 80012fa:	1c6a      	adds	r2, r5, #1
 80012fc:	4217      	tst	r7, r2
 80012fe:	d171      	bne.n	80013e4 <__aeabi_fsub+0x244>
 8001300:	2d00      	cmp	r5, #0
 8001302:	d000      	beq.n	8001306 <__aeabi_fsub+0x166>
 8001304:	e09e      	b.n	8001444 <__aeabi_fsub+0x2a4>
 8001306:	4663      	mov	r3, ip
 8001308:	2b00      	cmp	r3, #0
 800130a:	d100      	bne.n	800130e <__aeabi_fsub+0x16e>
 800130c:	e0d5      	b.n	80014ba <__aeabi_fsub+0x31a>
 800130e:	2200      	movs	r2, #0
 8001310:	2800      	cmp	r0, #0
 8001312:	d100      	bne.n	8001316 <__aeabi_fsub+0x176>
 8001314:	e78f      	b.n	8001236 <__aeabi_fsub+0x96>
 8001316:	1a1b      	subs	r3, r3, r0
 8001318:	015e      	lsls	r6, r3, #5
 800131a:	d400      	bmi.n	800131e <__aeabi_fsub+0x17e>
 800131c:	e0d6      	b.n	80014cc <__aeabi_fsub+0x32c>
 800131e:	4663      	mov	r3, ip
 8001320:	000c      	movs	r4, r1
 8001322:	1ac3      	subs	r3, r0, r3
 8001324:	e776      	b.n	8001214 <__aeabi_fsub+0x74>
 8001326:	2800      	cmp	r0, #0
 8001328:	d036      	beq.n	8001398 <__aeabi_fsub+0x1f8>
 800132a:	1e51      	subs	r1, r2, #1
 800132c:	2a01      	cmp	r2, #1
 800132e:	d100      	bne.n	8001332 <__aeabi_fsub+0x192>
 8001330:	e09a      	b.n	8001468 <__aeabi_fsub+0x2c8>
 8001332:	2aff      	cmp	r2, #255	; 0xff
 8001334:	d026      	beq.n	8001384 <__aeabi_fsub+0x1e4>
 8001336:	000a      	movs	r2, r1
 8001338:	e78f      	b.n	800125a <__aeabi_fsub+0xba>
 800133a:	22ff      	movs	r2, #255	; 0xff
 800133c:	2600      	movs	r6, #0
 800133e:	e77a      	b.n	8001236 <__aeabi_fsub+0x96>
 8001340:	27fe      	movs	r7, #254	; 0xfe
 8001342:	1c6a      	adds	r2, r5, #1
 8001344:	4217      	tst	r7, r2
 8001346:	d062      	beq.n	800140e <__aeabi_fsub+0x26e>
 8001348:	2aff      	cmp	r2, #255	; 0xff
 800134a:	d0f6      	beq.n	800133a <__aeabi_fsub+0x19a>
 800134c:	0015      	movs	r5, r2
 800134e:	4460      	add	r0, ip
 8001350:	0843      	lsrs	r3, r0, #1
 8001352:	075a      	lsls	r2, r3, #29
 8001354:	d000      	beq.n	8001358 <__aeabi_fsub+0x1b8>
 8001356:	e75f      	b.n	8001218 <__aeabi_fsub+0x78>
 8001358:	08db      	lsrs	r3, r3, #3
 800135a:	2dff      	cmp	r5, #255	; 0xff
 800135c:	d012      	beq.n	8001384 <__aeabi_fsub+0x1e4>
 800135e:	025b      	lsls	r3, r3, #9
 8001360:	0a5e      	lsrs	r6, r3, #9
 8001362:	b2ea      	uxtb	r2, r5
 8001364:	e767      	b.n	8001236 <__aeabi_fsub+0x96>
 8001366:	4662      	mov	r2, ip
 8001368:	2a00      	cmp	r2, #0
 800136a:	d100      	bne.n	800136e <__aeabi_fsub+0x1ce>
 800136c:	e093      	b.n	8001496 <__aeabi_fsub+0x2f6>
 800136e:	2800      	cmp	r0, #0
 8001370:	d008      	beq.n	8001384 <__aeabi_fsub+0x1e4>
 8001372:	2280      	movs	r2, #128	; 0x80
 8001374:	03d2      	lsls	r2, r2, #15
 8001376:	4213      	tst	r3, r2
 8001378:	d004      	beq.n	8001384 <__aeabi_fsub+0x1e4>
 800137a:	4640      	mov	r0, r8
 800137c:	4210      	tst	r0, r2
 800137e:	d101      	bne.n	8001384 <__aeabi_fsub+0x1e4>
 8001380:	000c      	movs	r4, r1
 8001382:	4643      	mov	r3, r8
 8001384:	2b00      	cmp	r3, #0
 8001386:	d0d8      	beq.n	800133a <__aeabi_fsub+0x19a>
 8001388:	2680      	movs	r6, #128	; 0x80
 800138a:	03f6      	lsls	r6, r6, #15
 800138c:	431e      	orrs	r6, r3
 800138e:	0276      	lsls	r6, r6, #9
 8001390:	22ff      	movs	r2, #255	; 0xff
 8001392:	0a76      	lsrs	r6, r6, #9
 8001394:	e74f      	b.n	8001236 <__aeabi_fsub+0x96>
 8001396:	4643      	mov	r3, r8
 8001398:	0015      	movs	r5, r2
 800139a:	e7de      	b.n	800135a <__aeabi_fsub+0x1ba>
 800139c:	2220      	movs	r2, #32
 800139e:	1b40      	subs	r0, r0, r5
 80013a0:	3001      	adds	r0, #1
 80013a2:	1a12      	subs	r2, r2, r0
 80013a4:	0019      	movs	r1, r3
 80013a6:	4093      	lsls	r3, r2
 80013a8:	40c1      	lsrs	r1, r0
 80013aa:	1e5a      	subs	r2, r3, #1
 80013ac:	4193      	sbcs	r3, r2
 80013ae:	2500      	movs	r5, #0
 80013b0:	430b      	orrs	r3, r1
 80013b2:	e72f      	b.n	8001214 <__aeabi_fsub+0x74>
 80013b4:	2320      	movs	r3, #32
 80013b6:	1a9b      	subs	r3, r3, r2
 80013b8:	0001      	movs	r1, r0
 80013ba:	4098      	lsls	r0, r3
 80013bc:	0003      	movs	r3, r0
 80013be:	40d1      	lsrs	r1, r2
 80013c0:	1e5a      	subs	r2, r3, #1
 80013c2:	4193      	sbcs	r3, r2
 80013c4:	430b      	orrs	r3, r1
 80013c6:	e712      	b.n	80011ee <__aeabi_fsub+0x4e>
 80013c8:	2fff      	cmp	r7, #255	; 0xff
 80013ca:	d0d9      	beq.n	8001380 <__aeabi_fsub+0x1e0>
 80013cc:	2380      	movs	r3, #128	; 0x80
 80013ce:	4664      	mov	r4, ip
 80013d0:	04db      	lsls	r3, r3, #19
 80013d2:	431c      	orrs	r4, r3
 80013d4:	46a4      	mov	ip, r4
 80013d6:	2a1b      	cmp	r2, #27
 80013d8:	dd52      	ble.n	8001480 <__aeabi_fsub+0x2e0>
 80013da:	2301      	movs	r3, #1
 80013dc:	000c      	movs	r4, r1
 80013de:	003d      	movs	r5, r7
 80013e0:	1ac3      	subs	r3, r0, r3
 80013e2:	e706      	b.n	80011f2 <__aeabi_fsub+0x52>
 80013e4:	4663      	mov	r3, ip
 80013e6:	1a1e      	subs	r6, r3, r0
 80013e8:	0173      	lsls	r3, r6, #5
 80013ea:	d439      	bmi.n	8001460 <__aeabi_fsub+0x2c0>
 80013ec:	2e00      	cmp	r6, #0
 80013ee:	d000      	beq.n	80013f2 <__aeabi_fsub+0x252>
 80013f0:	e704      	b.n	80011fc <__aeabi_fsub+0x5c>
 80013f2:	2400      	movs	r4, #0
 80013f4:	2200      	movs	r2, #0
 80013f6:	2600      	movs	r6, #0
 80013f8:	e71d      	b.n	8001236 <__aeabi_fsub+0x96>
 80013fa:	2320      	movs	r3, #32
 80013fc:	1a9b      	subs	r3, r3, r2
 80013fe:	0001      	movs	r1, r0
 8001400:	4098      	lsls	r0, r3
 8001402:	0003      	movs	r3, r0
 8001404:	40d1      	lsrs	r1, r2
 8001406:	1e5a      	subs	r2, r3, #1
 8001408:	4193      	sbcs	r3, r2
 800140a:	430b      	orrs	r3, r1
 800140c:	e729      	b.n	8001262 <__aeabi_fsub+0xc2>
 800140e:	2d00      	cmp	r5, #0
 8001410:	d1a9      	bne.n	8001366 <__aeabi_fsub+0x1c6>
 8001412:	4663      	mov	r3, ip
 8001414:	2b00      	cmp	r3, #0
 8001416:	d056      	beq.n	80014c6 <__aeabi_fsub+0x326>
 8001418:	2200      	movs	r2, #0
 800141a:	2800      	cmp	r0, #0
 800141c:	d100      	bne.n	8001420 <__aeabi_fsub+0x280>
 800141e:	e70a      	b.n	8001236 <__aeabi_fsub+0x96>
 8001420:	0003      	movs	r3, r0
 8001422:	4463      	add	r3, ip
 8001424:	015a      	lsls	r2, r3, #5
 8001426:	d594      	bpl.n	8001352 <__aeabi_fsub+0x1b2>
 8001428:	4a2b      	ldr	r2, [pc, #172]	; (80014d8 <__aeabi_fsub+0x338>)
 800142a:	3501      	adds	r5, #1
 800142c:	4013      	ands	r3, r2
 800142e:	e790      	b.n	8001352 <__aeabi_fsub+0x1b2>
 8001430:	4663      	mov	r3, ip
 8001432:	2b00      	cmp	r3, #0
 8001434:	d0af      	beq.n	8001396 <__aeabi_fsub+0x1f6>
 8001436:	1e53      	subs	r3, r2, #1
 8001438:	2a01      	cmp	r2, #1
 800143a:	d015      	beq.n	8001468 <__aeabi_fsub+0x2c8>
 800143c:	2aff      	cmp	r2, #255	; 0xff
 800143e:	d02a      	beq.n	8001496 <__aeabi_fsub+0x2f6>
 8001440:	001a      	movs	r2, r3
 8001442:	e752      	b.n	80012ea <__aeabi_fsub+0x14a>
 8001444:	4662      	mov	r2, ip
 8001446:	2a00      	cmp	r2, #0
 8001448:	d191      	bne.n	800136e <__aeabi_fsub+0x1ce>
 800144a:	2800      	cmp	r0, #0
 800144c:	d198      	bne.n	8001380 <__aeabi_fsub+0x1e0>
 800144e:	2680      	movs	r6, #128	; 0x80
 8001450:	2400      	movs	r4, #0
 8001452:	22ff      	movs	r2, #255	; 0xff
 8001454:	03f6      	lsls	r6, r6, #15
 8001456:	e6ee      	b.n	8001236 <__aeabi_fsub+0x96>
 8001458:	000c      	movs	r4, r1
 800145a:	4643      	mov	r3, r8
 800145c:	0015      	movs	r5, r2
 800145e:	e77c      	b.n	800135a <__aeabi_fsub+0x1ba>
 8001460:	4663      	mov	r3, ip
 8001462:	000c      	movs	r4, r1
 8001464:	1ac6      	subs	r6, r0, r3
 8001466:	e6c9      	b.n	80011fc <__aeabi_fsub+0x5c>
 8001468:	0003      	movs	r3, r0
 800146a:	4463      	add	r3, ip
 800146c:	2501      	movs	r5, #1
 800146e:	015a      	lsls	r2, r3, #5
 8001470:	d400      	bmi.n	8001474 <__aeabi_fsub+0x2d4>
 8001472:	e76e      	b.n	8001352 <__aeabi_fsub+0x1b2>
 8001474:	2502      	movs	r5, #2
 8001476:	e6fa      	b.n	800126e <__aeabi_fsub+0xce>
 8001478:	4663      	mov	r3, ip
 800147a:	2501      	movs	r5, #1
 800147c:	1a1b      	subs	r3, r3, r0
 800147e:	e6b8      	b.n	80011f2 <__aeabi_fsub+0x52>
 8001480:	4664      	mov	r4, ip
 8001482:	2320      	movs	r3, #32
 8001484:	40d4      	lsrs	r4, r2
 8001486:	1a9b      	subs	r3, r3, r2
 8001488:	4662      	mov	r2, ip
 800148a:	409a      	lsls	r2, r3
 800148c:	0013      	movs	r3, r2
 800148e:	1e5a      	subs	r2, r3, #1
 8001490:	4193      	sbcs	r3, r2
 8001492:	4323      	orrs	r3, r4
 8001494:	e7a2      	b.n	80013dc <__aeabi_fsub+0x23c>
 8001496:	4643      	mov	r3, r8
 8001498:	e774      	b.n	8001384 <__aeabi_fsub+0x1e4>
 800149a:	4661      	mov	r1, ip
 800149c:	2320      	movs	r3, #32
 800149e:	40d1      	lsrs	r1, r2
 80014a0:	1a9b      	subs	r3, r3, r2
 80014a2:	4662      	mov	r2, ip
 80014a4:	409a      	lsls	r2, r3
 80014a6:	0013      	movs	r3, r2
 80014a8:	1e5a      	subs	r2, r3, #1
 80014aa:	4193      	sbcs	r3, r2
 80014ac:	430b      	orrs	r3, r1
 80014ae:	e720      	b.n	80012f2 <__aeabi_fsub+0x152>
 80014b0:	4663      	mov	r3, ip
 80014b2:	000c      	movs	r4, r1
 80014b4:	2501      	movs	r5, #1
 80014b6:	1ac3      	subs	r3, r0, r3
 80014b8:	e69b      	b.n	80011f2 <__aeabi_fsub+0x52>
 80014ba:	2800      	cmp	r0, #0
 80014bc:	d099      	beq.n	80013f2 <__aeabi_fsub+0x252>
 80014be:	000c      	movs	r4, r1
 80014c0:	4646      	mov	r6, r8
 80014c2:	2200      	movs	r2, #0
 80014c4:	e6b7      	b.n	8001236 <__aeabi_fsub+0x96>
 80014c6:	4646      	mov	r6, r8
 80014c8:	2200      	movs	r2, #0
 80014ca:	e6b4      	b.n	8001236 <__aeabi_fsub+0x96>
 80014cc:	2b00      	cmp	r3, #0
 80014ce:	d000      	beq.n	80014d2 <__aeabi_fsub+0x332>
 80014d0:	e73f      	b.n	8001352 <__aeabi_fsub+0x1b2>
 80014d2:	2400      	movs	r4, #0
 80014d4:	2600      	movs	r6, #0
 80014d6:	e6ae      	b.n	8001236 <__aeabi_fsub+0x96>
 80014d8:	fbffffff 	.word	0xfbffffff
 80014dc:	7dffffff 	.word	0x7dffffff

080014e0 <__aeabi_i2f>:
 80014e0:	b570      	push	{r4, r5, r6, lr}
 80014e2:	2800      	cmp	r0, #0
 80014e4:	d013      	beq.n	800150e <__aeabi_i2f+0x2e>
 80014e6:	17c3      	asrs	r3, r0, #31
 80014e8:	18c5      	adds	r5, r0, r3
 80014ea:	405d      	eors	r5, r3
 80014ec:	0fc4      	lsrs	r4, r0, #31
 80014ee:	0028      	movs	r0, r5
 80014f0:	f001 ff16 	bl	8003320 <__clzsi2>
 80014f4:	239e      	movs	r3, #158	; 0x9e
 80014f6:	0001      	movs	r1, r0
 80014f8:	1a1b      	subs	r3, r3, r0
 80014fa:	2b96      	cmp	r3, #150	; 0x96
 80014fc:	dc0f      	bgt.n	800151e <__aeabi_i2f+0x3e>
 80014fe:	2808      	cmp	r0, #8
 8001500:	d031      	beq.n	8001566 <__aeabi_i2f+0x86>
 8001502:	3908      	subs	r1, #8
 8001504:	408d      	lsls	r5, r1
 8001506:	026d      	lsls	r5, r5, #9
 8001508:	0a6d      	lsrs	r5, r5, #9
 800150a:	b2d8      	uxtb	r0, r3
 800150c:	e002      	b.n	8001514 <__aeabi_i2f+0x34>
 800150e:	2400      	movs	r4, #0
 8001510:	2000      	movs	r0, #0
 8001512:	2500      	movs	r5, #0
 8001514:	05c0      	lsls	r0, r0, #23
 8001516:	4328      	orrs	r0, r5
 8001518:	07e4      	lsls	r4, r4, #31
 800151a:	4320      	orrs	r0, r4
 800151c:	bd70      	pop	{r4, r5, r6, pc}
 800151e:	2b99      	cmp	r3, #153	; 0x99
 8001520:	dd0c      	ble.n	800153c <__aeabi_i2f+0x5c>
 8001522:	2205      	movs	r2, #5
 8001524:	1a12      	subs	r2, r2, r0
 8001526:	0028      	movs	r0, r5
 8001528:	40d0      	lsrs	r0, r2
 800152a:	0002      	movs	r2, r0
 800152c:	0008      	movs	r0, r1
 800152e:	301b      	adds	r0, #27
 8001530:	4085      	lsls	r5, r0
 8001532:	0028      	movs	r0, r5
 8001534:	1e45      	subs	r5, r0, #1
 8001536:	41a8      	sbcs	r0, r5
 8001538:	4302      	orrs	r2, r0
 800153a:	0015      	movs	r5, r2
 800153c:	2905      	cmp	r1, #5
 800153e:	dc16      	bgt.n	800156e <__aeabi_i2f+0x8e>
 8001540:	002a      	movs	r2, r5
 8001542:	480f      	ldr	r0, [pc, #60]	; (8001580 <__aeabi_i2f+0xa0>)
 8001544:	4002      	ands	r2, r0
 8001546:	076e      	lsls	r6, r5, #29
 8001548:	d009      	beq.n	800155e <__aeabi_i2f+0x7e>
 800154a:	260f      	movs	r6, #15
 800154c:	4035      	ands	r5, r6
 800154e:	2d04      	cmp	r5, #4
 8001550:	d005      	beq.n	800155e <__aeabi_i2f+0x7e>
 8001552:	3204      	adds	r2, #4
 8001554:	0155      	lsls	r5, r2, #5
 8001556:	d502      	bpl.n	800155e <__aeabi_i2f+0x7e>
 8001558:	239f      	movs	r3, #159	; 0x9f
 800155a:	4002      	ands	r2, r0
 800155c:	1a5b      	subs	r3, r3, r1
 800155e:	0192      	lsls	r2, r2, #6
 8001560:	0a55      	lsrs	r5, r2, #9
 8001562:	b2d8      	uxtb	r0, r3
 8001564:	e7d6      	b.n	8001514 <__aeabi_i2f+0x34>
 8001566:	026d      	lsls	r5, r5, #9
 8001568:	2096      	movs	r0, #150	; 0x96
 800156a:	0a6d      	lsrs	r5, r5, #9
 800156c:	e7d2      	b.n	8001514 <__aeabi_i2f+0x34>
 800156e:	1f4a      	subs	r2, r1, #5
 8001570:	4095      	lsls	r5, r2
 8001572:	002a      	movs	r2, r5
 8001574:	4802      	ldr	r0, [pc, #8]	; (8001580 <__aeabi_i2f+0xa0>)
 8001576:	4002      	ands	r2, r0
 8001578:	076e      	lsls	r6, r5, #29
 800157a:	d0f0      	beq.n	800155e <__aeabi_i2f+0x7e>
 800157c:	e7e5      	b.n	800154a <__aeabi_i2f+0x6a>
 800157e:	46c0      	nop			; (mov r8, r8)
 8001580:	fbffffff 	.word	0xfbffffff

08001584 <__aeabi_dadd>:
 8001584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001586:	464f      	mov	r7, r9
 8001588:	4646      	mov	r6, r8
 800158a:	46d6      	mov	lr, sl
 800158c:	0004      	movs	r4, r0
 800158e:	b5c0      	push	{r6, r7, lr}
 8001590:	001f      	movs	r7, r3
 8001592:	030b      	lsls	r3, r1, #12
 8001594:	0010      	movs	r0, r2
 8001596:	004e      	lsls	r6, r1, #1
 8001598:	0a5b      	lsrs	r3, r3, #9
 800159a:	0fcd      	lsrs	r5, r1, #31
 800159c:	0f61      	lsrs	r1, r4, #29
 800159e:	007a      	lsls	r2, r7, #1
 80015a0:	4319      	orrs	r1, r3
 80015a2:	00e3      	lsls	r3, r4, #3
 80015a4:	033c      	lsls	r4, r7, #12
 80015a6:	0fff      	lsrs	r7, r7, #31
 80015a8:	46bc      	mov	ip, r7
 80015aa:	0a64      	lsrs	r4, r4, #9
 80015ac:	0f47      	lsrs	r7, r0, #29
 80015ae:	4327      	orrs	r7, r4
 80015b0:	0d76      	lsrs	r6, r6, #21
 80015b2:	0d52      	lsrs	r2, r2, #21
 80015b4:	00c0      	lsls	r0, r0, #3
 80015b6:	46b9      	mov	r9, r7
 80015b8:	4680      	mov	r8, r0
 80015ba:	1ab7      	subs	r7, r6, r2
 80015bc:	4565      	cmp	r5, ip
 80015be:	d100      	bne.n	80015c2 <__aeabi_dadd+0x3e>
 80015c0:	e09b      	b.n	80016fa <__aeabi_dadd+0x176>
 80015c2:	2f00      	cmp	r7, #0
 80015c4:	dc00      	bgt.n	80015c8 <__aeabi_dadd+0x44>
 80015c6:	e084      	b.n	80016d2 <__aeabi_dadd+0x14e>
 80015c8:	2a00      	cmp	r2, #0
 80015ca:	d100      	bne.n	80015ce <__aeabi_dadd+0x4a>
 80015cc:	e0be      	b.n	800174c <__aeabi_dadd+0x1c8>
 80015ce:	4ac8      	ldr	r2, [pc, #800]	; (80018f0 <__aeabi_dadd+0x36c>)
 80015d0:	4296      	cmp	r6, r2
 80015d2:	d100      	bne.n	80015d6 <__aeabi_dadd+0x52>
 80015d4:	e124      	b.n	8001820 <__aeabi_dadd+0x29c>
 80015d6:	2280      	movs	r2, #128	; 0x80
 80015d8:	464c      	mov	r4, r9
 80015da:	0412      	lsls	r2, r2, #16
 80015dc:	4314      	orrs	r4, r2
 80015de:	46a1      	mov	r9, r4
 80015e0:	2f38      	cmp	r7, #56	; 0x38
 80015e2:	dd00      	ble.n	80015e6 <__aeabi_dadd+0x62>
 80015e4:	e167      	b.n	80018b6 <__aeabi_dadd+0x332>
 80015e6:	2f1f      	cmp	r7, #31
 80015e8:	dd00      	ble.n	80015ec <__aeabi_dadd+0x68>
 80015ea:	e1d6      	b.n	800199a <__aeabi_dadd+0x416>
 80015ec:	2220      	movs	r2, #32
 80015ee:	464c      	mov	r4, r9
 80015f0:	1bd2      	subs	r2, r2, r7
 80015f2:	4094      	lsls	r4, r2
 80015f4:	46a2      	mov	sl, r4
 80015f6:	4644      	mov	r4, r8
 80015f8:	40fc      	lsrs	r4, r7
 80015fa:	0020      	movs	r0, r4
 80015fc:	4654      	mov	r4, sl
 80015fe:	4304      	orrs	r4, r0
 8001600:	4640      	mov	r0, r8
 8001602:	4090      	lsls	r0, r2
 8001604:	1e42      	subs	r2, r0, #1
 8001606:	4190      	sbcs	r0, r2
 8001608:	464a      	mov	r2, r9
 800160a:	40fa      	lsrs	r2, r7
 800160c:	4304      	orrs	r4, r0
 800160e:	1a89      	subs	r1, r1, r2
 8001610:	1b1c      	subs	r4, r3, r4
 8001612:	42a3      	cmp	r3, r4
 8001614:	4192      	sbcs	r2, r2
 8001616:	4252      	negs	r2, r2
 8001618:	1a8b      	subs	r3, r1, r2
 800161a:	469a      	mov	sl, r3
 800161c:	4653      	mov	r3, sl
 800161e:	021b      	lsls	r3, r3, #8
 8001620:	d400      	bmi.n	8001624 <__aeabi_dadd+0xa0>
 8001622:	e0d4      	b.n	80017ce <__aeabi_dadd+0x24a>
 8001624:	4653      	mov	r3, sl
 8001626:	025a      	lsls	r2, r3, #9
 8001628:	0a53      	lsrs	r3, r2, #9
 800162a:	469a      	mov	sl, r3
 800162c:	4653      	mov	r3, sl
 800162e:	2b00      	cmp	r3, #0
 8001630:	d100      	bne.n	8001634 <__aeabi_dadd+0xb0>
 8001632:	e104      	b.n	800183e <__aeabi_dadd+0x2ba>
 8001634:	4650      	mov	r0, sl
 8001636:	f001 fe73 	bl	8003320 <__clzsi2>
 800163a:	0003      	movs	r3, r0
 800163c:	3b08      	subs	r3, #8
 800163e:	2220      	movs	r2, #32
 8001640:	0020      	movs	r0, r4
 8001642:	1ad2      	subs	r2, r2, r3
 8001644:	4651      	mov	r1, sl
 8001646:	40d0      	lsrs	r0, r2
 8001648:	4099      	lsls	r1, r3
 800164a:	0002      	movs	r2, r0
 800164c:	409c      	lsls	r4, r3
 800164e:	430a      	orrs	r2, r1
 8001650:	42b3      	cmp	r3, r6
 8001652:	da00      	bge.n	8001656 <__aeabi_dadd+0xd2>
 8001654:	e102      	b.n	800185c <__aeabi_dadd+0x2d8>
 8001656:	1b9b      	subs	r3, r3, r6
 8001658:	1c59      	adds	r1, r3, #1
 800165a:	291f      	cmp	r1, #31
 800165c:	dd00      	ble.n	8001660 <__aeabi_dadd+0xdc>
 800165e:	e0a7      	b.n	80017b0 <__aeabi_dadd+0x22c>
 8001660:	2320      	movs	r3, #32
 8001662:	0010      	movs	r0, r2
 8001664:	0026      	movs	r6, r4
 8001666:	1a5b      	subs	r3, r3, r1
 8001668:	409c      	lsls	r4, r3
 800166a:	4098      	lsls	r0, r3
 800166c:	40ce      	lsrs	r6, r1
 800166e:	40ca      	lsrs	r2, r1
 8001670:	1e63      	subs	r3, r4, #1
 8001672:	419c      	sbcs	r4, r3
 8001674:	4330      	orrs	r0, r6
 8001676:	4692      	mov	sl, r2
 8001678:	2600      	movs	r6, #0
 800167a:	4304      	orrs	r4, r0
 800167c:	0763      	lsls	r3, r4, #29
 800167e:	d009      	beq.n	8001694 <__aeabi_dadd+0x110>
 8001680:	230f      	movs	r3, #15
 8001682:	4023      	ands	r3, r4
 8001684:	2b04      	cmp	r3, #4
 8001686:	d005      	beq.n	8001694 <__aeabi_dadd+0x110>
 8001688:	1d23      	adds	r3, r4, #4
 800168a:	42a3      	cmp	r3, r4
 800168c:	41a4      	sbcs	r4, r4
 800168e:	4264      	negs	r4, r4
 8001690:	44a2      	add	sl, r4
 8001692:	001c      	movs	r4, r3
 8001694:	4653      	mov	r3, sl
 8001696:	021b      	lsls	r3, r3, #8
 8001698:	d400      	bmi.n	800169c <__aeabi_dadd+0x118>
 800169a:	e09b      	b.n	80017d4 <__aeabi_dadd+0x250>
 800169c:	4b94      	ldr	r3, [pc, #592]	; (80018f0 <__aeabi_dadd+0x36c>)
 800169e:	3601      	adds	r6, #1
 80016a0:	429e      	cmp	r6, r3
 80016a2:	d100      	bne.n	80016a6 <__aeabi_dadd+0x122>
 80016a4:	e0b8      	b.n	8001818 <__aeabi_dadd+0x294>
 80016a6:	4653      	mov	r3, sl
 80016a8:	4992      	ldr	r1, [pc, #584]	; (80018f4 <__aeabi_dadd+0x370>)
 80016aa:	08e4      	lsrs	r4, r4, #3
 80016ac:	400b      	ands	r3, r1
 80016ae:	0019      	movs	r1, r3
 80016b0:	075b      	lsls	r3, r3, #29
 80016b2:	4323      	orrs	r3, r4
 80016b4:	0572      	lsls	r2, r6, #21
 80016b6:	024c      	lsls	r4, r1, #9
 80016b8:	0b24      	lsrs	r4, r4, #12
 80016ba:	0d52      	lsrs	r2, r2, #21
 80016bc:	0512      	lsls	r2, r2, #20
 80016be:	07ed      	lsls	r5, r5, #31
 80016c0:	4322      	orrs	r2, r4
 80016c2:	432a      	orrs	r2, r5
 80016c4:	0018      	movs	r0, r3
 80016c6:	0011      	movs	r1, r2
 80016c8:	bce0      	pop	{r5, r6, r7}
 80016ca:	46ba      	mov	sl, r7
 80016cc:	46b1      	mov	r9, r6
 80016ce:	46a8      	mov	r8, r5
 80016d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016d2:	2f00      	cmp	r7, #0
 80016d4:	d048      	beq.n	8001768 <__aeabi_dadd+0x1e4>
 80016d6:	1b97      	subs	r7, r2, r6
 80016d8:	2e00      	cmp	r6, #0
 80016da:	d000      	beq.n	80016de <__aeabi_dadd+0x15a>
 80016dc:	e10e      	b.n	80018fc <__aeabi_dadd+0x378>
 80016de:	000c      	movs	r4, r1
 80016e0:	431c      	orrs	r4, r3
 80016e2:	d100      	bne.n	80016e6 <__aeabi_dadd+0x162>
 80016e4:	e1b7      	b.n	8001a56 <__aeabi_dadd+0x4d2>
 80016e6:	1e7c      	subs	r4, r7, #1
 80016e8:	2f01      	cmp	r7, #1
 80016ea:	d100      	bne.n	80016ee <__aeabi_dadd+0x16a>
 80016ec:	e226      	b.n	8001b3c <__aeabi_dadd+0x5b8>
 80016ee:	4d80      	ldr	r5, [pc, #512]	; (80018f0 <__aeabi_dadd+0x36c>)
 80016f0:	42af      	cmp	r7, r5
 80016f2:	d100      	bne.n	80016f6 <__aeabi_dadd+0x172>
 80016f4:	e1d5      	b.n	8001aa2 <__aeabi_dadd+0x51e>
 80016f6:	0027      	movs	r7, r4
 80016f8:	e107      	b.n	800190a <__aeabi_dadd+0x386>
 80016fa:	2f00      	cmp	r7, #0
 80016fc:	dc00      	bgt.n	8001700 <__aeabi_dadd+0x17c>
 80016fe:	e0b2      	b.n	8001866 <__aeabi_dadd+0x2e2>
 8001700:	2a00      	cmp	r2, #0
 8001702:	d047      	beq.n	8001794 <__aeabi_dadd+0x210>
 8001704:	4a7a      	ldr	r2, [pc, #488]	; (80018f0 <__aeabi_dadd+0x36c>)
 8001706:	4296      	cmp	r6, r2
 8001708:	d100      	bne.n	800170c <__aeabi_dadd+0x188>
 800170a:	e089      	b.n	8001820 <__aeabi_dadd+0x29c>
 800170c:	2280      	movs	r2, #128	; 0x80
 800170e:	464c      	mov	r4, r9
 8001710:	0412      	lsls	r2, r2, #16
 8001712:	4314      	orrs	r4, r2
 8001714:	46a1      	mov	r9, r4
 8001716:	2f38      	cmp	r7, #56	; 0x38
 8001718:	dc6b      	bgt.n	80017f2 <__aeabi_dadd+0x26e>
 800171a:	2f1f      	cmp	r7, #31
 800171c:	dc00      	bgt.n	8001720 <__aeabi_dadd+0x19c>
 800171e:	e16e      	b.n	80019fe <__aeabi_dadd+0x47a>
 8001720:	003a      	movs	r2, r7
 8001722:	4648      	mov	r0, r9
 8001724:	3a20      	subs	r2, #32
 8001726:	40d0      	lsrs	r0, r2
 8001728:	4684      	mov	ip, r0
 800172a:	2f20      	cmp	r7, #32
 800172c:	d007      	beq.n	800173e <__aeabi_dadd+0x1ba>
 800172e:	2240      	movs	r2, #64	; 0x40
 8001730:	4648      	mov	r0, r9
 8001732:	1bd2      	subs	r2, r2, r7
 8001734:	4090      	lsls	r0, r2
 8001736:	0002      	movs	r2, r0
 8001738:	4640      	mov	r0, r8
 800173a:	4310      	orrs	r0, r2
 800173c:	4680      	mov	r8, r0
 800173e:	4640      	mov	r0, r8
 8001740:	1e42      	subs	r2, r0, #1
 8001742:	4190      	sbcs	r0, r2
 8001744:	4662      	mov	r2, ip
 8001746:	0004      	movs	r4, r0
 8001748:	4314      	orrs	r4, r2
 800174a:	e057      	b.n	80017fc <__aeabi_dadd+0x278>
 800174c:	464a      	mov	r2, r9
 800174e:	4302      	orrs	r2, r0
 8001750:	d100      	bne.n	8001754 <__aeabi_dadd+0x1d0>
 8001752:	e103      	b.n	800195c <__aeabi_dadd+0x3d8>
 8001754:	1e7a      	subs	r2, r7, #1
 8001756:	2f01      	cmp	r7, #1
 8001758:	d100      	bne.n	800175c <__aeabi_dadd+0x1d8>
 800175a:	e193      	b.n	8001a84 <__aeabi_dadd+0x500>
 800175c:	4c64      	ldr	r4, [pc, #400]	; (80018f0 <__aeabi_dadd+0x36c>)
 800175e:	42a7      	cmp	r7, r4
 8001760:	d100      	bne.n	8001764 <__aeabi_dadd+0x1e0>
 8001762:	e18a      	b.n	8001a7a <__aeabi_dadd+0x4f6>
 8001764:	0017      	movs	r7, r2
 8001766:	e73b      	b.n	80015e0 <__aeabi_dadd+0x5c>
 8001768:	4c63      	ldr	r4, [pc, #396]	; (80018f8 <__aeabi_dadd+0x374>)
 800176a:	1c72      	adds	r2, r6, #1
 800176c:	4222      	tst	r2, r4
 800176e:	d000      	beq.n	8001772 <__aeabi_dadd+0x1ee>
 8001770:	e0e0      	b.n	8001934 <__aeabi_dadd+0x3b0>
 8001772:	000a      	movs	r2, r1
 8001774:	431a      	orrs	r2, r3
 8001776:	2e00      	cmp	r6, #0
 8001778:	d000      	beq.n	800177c <__aeabi_dadd+0x1f8>
 800177a:	e174      	b.n	8001a66 <__aeabi_dadd+0x4e2>
 800177c:	2a00      	cmp	r2, #0
 800177e:	d100      	bne.n	8001782 <__aeabi_dadd+0x1fe>
 8001780:	e1d0      	b.n	8001b24 <__aeabi_dadd+0x5a0>
 8001782:	464a      	mov	r2, r9
 8001784:	4302      	orrs	r2, r0
 8001786:	d000      	beq.n	800178a <__aeabi_dadd+0x206>
 8001788:	e1e3      	b.n	8001b52 <__aeabi_dadd+0x5ce>
 800178a:	074a      	lsls	r2, r1, #29
 800178c:	08db      	lsrs	r3, r3, #3
 800178e:	4313      	orrs	r3, r2
 8001790:	08c9      	lsrs	r1, r1, #3
 8001792:	e029      	b.n	80017e8 <__aeabi_dadd+0x264>
 8001794:	464a      	mov	r2, r9
 8001796:	4302      	orrs	r2, r0
 8001798:	d100      	bne.n	800179c <__aeabi_dadd+0x218>
 800179a:	e17d      	b.n	8001a98 <__aeabi_dadd+0x514>
 800179c:	1e7a      	subs	r2, r7, #1
 800179e:	2f01      	cmp	r7, #1
 80017a0:	d100      	bne.n	80017a4 <__aeabi_dadd+0x220>
 80017a2:	e0e0      	b.n	8001966 <__aeabi_dadd+0x3e2>
 80017a4:	4c52      	ldr	r4, [pc, #328]	; (80018f0 <__aeabi_dadd+0x36c>)
 80017a6:	42a7      	cmp	r7, r4
 80017a8:	d100      	bne.n	80017ac <__aeabi_dadd+0x228>
 80017aa:	e166      	b.n	8001a7a <__aeabi_dadd+0x4f6>
 80017ac:	0017      	movs	r7, r2
 80017ae:	e7b2      	b.n	8001716 <__aeabi_dadd+0x192>
 80017b0:	0010      	movs	r0, r2
 80017b2:	3b1f      	subs	r3, #31
 80017b4:	40d8      	lsrs	r0, r3
 80017b6:	2920      	cmp	r1, #32
 80017b8:	d003      	beq.n	80017c2 <__aeabi_dadd+0x23e>
 80017ba:	2340      	movs	r3, #64	; 0x40
 80017bc:	1a5b      	subs	r3, r3, r1
 80017be:	409a      	lsls	r2, r3
 80017c0:	4314      	orrs	r4, r2
 80017c2:	1e63      	subs	r3, r4, #1
 80017c4:	419c      	sbcs	r4, r3
 80017c6:	2300      	movs	r3, #0
 80017c8:	2600      	movs	r6, #0
 80017ca:	469a      	mov	sl, r3
 80017cc:	4304      	orrs	r4, r0
 80017ce:	0763      	lsls	r3, r4, #29
 80017d0:	d000      	beq.n	80017d4 <__aeabi_dadd+0x250>
 80017d2:	e755      	b.n	8001680 <__aeabi_dadd+0xfc>
 80017d4:	4652      	mov	r2, sl
 80017d6:	08e3      	lsrs	r3, r4, #3
 80017d8:	0752      	lsls	r2, r2, #29
 80017da:	4313      	orrs	r3, r2
 80017dc:	4652      	mov	r2, sl
 80017de:	0037      	movs	r7, r6
 80017e0:	08d1      	lsrs	r1, r2, #3
 80017e2:	4a43      	ldr	r2, [pc, #268]	; (80018f0 <__aeabi_dadd+0x36c>)
 80017e4:	4297      	cmp	r7, r2
 80017e6:	d01f      	beq.n	8001828 <__aeabi_dadd+0x2a4>
 80017e8:	0309      	lsls	r1, r1, #12
 80017ea:	057a      	lsls	r2, r7, #21
 80017ec:	0b0c      	lsrs	r4, r1, #12
 80017ee:	0d52      	lsrs	r2, r2, #21
 80017f0:	e764      	b.n	80016bc <__aeabi_dadd+0x138>
 80017f2:	4642      	mov	r2, r8
 80017f4:	464c      	mov	r4, r9
 80017f6:	4314      	orrs	r4, r2
 80017f8:	1e62      	subs	r2, r4, #1
 80017fa:	4194      	sbcs	r4, r2
 80017fc:	18e4      	adds	r4, r4, r3
 80017fe:	429c      	cmp	r4, r3
 8001800:	4192      	sbcs	r2, r2
 8001802:	4252      	negs	r2, r2
 8001804:	4692      	mov	sl, r2
 8001806:	448a      	add	sl, r1
 8001808:	4653      	mov	r3, sl
 800180a:	021b      	lsls	r3, r3, #8
 800180c:	d5df      	bpl.n	80017ce <__aeabi_dadd+0x24a>
 800180e:	4b38      	ldr	r3, [pc, #224]	; (80018f0 <__aeabi_dadd+0x36c>)
 8001810:	3601      	adds	r6, #1
 8001812:	429e      	cmp	r6, r3
 8001814:	d000      	beq.n	8001818 <__aeabi_dadd+0x294>
 8001816:	e0b3      	b.n	8001980 <__aeabi_dadd+0x3fc>
 8001818:	0032      	movs	r2, r6
 800181a:	2400      	movs	r4, #0
 800181c:	2300      	movs	r3, #0
 800181e:	e74d      	b.n	80016bc <__aeabi_dadd+0x138>
 8001820:	074a      	lsls	r2, r1, #29
 8001822:	08db      	lsrs	r3, r3, #3
 8001824:	4313      	orrs	r3, r2
 8001826:	08c9      	lsrs	r1, r1, #3
 8001828:	001a      	movs	r2, r3
 800182a:	430a      	orrs	r2, r1
 800182c:	d100      	bne.n	8001830 <__aeabi_dadd+0x2ac>
 800182e:	e200      	b.n	8001c32 <__aeabi_dadd+0x6ae>
 8001830:	2480      	movs	r4, #128	; 0x80
 8001832:	0324      	lsls	r4, r4, #12
 8001834:	430c      	orrs	r4, r1
 8001836:	0324      	lsls	r4, r4, #12
 8001838:	4a2d      	ldr	r2, [pc, #180]	; (80018f0 <__aeabi_dadd+0x36c>)
 800183a:	0b24      	lsrs	r4, r4, #12
 800183c:	e73e      	b.n	80016bc <__aeabi_dadd+0x138>
 800183e:	0020      	movs	r0, r4
 8001840:	f001 fd6e 	bl	8003320 <__clzsi2>
 8001844:	0003      	movs	r3, r0
 8001846:	3318      	adds	r3, #24
 8001848:	2b1f      	cmp	r3, #31
 800184a:	dc00      	bgt.n	800184e <__aeabi_dadd+0x2ca>
 800184c:	e6f7      	b.n	800163e <__aeabi_dadd+0xba>
 800184e:	0022      	movs	r2, r4
 8001850:	3808      	subs	r0, #8
 8001852:	4082      	lsls	r2, r0
 8001854:	2400      	movs	r4, #0
 8001856:	42b3      	cmp	r3, r6
 8001858:	db00      	blt.n	800185c <__aeabi_dadd+0x2d8>
 800185a:	e6fc      	b.n	8001656 <__aeabi_dadd+0xd2>
 800185c:	1af6      	subs	r6, r6, r3
 800185e:	4b25      	ldr	r3, [pc, #148]	; (80018f4 <__aeabi_dadd+0x370>)
 8001860:	401a      	ands	r2, r3
 8001862:	4692      	mov	sl, r2
 8001864:	e70a      	b.n	800167c <__aeabi_dadd+0xf8>
 8001866:	2f00      	cmp	r7, #0
 8001868:	d02b      	beq.n	80018c2 <__aeabi_dadd+0x33e>
 800186a:	1b97      	subs	r7, r2, r6
 800186c:	2e00      	cmp	r6, #0
 800186e:	d100      	bne.n	8001872 <__aeabi_dadd+0x2ee>
 8001870:	e0b8      	b.n	80019e4 <__aeabi_dadd+0x460>
 8001872:	4c1f      	ldr	r4, [pc, #124]	; (80018f0 <__aeabi_dadd+0x36c>)
 8001874:	42a2      	cmp	r2, r4
 8001876:	d100      	bne.n	800187a <__aeabi_dadd+0x2f6>
 8001878:	e11c      	b.n	8001ab4 <__aeabi_dadd+0x530>
 800187a:	2480      	movs	r4, #128	; 0x80
 800187c:	0424      	lsls	r4, r4, #16
 800187e:	4321      	orrs	r1, r4
 8001880:	2f38      	cmp	r7, #56	; 0x38
 8001882:	dd00      	ble.n	8001886 <__aeabi_dadd+0x302>
 8001884:	e11e      	b.n	8001ac4 <__aeabi_dadd+0x540>
 8001886:	2f1f      	cmp	r7, #31
 8001888:	dd00      	ble.n	800188c <__aeabi_dadd+0x308>
 800188a:	e19e      	b.n	8001bca <__aeabi_dadd+0x646>
 800188c:	2620      	movs	r6, #32
 800188e:	000c      	movs	r4, r1
 8001890:	1bf6      	subs	r6, r6, r7
 8001892:	0018      	movs	r0, r3
 8001894:	40b3      	lsls	r3, r6
 8001896:	40b4      	lsls	r4, r6
 8001898:	40f8      	lsrs	r0, r7
 800189a:	1e5e      	subs	r6, r3, #1
 800189c:	41b3      	sbcs	r3, r6
 800189e:	40f9      	lsrs	r1, r7
 80018a0:	4304      	orrs	r4, r0
 80018a2:	431c      	orrs	r4, r3
 80018a4:	4489      	add	r9, r1
 80018a6:	4444      	add	r4, r8
 80018a8:	4544      	cmp	r4, r8
 80018aa:	419b      	sbcs	r3, r3
 80018ac:	425b      	negs	r3, r3
 80018ae:	444b      	add	r3, r9
 80018b0:	469a      	mov	sl, r3
 80018b2:	0016      	movs	r6, r2
 80018b4:	e7a8      	b.n	8001808 <__aeabi_dadd+0x284>
 80018b6:	4642      	mov	r2, r8
 80018b8:	464c      	mov	r4, r9
 80018ba:	4314      	orrs	r4, r2
 80018bc:	1e62      	subs	r2, r4, #1
 80018be:	4194      	sbcs	r4, r2
 80018c0:	e6a6      	b.n	8001610 <__aeabi_dadd+0x8c>
 80018c2:	4c0d      	ldr	r4, [pc, #52]	; (80018f8 <__aeabi_dadd+0x374>)
 80018c4:	1c72      	adds	r2, r6, #1
 80018c6:	4222      	tst	r2, r4
 80018c8:	d000      	beq.n	80018cc <__aeabi_dadd+0x348>
 80018ca:	e0a8      	b.n	8001a1e <__aeabi_dadd+0x49a>
 80018cc:	000a      	movs	r2, r1
 80018ce:	431a      	orrs	r2, r3
 80018d0:	2e00      	cmp	r6, #0
 80018d2:	d000      	beq.n	80018d6 <__aeabi_dadd+0x352>
 80018d4:	e10a      	b.n	8001aec <__aeabi_dadd+0x568>
 80018d6:	2a00      	cmp	r2, #0
 80018d8:	d100      	bne.n	80018dc <__aeabi_dadd+0x358>
 80018da:	e15e      	b.n	8001b9a <__aeabi_dadd+0x616>
 80018dc:	464a      	mov	r2, r9
 80018de:	4302      	orrs	r2, r0
 80018e0:	d000      	beq.n	80018e4 <__aeabi_dadd+0x360>
 80018e2:	e161      	b.n	8001ba8 <__aeabi_dadd+0x624>
 80018e4:	074a      	lsls	r2, r1, #29
 80018e6:	08db      	lsrs	r3, r3, #3
 80018e8:	4313      	orrs	r3, r2
 80018ea:	08c9      	lsrs	r1, r1, #3
 80018ec:	e77c      	b.n	80017e8 <__aeabi_dadd+0x264>
 80018ee:	46c0      	nop			; (mov r8, r8)
 80018f0:	000007ff 	.word	0x000007ff
 80018f4:	ff7fffff 	.word	0xff7fffff
 80018f8:	000007fe 	.word	0x000007fe
 80018fc:	4ccf      	ldr	r4, [pc, #828]	; (8001c3c <__aeabi_dadd+0x6b8>)
 80018fe:	42a2      	cmp	r2, r4
 8001900:	d100      	bne.n	8001904 <__aeabi_dadd+0x380>
 8001902:	e0ce      	b.n	8001aa2 <__aeabi_dadd+0x51e>
 8001904:	2480      	movs	r4, #128	; 0x80
 8001906:	0424      	lsls	r4, r4, #16
 8001908:	4321      	orrs	r1, r4
 800190a:	2f38      	cmp	r7, #56	; 0x38
 800190c:	dc5b      	bgt.n	80019c6 <__aeabi_dadd+0x442>
 800190e:	2f1f      	cmp	r7, #31
 8001910:	dd00      	ble.n	8001914 <__aeabi_dadd+0x390>
 8001912:	e0dc      	b.n	8001ace <__aeabi_dadd+0x54a>
 8001914:	2520      	movs	r5, #32
 8001916:	000c      	movs	r4, r1
 8001918:	1bed      	subs	r5, r5, r7
 800191a:	001e      	movs	r6, r3
 800191c:	40ab      	lsls	r3, r5
 800191e:	40ac      	lsls	r4, r5
 8001920:	40fe      	lsrs	r6, r7
 8001922:	1e5d      	subs	r5, r3, #1
 8001924:	41ab      	sbcs	r3, r5
 8001926:	4334      	orrs	r4, r6
 8001928:	40f9      	lsrs	r1, r7
 800192a:	431c      	orrs	r4, r3
 800192c:	464b      	mov	r3, r9
 800192e:	1a5b      	subs	r3, r3, r1
 8001930:	4699      	mov	r9, r3
 8001932:	e04c      	b.n	80019ce <__aeabi_dadd+0x44a>
 8001934:	464a      	mov	r2, r9
 8001936:	1a1c      	subs	r4, r3, r0
 8001938:	1a88      	subs	r0, r1, r2
 800193a:	42a3      	cmp	r3, r4
 800193c:	4192      	sbcs	r2, r2
 800193e:	4252      	negs	r2, r2
 8001940:	4692      	mov	sl, r2
 8001942:	0002      	movs	r2, r0
 8001944:	4650      	mov	r0, sl
 8001946:	1a12      	subs	r2, r2, r0
 8001948:	4692      	mov	sl, r2
 800194a:	0212      	lsls	r2, r2, #8
 800194c:	d478      	bmi.n	8001a40 <__aeabi_dadd+0x4bc>
 800194e:	4653      	mov	r3, sl
 8001950:	4323      	orrs	r3, r4
 8001952:	d000      	beq.n	8001956 <__aeabi_dadd+0x3d2>
 8001954:	e66a      	b.n	800162c <__aeabi_dadd+0xa8>
 8001956:	2100      	movs	r1, #0
 8001958:	2500      	movs	r5, #0
 800195a:	e745      	b.n	80017e8 <__aeabi_dadd+0x264>
 800195c:	074a      	lsls	r2, r1, #29
 800195e:	08db      	lsrs	r3, r3, #3
 8001960:	4313      	orrs	r3, r2
 8001962:	08c9      	lsrs	r1, r1, #3
 8001964:	e73d      	b.n	80017e2 <__aeabi_dadd+0x25e>
 8001966:	181c      	adds	r4, r3, r0
 8001968:	429c      	cmp	r4, r3
 800196a:	419b      	sbcs	r3, r3
 800196c:	4449      	add	r1, r9
 800196e:	468a      	mov	sl, r1
 8001970:	425b      	negs	r3, r3
 8001972:	449a      	add	sl, r3
 8001974:	4653      	mov	r3, sl
 8001976:	2601      	movs	r6, #1
 8001978:	021b      	lsls	r3, r3, #8
 800197a:	d400      	bmi.n	800197e <__aeabi_dadd+0x3fa>
 800197c:	e727      	b.n	80017ce <__aeabi_dadd+0x24a>
 800197e:	2602      	movs	r6, #2
 8001980:	4652      	mov	r2, sl
 8001982:	4baf      	ldr	r3, [pc, #700]	; (8001c40 <__aeabi_dadd+0x6bc>)
 8001984:	2101      	movs	r1, #1
 8001986:	401a      	ands	r2, r3
 8001988:	0013      	movs	r3, r2
 800198a:	4021      	ands	r1, r4
 800198c:	0862      	lsrs	r2, r4, #1
 800198e:	430a      	orrs	r2, r1
 8001990:	07dc      	lsls	r4, r3, #31
 8001992:	085b      	lsrs	r3, r3, #1
 8001994:	469a      	mov	sl, r3
 8001996:	4314      	orrs	r4, r2
 8001998:	e670      	b.n	800167c <__aeabi_dadd+0xf8>
 800199a:	003a      	movs	r2, r7
 800199c:	464c      	mov	r4, r9
 800199e:	3a20      	subs	r2, #32
 80019a0:	40d4      	lsrs	r4, r2
 80019a2:	46a4      	mov	ip, r4
 80019a4:	2f20      	cmp	r7, #32
 80019a6:	d007      	beq.n	80019b8 <__aeabi_dadd+0x434>
 80019a8:	2240      	movs	r2, #64	; 0x40
 80019aa:	4648      	mov	r0, r9
 80019ac:	1bd2      	subs	r2, r2, r7
 80019ae:	4090      	lsls	r0, r2
 80019b0:	0002      	movs	r2, r0
 80019b2:	4640      	mov	r0, r8
 80019b4:	4310      	orrs	r0, r2
 80019b6:	4680      	mov	r8, r0
 80019b8:	4640      	mov	r0, r8
 80019ba:	1e42      	subs	r2, r0, #1
 80019bc:	4190      	sbcs	r0, r2
 80019be:	4662      	mov	r2, ip
 80019c0:	0004      	movs	r4, r0
 80019c2:	4314      	orrs	r4, r2
 80019c4:	e624      	b.n	8001610 <__aeabi_dadd+0x8c>
 80019c6:	4319      	orrs	r1, r3
 80019c8:	000c      	movs	r4, r1
 80019ca:	1e63      	subs	r3, r4, #1
 80019cc:	419c      	sbcs	r4, r3
 80019ce:	4643      	mov	r3, r8
 80019d0:	1b1c      	subs	r4, r3, r4
 80019d2:	45a0      	cmp	r8, r4
 80019d4:	419b      	sbcs	r3, r3
 80019d6:	4649      	mov	r1, r9
 80019d8:	425b      	negs	r3, r3
 80019da:	1acb      	subs	r3, r1, r3
 80019dc:	469a      	mov	sl, r3
 80019de:	4665      	mov	r5, ip
 80019e0:	0016      	movs	r6, r2
 80019e2:	e61b      	b.n	800161c <__aeabi_dadd+0x98>
 80019e4:	000c      	movs	r4, r1
 80019e6:	431c      	orrs	r4, r3
 80019e8:	d100      	bne.n	80019ec <__aeabi_dadd+0x468>
 80019ea:	e0c7      	b.n	8001b7c <__aeabi_dadd+0x5f8>
 80019ec:	1e7c      	subs	r4, r7, #1
 80019ee:	2f01      	cmp	r7, #1
 80019f0:	d100      	bne.n	80019f4 <__aeabi_dadd+0x470>
 80019f2:	e0f9      	b.n	8001be8 <__aeabi_dadd+0x664>
 80019f4:	4e91      	ldr	r6, [pc, #580]	; (8001c3c <__aeabi_dadd+0x6b8>)
 80019f6:	42b7      	cmp	r7, r6
 80019f8:	d05c      	beq.n	8001ab4 <__aeabi_dadd+0x530>
 80019fa:	0027      	movs	r7, r4
 80019fc:	e740      	b.n	8001880 <__aeabi_dadd+0x2fc>
 80019fe:	2220      	movs	r2, #32
 8001a00:	464c      	mov	r4, r9
 8001a02:	4640      	mov	r0, r8
 8001a04:	1bd2      	subs	r2, r2, r7
 8001a06:	4094      	lsls	r4, r2
 8001a08:	40f8      	lsrs	r0, r7
 8001a0a:	4304      	orrs	r4, r0
 8001a0c:	4640      	mov	r0, r8
 8001a0e:	4090      	lsls	r0, r2
 8001a10:	1e42      	subs	r2, r0, #1
 8001a12:	4190      	sbcs	r0, r2
 8001a14:	464a      	mov	r2, r9
 8001a16:	40fa      	lsrs	r2, r7
 8001a18:	4304      	orrs	r4, r0
 8001a1a:	1889      	adds	r1, r1, r2
 8001a1c:	e6ee      	b.n	80017fc <__aeabi_dadd+0x278>
 8001a1e:	4c87      	ldr	r4, [pc, #540]	; (8001c3c <__aeabi_dadd+0x6b8>)
 8001a20:	42a2      	cmp	r2, r4
 8001a22:	d100      	bne.n	8001a26 <__aeabi_dadd+0x4a2>
 8001a24:	e6f9      	b.n	800181a <__aeabi_dadd+0x296>
 8001a26:	1818      	adds	r0, r3, r0
 8001a28:	4298      	cmp	r0, r3
 8001a2a:	419b      	sbcs	r3, r3
 8001a2c:	4449      	add	r1, r9
 8001a2e:	425b      	negs	r3, r3
 8001a30:	18cb      	adds	r3, r1, r3
 8001a32:	07dc      	lsls	r4, r3, #31
 8001a34:	0840      	lsrs	r0, r0, #1
 8001a36:	085b      	lsrs	r3, r3, #1
 8001a38:	469a      	mov	sl, r3
 8001a3a:	0016      	movs	r6, r2
 8001a3c:	4304      	orrs	r4, r0
 8001a3e:	e6c6      	b.n	80017ce <__aeabi_dadd+0x24a>
 8001a40:	4642      	mov	r2, r8
 8001a42:	1ad4      	subs	r4, r2, r3
 8001a44:	45a0      	cmp	r8, r4
 8001a46:	4180      	sbcs	r0, r0
 8001a48:	464b      	mov	r3, r9
 8001a4a:	4240      	negs	r0, r0
 8001a4c:	1a59      	subs	r1, r3, r1
 8001a4e:	1a0b      	subs	r3, r1, r0
 8001a50:	469a      	mov	sl, r3
 8001a52:	4665      	mov	r5, ip
 8001a54:	e5ea      	b.n	800162c <__aeabi_dadd+0xa8>
 8001a56:	464b      	mov	r3, r9
 8001a58:	464a      	mov	r2, r9
 8001a5a:	08c0      	lsrs	r0, r0, #3
 8001a5c:	075b      	lsls	r3, r3, #29
 8001a5e:	4665      	mov	r5, ip
 8001a60:	4303      	orrs	r3, r0
 8001a62:	08d1      	lsrs	r1, r2, #3
 8001a64:	e6bd      	b.n	80017e2 <__aeabi_dadd+0x25e>
 8001a66:	2a00      	cmp	r2, #0
 8001a68:	d000      	beq.n	8001a6c <__aeabi_dadd+0x4e8>
 8001a6a:	e08e      	b.n	8001b8a <__aeabi_dadd+0x606>
 8001a6c:	464b      	mov	r3, r9
 8001a6e:	4303      	orrs	r3, r0
 8001a70:	d117      	bne.n	8001aa2 <__aeabi_dadd+0x51e>
 8001a72:	2180      	movs	r1, #128	; 0x80
 8001a74:	2500      	movs	r5, #0
 8001a76:	0309      	lsls	r1, r1, #12
 8001a78:	e6da      	b.n	8001830 <__aeabi_dadd+0x2ac>
 8001a7a:	074a      	lsls	r2, r1, #29
 8001a7c:	08db      	lsrs	r3, r3, #3
 8001a7e:	4313      	orrs	r3, r2
 8001a80:	08c9      	lsrs	r1, r1, #3
 8001a82:	e6d1      	b.n	8001828 <__aeabi_dadd+0x2a4>
 8001a84:	1a1c      	subs	r4, r3, r0
 8001a86:	464a      	mov	r2, r9
 8001a88:	42a3      	cmp	r3, r4
 8001a8a:	419b      	sbcs	r3, r3
 8001a8c:	1a89      	subs	r1, r1, r2
 8001a8e:	425b      	negs	r3, r3
 8001a90:	1acb      	subs	r3, r1, r3
 8001a92:	469a      	mov	sl, r3
 8001a94:	2601      	movs	r6, #1
 8001a96:	e5c1      	b.n	800161c <__aeabi_dadd+0x98>
 8001a98:	074a      	lsls	r2, r1, #29
 8001a9a:	08db      	lsrs	r3, r3, #3
 8001a9c:	4313      	orrs	r3, r2
 8001a9e:	08c9      	lsrs	r1, r1, #3
 8001aa0:	e69f      	b.n	80017e2 <__aeabi_dadd+0x25e>
 8001aa2:	4643      	mov	r3, r8
 8001aa4:	08d8      	lsrs	r0, r3, #3
 8001aa6:	464b      	mov	r3, r9
 8001aa8:	464a      	mov	r2, r9
 8001aaa:	075b      	lsls	r3, r3, #29
 8001aac:	4665      	mov	r5, ip
 8001aae:	4303      	orrs	r3, r0
 8001ab0:	08d1      	lsrs	r1, r2, #3
 8001ab2:	e6b9      	b.n	8001828 <__aeabi_dadd+0x2a4>
 8001ab4:	4643      	mov	r3, r8
 8001ab6:	08d8      	lsrs	r0, r3, #3
 8001ab8:	464b      	mov	r3, r9
 8001aba:	464a      	mov	r2, r9
 8001abc:	075b      	lsls	r3, r3, #29
 8001abe:	4303      	orrs	r3, r0
 8001ac0:	08d1      	lsrs	r1, r2, #3
 8001ac2:	e6b1      	b.n	8001828 <__aeabi_dadd+0x2a4>
 8001ac4:	4319      	orrs	r1, r3
 8001ac6:	000c      	movs	r4, r1
 8001ac8:	1e63      	subs	r3, r4, #1
 8001aca:	419c      	sbcs	r4, r3
 8001acc:	e6eb      	b.n	80018a6 <__aeabi_dadd+0x322>
 8001ace:	003c      	movs	r4, r7
 8001ad0:	000d      	movs	r5, r1
 8001ad2:	3c20      	subs	r4, #32
 8001ad4:	40e5      	lsrs	r5, r4
 8001ad6:	2f20      	cmp	r7, #32
 8001ad8:	d003      	beq.n	8001ae2 <__aeabi_dadd+0x55e>
 8001ada:	2440      	movs	r4, #64	; 0x40
 8001adc:	1be4      	subs	r4, r4, r7
 8001ade:	40a1      	lsls	r1, r4
 8001ae0:	430b      	orrs	r3, r1
 8001ae2:	001c      	movs	r4, r3
 8001ae4:	1e63      	subs	r3, r4, #1
 8001ae6:	419c      	sbcs	r4, r3
 8001ae8:	432c      	orrs	r4, r5
 8001aea:	e770      	b.n	80019ce <__aeabi_dadd+0x44a>
 8001aec:	2a00      	cmp	r2, #0
 8001aee:	d0e1      	beq.n	8001ab4 <__aeabi_dadd+0x530>
 8001af0:	464a      	mov	r2, r9
 8001af2:	4302      	orrs	r2, r0
 8001af4:	d0c1      	beq.n	8001a7a <__aeabi_dadd+0x4f6>
 8001af6:	074a      	lsls	r2, r1, #29
 8001af8:	08db      	lsrs	r3, r3, #3
 8001afa:	4313      	orrs	r3, r2
 8001afc:	2280      	movs	r2, #128	; 0x80
 8001afe:	08c9      	lsrs	r1, r1, #3
 8001b00:	0312      	lsls	r2, r2, #12
 8001b02:	4211      	tst	r1, r2
 8001b04:	d008      	beq.n	8001b18 <__aeabi_dadd+0x594>
 8001b06:	4648      	mov	r0, r9
 8001b08:	08c4      	lsrs	r4, r0, #3
 8001b0a:	4214      	tst	r4, r2
 8001b0c:	d104      	bne.n	8001b18 <__aeabi_dadd+0x594>
 8001b0e:	4643      	mov	r3, r8
 8001b10:	0021      	movs	r1, r4
 8001b12:	08db      	lsrs	r3, r3, #3
 8001b14:	0742      	lsls	r2, r0, #29
 8001b16:	4313      	orrs	r3, r2
 8001b18:	0f5a      	lsrs	r2, r3, #29
 8001b1a:	00db      	lsls	r3, r3, #3
 8001b1c:	0752      	lsls	r2, r2, #29
 8001b1e:	08db      	lsrs	r3, r3, #3
 8001b20:	4313      	orrs	r3, r2
 8001b22:	e681      	b.n	8001828 <__aeabi_dadd+0x2a4>
 8001b24:	464b      	mov	r3, r9
 8001b26:	4303      	orrs	r3, r0
 8001b28:	d100      	bne.n	8001b2c <__aeabi_dadd+0x5a8>
 8001b2a:	e714      	b.n	8001956 <__aeabi_dadd+0x3d2>
 8001b2c:	464b      	mov	r3, r9
 8001b2e:	464a      	mov	r2, r9
 8001b30:	08c0      	lsrs	r0, r0, #3
 8001b32:	075b      	lsls	r3, r3, #29
 8001b34:	4665      	mov	r5, ip
 8001b36:	4303      	orrs	r3, r0
 8001b38:	08d1      	lsrs	r1, r2, #3
 8001b3a:	e655      	b.n	80017e8 <__aeabi_dadd+0x264>
 8001b3c:	1ac4      	subs	r4, r0, r3
 8001b3e:	45a0      	cmp	r8, r4
 8001b40:	4180      	sbcs	r0, r0
 8001b42:	464b      	mov	r3, r9
 8001b44:	4240      	negs	r0, r0
 8001b46:	1a59      	subs	r1, r3, r1
 8001b48:	1a0b      	subs	r3, r1, r0
 8001b4a:	469a      	mov	sl, r3
 8001b4c:	4665      	mov	r5, ip
 8001b4e:	2601      	movs	r6, #1
 8001b50:	e564      	b.n	800161c <__aeabi_dadd+0x98>
 8001b52:	1a1c      	subs	r4, r3, r0
 8001b54:	464a      	mov	r2, r9
 8001b56:	42a3      	cmp	r3, r4
 8001b58:	4180      	sbcs	r0, r0
 8001b5a:	1a8a      	subs	r2, r1, r2
 8001b5c:	4240      	negs	r0, r0
 8001b5e:	1a12      	subs	r2, r2, r0
 8001b60:	4692      	mov	sl, r2
 8001b62:	0212      	lsls	r2, r2, #8
 8001b64:	d549      	bpl.n	8001bfa <__aeabi_dadd+0x676>
 8001b66:	4642      	mov	r2, r8
 8001b68:	1ad4      	subs	r4, r2, r3
 8001b6a:	45a0      	cmp	r8, r4
 8001b6c:	4180      	sbcs	r0, r0
 8001b6e:	464b      	mov	r3, r9
 8001b70:	4240      	negs	r0, r0
 8001b72:	1a59      	subs	r1, r3, r1
 8001b74:	1a0b      	subs	r3, r1, r0
 8001b76:	469a      	mov	sl, r3
 8001b78:	4665      	mov	r5, ip
 8001b7a:	e57f      	b.n	800167c <__aeabi_dadd+0xf8>
 8001b7c:	464b      	mov	r3, r9
 8001b7e:	464a      	mov	r2, r9
 8001b80:	08c0      	lsrs	r0, r0, #3
 8001b82:	075b      	lsls	r3, r3, #29
 8001b84:	4303      	orrs	r3, r0
 8001b86:	08d1      	lsrs	r1, r2, #3
 8001b88:	e62b      	b.n	80017e2 <__aeabi_dadd+0x25e>
 8001b8a:	464a      	mov	r2, r9
 8001b8c:	08db      	lsrs	r3, r3, #3
 8001b8e:	4302      	orrs	r2, r0
 8001b90:	d138      	bne.n	8001c04 <__aeabi_dadd+0x680>
 8001b92:	074a      	lsls	r2, r1, #29
 8001b94:	4313      	orrs	r3, r2
 8001b96:	08c9      	lsrs	r1, r1, #3
 8001b98:	e646      	b.n	8001828 <__aeabi_dadd+0x2a4>
 8001b9a:	464b      	mov	r3, r9
 8001b9c:	464a      	mov	r2, r9
 8001b9e:	08c0      	lsrs	r0, r0, #3
 8001ba0:	075b      	lsls	r3, r3, #29
 8001ba2:	4303      	orrs	r3, r0
 8001ba4:	08d1      	lsrs	r1, r2, #3
 8001ba6:	e61f      	b.n	80017e8 <__aeabi_dadd+0x264>
 8001ba8:	181c      	adds	r4, r3, r0
 8001baa:	429c      	cmp	r4, r3
 8001bac:	419b      	sbcs	r3, r3
 8001bae:	4449      	add	r1, r9
 8001bb0:	468a      	mov	sl, r1
 8001bb2:	425b      	negs	r3, r3
 8001bb4:	449a      	add	sl, r3
 8001bb6:	4653      	mov	r3, sl
 8001bb8:	021b      	lsls	r3, r3, #8
 8001bba:	d400      	bmi.n	8001bbe <__aeabi_dadd+0x63a>
 8001bbc:	e607      	b.n	80017ce <__aeabi_dadd+0x24a>
 8001bbe:	4652      	mov	r2, sl
 8001bc0:	4b1f      	ldr	r3, [pc, #124]	; (8001c40 <__aeabi_dadd+0x6bc>)
 8001bc2:	2601      	movs	r6, #1
 8001bc4:	401a      	ands	r2, r3
 8001bc6:	4692      	mov	sl, r2
 8001bc8:	e601      	b.n	80017ce <__aeabi_dadd+0x24a>
 8001bca:	003c      	movs	r4, r7
 8001bcc:	000e      	movs	r6, r1
 8001bce:	3c20      	subs	r4, #32
 8001bd0:	40e6      	lsrs	r6, r4
 8001bd2:	2f20      	cmp	r7, #32
 8001bd4:	d003      	beq.n	8001bde <__aeabi_dadd+0x65a>
 8001bd6:	2440      	movs	r4, #64	; 0x40
 8001bd8:	1be4      	subs	r4, r4, r7
 8001bda:	40a1      	lsls	r1, r4
 8001bdc:	430b      	orrs	r3, r1
 8001bde:	001c      	movs	r4, r3
 8001be0:	1e63      	subs	r3, r4, #1
 8001be2:	419c      	sbcs	r4, r3
 8001be4:	4334      	orrs	r4, r6
 8001be6:	e65e      	b.n	80018a6 <__aeabi_dadd+0x322>
 8001be8:	4443      	add	r3, r8
 8001bea:	4283      	cmp	r3, r0
 8001bec:	4180      	sbcs	r0, r0
 8001bee:	4449      	add	r1, r9
 8001bf0:	468a      	mov	sl, r1
 8001bf2:	4240      	negs	r0, r0
 8001bf4:	001c      	movs	r4, r3
 8001bf6:	4482      	add	sl, r0
 8001bf8:	e6bc      	b.n	8001974 <__aeabi_dadd+0x3f0>
 8001bfa:	4653      	mov	r3, sl
 8001bfc:	4323      	orrs	r3, r4
 8001bfe:	d100      	bne.n	8001c02 <__aeabi_dadd+0x67e>
 8001c00:	e6a9      	b.n	8001956 <__aeabi_dadd+0x3d2>
 8001c02:	e5e4      	b.n	80017ce <__aeabi_dadd+0x24a>
 8001c04:	074a      	lsls	r2, r1, #29
 8001c06:	4313      	orrs	r3, r2
 8001c08:	2280      	movs	r2, #128	; 0x80
 8001c0a:	08c9      	lsrs	r1, r1, #3
 8001c0c:	0312      	lsls	r2, r2, #12
 8001c0e:	4211      	tst	r1, r2
 8001c10:	d009      	beq.n	8001c26 <__aeabi_dadd+0x6a2>
 8001c12:	4648      	mov	r0, r9
 8001c14:	08c4      	lsrs	r4, r0, #3
 8001c16:	4214      	tst	r4, r2
 8001c18:	d105      	bne.n	8001c26 <__aeabi_dadd+0x6a2>
 8001c1a:	4643      	mov	r3, r8
 8001c1c:	4665      	mov	r5, ip
 8001c1e:	0021      	movs	r1, r4
 8001c20:	08db      	lsrs	r3, r3, #3
 8001c22:	0742      	lsls	r2, r0, #29
 8001c24:	4313      	orrs	r3, r2
 8001c26:	0f5a      	lsrs	r2, r3, #29
 8001c28:	00db      	lsls	r3, r3, #3
 8001c2a:	08db      	lsrs	r3, r3, #3
 8001c2c:	0752      	lsls	r2, r2, #29
 8001c2e:	4313      	orrs	r3, r2
 8001c30:	e5fa      	b.n	8001828 <__aeabi_dadd+0x2a4>
 8001c32:	2300      	movs	r3, #0
 8001c34:	4a01      	ldr	r2, [pc, #4]	; (8001c3c <__aeabi_dadd+0x6b8>)
 8001c36:	001c      	movs	r4, r3
 8001c38:	e540      	b.n	80016bc <__aeabi_dadd+0x138>
 8001c3a:	46c0      	nop			; (mov r8, r8)
 8001c3c:	000007ff 	.word	0x000007ff
 8001c40:	ff7fffff 	.word	0xff7fffff

08001c44 <__aeabi_ddiv>:
 8001c44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c46:	4657      	mov	r7, sl
 8001c48:	464e      	mov	r6, r9
 8001c4a:	4645      	mov	r5, r8
 8001c4c:	46de      	mov	lr, fp
 8001c4e:	b5e0      	push	{r5, r6, r7, lr}
 8001c50:	030c      	lsls	r4, r1, #12
 8001c52:	001f      	movs	r7, r3
 8001c54:	004b      	lsls	r3, r1, #1
 8001c56:	4681      	mov	r9, r0
 8001c58:	4692      	mov	sl, r2
 8001c5a:	0005      	movs	r5, r0
 8001c5c:	b085      	sub	sp, #20
 8001c5e:	0b24      	lsrs	r4, r4, #12
 8001c60:	0d5b      	lsrs	r3, r3, #21
 8001c62:	0fce      	lsrs	r6, r1, #31
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d100      	bne.n	8001c6a <__aeabi_ddiv+0x26>
 8001c68:	e152      	b.n	8001f10 <__aeabi_ddiv+0x2cc>
 8001c6a:	4ad2      	ldr	r2, [pc, #840]	; (8001fb4 <__aeabi_ddiv+0x370>)
 8001c6c:	4293      	cmp	r3, r2
 8001c6e:	d100      	bne.n	8001c72 <__aeabi_ddiv+0x2e>
 8001c70:	e16e      	b.n	8001f50 <__aeabi_ddiv+0x30c>
 8001c72:	0f42      	lsrs	r2, r0, #29
 8001c74:	00e4      	lsls	r4, r4, #3
 8001c76:	4314      	orrs	r4, r2
 8001c78:	2280      	movs	r2, #128	; 0x80
 8001c7a:	0412      	lsls	r2, r2, #16
 8001c7c:	4322      	orrs	r2, r4
 8001c7e:	4690      	mov	r8, r2
 8001c80:	4acd      	ldr	r2, [pc, #820]	; (8001fb8 <__aeabi_ddiv+0x374>)
 8001c82:	00c5      	lsls	r5, r0, #3
 8001c84:	4693      	mov	fp, r2
 8001c86:	449b      	add	fp, r3
 8001c88:	2300      	movs	r3, #0
 8001c8a:	4699      	mov	r9, r3
 8001c8c:	9300      	str	r3, [sp, #0]
 8001c8e:	033c      	lsls	r4, r7, #12
 8001c90:	007b      	lsls	r3, r7, #1
 8001c92:	4650      	mov	r0, sl
 8001c94:	0b24      	lsrs	r4, r4, #12
 8001c96:	0d5b      	lsrs	r3, r3, #21
 8001c98:	0fff      	lsrs	r7, r7, #31
 8001c9a:	2b00      	cmp	r3, #0
 8001c9c:	d100      	bne.n	8001ca0 <__aeabi_ddiv+0x5c>
 8001c9e:	e11a      	b.n	8001ed6 <__aeabi_ddiv+0x292>
 8001ca0:	4ac4      	ldr	r2, [pc, #784]	; (8001fb4 <__aeabi_ddiv+0x370>)
 8001ca2:	4293      	cmp	r3, r2
 8001ca4:	d100      	bne.n	8001ca8 <__aeabi_ddiv+0x64>
 8001ca6:	e15e      	b.n	8001f66 <__aeabi_ddiv+0x322>
 8001ca8:	0f42      	lsrs	r2, r0, #29
 8001caa:	00e4      	lsls	r4, r4, #3
 8001cac:	4322      	orrs	r2, r4
 8001cae:	2480      	movs	r4, #128	; 0x80
 8001cb0:	0424      	lsls	r4, r4, #16
 8001cb2:	4314      	orrs	r4, r2
 8001cb4:	4ac0      	ldr	r2, [pc, #768]	; (8001fb8 <__aeabi_ddiv+0x374>)
 8001cb6:	00c1      	lsls	r1, r0, #3
 8001cb8:	4694      	mov	ip, r2
 8001cba:	465a      	mov	r2, fp
 8001cbc:	4463      	add	r3, ip
 8001cbe:	1ad3      	subs	r3, r2, r3
 8001cc0:	469b      	mov	fp, r3
 8001cc2:	2000      	movs	r0, #0
 8001cc4:	0033      	movs	r3, r6
 8001cc6:	407b      	eors	r3, r7
 8001cc8:	469a      	mov	sl, r3
 8001cca:	464b      	mov	r3, r9
 8001ccc:	2b0f      	cmp	r3, #15
 8001cce:	d827      	bhi.n	8001d20 <__aeabi_ddiv+0xdc>
 8001cd0:	4aba      	ldr	r2, [pc, #744]	; (8001fbc <__aeabi_ddiv+0x378>)
 8001cd2:	009b      	lsls	r3, r3, #2
 8001cd4:	58d3      	ldr	r3, [r2, r3]
 8001cd6:	469f      	mov	pc, r3
 8001cd8:	46b2      	mov	sl, r6
 8001cda:	9b00      	ldr	r3, [sp, #0]
 8001cdc:	2b02      	cmp	r3, #2
 8001cde:	d016      	beq.n	8001d0e <__aeabi_ddiv+0xca>
 8001ce0:	2b03      	cmp	r3, #3
 8001ce2:	d100      	bne.n	8001ce6 <__aeabi_ddiv+0xa2>
 8001ce4:	e287      	b.n	80021f6 <__aeabi_ddiv+0x5b2>
 8001ce6:	2b01      	cmp	r3, #1
 8001ce8:	d000      	beq.n	8001cec <__aeabi_ddiv+0xa8>
 8001cea:	e0d5      	b.n	8001e98 <__aeabi_ddiv+0x254>
 8001cec:	2300      	movs	r3, #0
 8001cee:	2200      	movs	r2, #0
 8001cf0:	2500      	movs	r5, #0
 8001cf2:	051b      	lsls	r3, r3, #20
 8001cf4:	4313      	orrs	r3, r2
 8001cf6:	4652      	mov	r2, sl
 8001cf8:	07d2      	lsls	r2, r2, #31
 8001cfa:	4313      	orrs	r3, r2
 8001cfc:	0028      	movs	r0, r5
 8001cfe:	0019      	movs	r1, r3
 8001d00:	b005      	add	sp, #20
 8001d02:	bcf0      	pop	{r4, r5, r6, r7}
 8001d04:	46bb      	mov	fp, r7
 8001d06:	46b2      	mov	sl, r6
 8001d08:	46a9      	mov	r9, r5
 8001d0a:	46a0      	mov	r8, r4
 8001d0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d0e:	2200      	movs	r2, #0
 8001d10:	2500      	movs	r5, #0
 8001d12:	4ba8      	ldr	r3, [pc, #672]	; (8001fb4 <__aeabi_ddiv+0x370>)
 8001d14:	e7ed      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 8001d16:	46ba      	mov	sl, r7
 8001d18:	46a0      	mov	r8, r4
 8001d1a:	000d      	movs	r5, r1
 8001d1c:	9000      	str	r0, [sp, #0]
 8001d1e:	e7dc      	b.n	8001cda <__aeabi_ddiv+0x96>
 8001d20:	4544      	cmp	r4, r8
 8001d22:	d200      	bcs.n	8001d26 <__aeabi_ddiv+0xe2>
 8001d24:	e1c4      	b.n	80020b0 <__aeabi_ddiv+0x46c>
 8001d26:	d100      	bne.n	8001d2a <__aeabi_ddiv+0xe6>
 8001d28:	e1bf      	b.n	80020aa <__aeabi_ddiv+0x466>
 8001d2a:	2301      	movs	r3, #1
 8001d2c:	425b      	negs	r3, r3
 8001d2e:	469c      	mov	ip, r3
 8001d30:	002e      	movs	r6, r5
 8001d32:	4640      	mov	r0, r8
 8001d34:	2500      	movs	r5, #0
 8001d36:	44e3      	add	fp, ip
 8001d38:	0223      	lsls	r3, r4, #8
 8001d3a:	0e0c      	lsrs	r4, r1, #24
 8001d3c:	431c      	orrs	r4, r3
 8001d3e:	0c1b      	lsrs	r3, r3, #16
 8001d40:	4699      	mov	r9, r3
 8001d42:	0423      	lsls	r3, r4, #16
 8001d44:	020a      	lsls	r2, r1, #8
 8001d46:	0c1f      	lsrs	r7, r3, #16
 8001d48:	4649      	mov	r1, r9
 8001d4a:	9200      	str	r2, [sp, #0]
 8001d4c:	9701      	str	r7, [sp, #4]
 8001d4e:	f7fe fa7d 	bl	800024c <__aeabi_uidivmod>
 8001d52:	0002      	movs	r2, r0
 8001d54:	437a      	muls	r2, r7
 8001d56:	040b      	lsls	r3, r1, #16
 8001d58:	0c31      	lsrs	r1, r6, #16
 8001d5a:	4680      	mov	r8, r0
 8001d5c:	4319      	orrs	r1, r3
 8001d5e:	428a      	cmp	r2, r1
 8001d60:	d907      	bls.n	8001d72 <__aeabi_ddiv+0x12e>
 8001d62:	2301      	movs	r3, #1
 8001d64:	425b      	negs	r3, r3
 8001d66:	469c      	mov	ip, r3
 8001d68:	1909      	adds	r1, r1, r4
 8001d6a:	44e0      	add	r8, ip
 8001d6c:	428c      	cmp	r4, r1
 8001d6e:	d800      	bhi.n	8001d72 <__aeabi_ddiv+0x12e>
 8001d70:	e201      	b.n	8002176 <__aeabi_ddiv+0x532>
 8001d72:	1a88      	subs	r0, r1, r2
 8001d74:	4649      	mov	r1, r9
 8001d76:	f7fe fa69 	bl	800024c <__aeabi_uidivmod>
 8001d7a:	9a01      	ldr	r2, [sp, #4]
 8001d7c:	0436      	lsls	r6, r6, #16
 8001d7e:	4342      	muls	r2, r0
 8001d80:	0409      	lsls	r1, r1, #16
 8001d82:	0c36      	lsrs	r6, r6, #16
 8001d84:	0003      	movs	r3, r0
 8001d86:	430e      	orrs	r6, r1
 8001d88:	42b2      	cmp	r2, r6
 8001d8a:	d904      	bls.n	8001d96 <__aeabi_ddiv+0x152>
 8001d8c:	1936      	adds	r6, r6, r4
 8001d8e:	3b01      	subs	r3, #1
 8001d90:	42b4      	cmp	r4, r6
 8001d92:	d800      	bhi.n	8001d96 <__aeabi_ddiv+0x152>
 8001d94:	e1e9      	b.n	800216a <__aeabi_ddiv+0x526>
 8001d96:	1ab0      	subs	r0, r6, r2
 8001d98:	4642      	mov	r2, r8
 8001d9a:	9e00      	ldr	r6, [sp, #0]
 8001d9c:	0412      	lsls	r2, r2, #16
 8001d9e:	431a      	orrs	r2, r3
 8001da0:	0c33      	lsrs	r3, r6, #16
 8001da2:	001f      	movs	r7, r3
 8001da4:	0c11      	lsrs	r1, r2, #16
 8001da6:	4690      	mov	r8, r2
 8001da8:	9302      	str	r3, [sp, #8]
 8001daa:	0413      	lsls	r3, r2, #16
 8001dac:	0432      	lsls	r2, r6, #16
 8001dae:	0c16      	lsrs	r6, r2, #16
 8001db0:	0032      	movs	r2, r6
 8001db2:	0c1b      	lsrs	r3, r3, #16
 8001db4:	435a      	muls	r2, r3
 8001db6:	9603      	str	r6, [sp, #12]
 8001db8:	437b      	muls	r3, r7
 8001dba:	434e      	muls	r6, r1
 8001dbc:	4379      	muls	r1, r7
 8001dbe:	0c17      	lsrs	r7, r2, #16
 8001dc0:	46bc      	mov	ip, r7
 8001dc2:	199b      	adds	r3, r3, r6
 8001dc4:	4463      	add	r3, ip
 8001dc6:	429e      	cmp	r6, r3
 8001dc8:	d903      	bls.n	8001dd2 <__aeabi_ddiv+0x18e>
 8001dca:	2680      	movs	r6, #128	; 0x80
 8001dcc:	0276      	lsls	r6, r6, #9
 8001dce:	46b4      	mov	ip, r6
 8001dd0:	4461      	add	r1, ip
 8001dd2:	0c1e      	lsrs	r6, r3, #16
 8001dd4:	1871      	adds	r1, r6, r1
 8001dd6:	0416      	lsls	r6, r2, #16
 8001dd8:	041b      	lsls	r3, r3, #16
 8001dda:	0c36      	lsrs	r6, r6, #16
 8001ddc:	199e      	adds	r6, r3, r6
 8001dde:	4288      	cmp	r0, r1
 8001de0:	d302      	bcc.n	8001de8 <__aeabi_ddiv+0x1a4>
 8001de2:	d112      	bne.n	8001e0a <__aeabi_ddiv+0x1c6>
 8001de4:	42b5      	cmp	r5, r6
 8001de6:	d210      	bcs.n	8001e0a <__aeabi_ddiv+0x1c6>
 8001de8:	4643      	mov	r3, r8
 8001dea:	1e5a      	subs	r2, r3, #1
 8001dec:	9b00      	ldr	r3, [sp, #0]
 8001dee:	469c      	mov	ip, r3
 8001df0:	4465      	add	r5, ip
 8001df2:	001f      	movs	r7, r3
 8001df4:	429d      	cmp	r5, r3
 8001df6:	419b      	sbcs	r3, r3
 8001df8:	425b      	negs	r3, r3
 8001dfa:	191b      	adds	r3, r3, r4
 8001dfc:	18c0      	adds	r0, r0, r3
 8001dfe:	4284      	cmp	r4, r0
 8001e00:	d200      	bcs.n	8001e04 <__aeabi_ddiv+0x1c0>
 8001e02:	e19e      	b.n	8002142 <__aeabi_ddiv+0x4fe>
 8001e04:	d100      	bne.n	8001e08 <__aeabi_ddiv+0x1c4>
 8001e06:	e199      	b.n	800213c <__aeabi_ddiv+0x4f8>
 8001e08:	4690      	mov	r8, r2
 8001e0a:	1bae      	subs	r6, r5, r6
 8001e0c:	42b5      	cmp	r5, r6
 8001e0e:	41ad      	sbcs	r5, r5
 8001e10:	1a40      	subs	r0, r0, r1
 8001e12:	426d      	negs	r5, r5
 8001e14:	1b40      	subs	r0, r0, r5
 8001e16:	4284      	cmp	r4, r0
 8001e18:	d100      	bne.n	8001e1c <__aeabi_ddiv+0x1d8>
 8001e1a:	e1d2      	b.n	80021c2 <__aeabi_ddiv+0x57e>
 8001e1c:	4649      	mov	r1, r9
 8001e1e:	f7fe fa15 	bl	800024c <__aeabi_uidivmod>
 8001e22:	9a01      	ldr	r2, [sp, #4]
 8001e24:	040b      	lsls	r3, r1, #16
 8001e26:	4342      	muls	r2, r0
 8001e28:	0c31      	lsrs	r1, r6, #16
 8001e2a:	0005      	movs	r5, r0
 8001e2c:	4319      	orrs	r1, r3
 8001e2e:	428a      	cmp	r2, r1
 8001e30:	d900      	bls.n	8001e34 <__aeabi_ddiv+0x1f0>
 8001e32:	e16c      	b.n	800210e <__aeabi_ddiv+0x4ca>
 8001e34:	1a88      	subs	r0, r1, r2
 8001e36:	4649      	mov	r1, r9
 8001e38:	f7fe fa08 	bl	800024c <__aeabi_uidivmod>
 8001e3c:	9a01      	ldr	r2, [sp, #4]
 8001e3e:	0436      	lsls	r6, r6, #16
 8001e40:	4342      	muls	r2, r0
 8001e42:	0409      	lsls	r1, r1, #16
 8001e44:	0c36      	lsrs	r6, r6, #16
 8001e46:	0003      	movs	r3, r0
 8001e48:	430e      	orrs	r6, r1
 8001e4a:	42b2      	cmp	r2, r6
 8001e4c:	d900      	bls.n	8001e50 <__aeabi_ddiv+0x20c>
 8001e4e:	e153      	b.n	80020f8 <__aeabi_ddiv+0x4b4>
 8001e50:	9803      	ldr	r0, [sp, #12]
 8001e52:	1ab6      	subs	r6, r6, r2
 8001e54:	0002      	movs	r2, r0
 8001e56:	042d      	lsls	r5, r5, #16
 8001e58:	431d      	orrs	r5, r3
 8001e5a:	9f02      	ldr	r7, [sp, #8]
 8001e5c:	042b      	lsls	r3, r5, #16
 8001e5e:	0c1b      	lsrs	r3, r3, #16
 8001e60:	435a      	muls	r2, r3
 8001e62:	437b      	muls	r3, r7
 8001e64:	469c      	mov	ip, r3
 8001e66:	0c29      	lsrs	r1, r5, #16
 8001e68:	4348      	muls	r0, r1
 8001e6a:	0c13      	lsrs	r3, r2, #16
 8001e6c:	4484      	add	ip, r0
 8001e6e:	4463      	add	r3, ip
 8001e70:	4379      	muls	r1, r7
 8001e72:	4298      	cmp	r0, r3
 8001e74:	d903      	bls.n	8001e7e <__aeabi_ddiv+0x23a>
 8001e76:	2080      	movs	r0, #128	; 0x80
 8001e78:	0240      	lsls	r0, r0, #9
 8001e7a:	4684      	mov	ip, r0
 8001e7c:	4461      	add	r1, ip
 8001e7e:	0c18      	lsrs	r0, r3, #16
 8001e80:	0412      	lsls	r2, r2, #16
 8001e82:	041b      	lsls	r3, r3, #16
 8001e84:	0c12      	lsrs	r2, r2, #16
 8001e86:	1840      	adds	r0, r0, r1
 8001e88:	189b      	adds	r3, r3, r2
 8001e8a:	4286      	cmp	r6, r0
 8001e8c:	d200      	bcs.n	8001e90 <__aeabi_ddiv+0x24c>
 8001e8e:	e100      	b.n	8002092 <__aeabi_ddiv+0x44e>
 8001e90:	d100      	bne.n	8001e94 <__aeabi_ddiv+0x250>
 8001e92:	e0fb      	b.n	800208c <__aeabi_ddiv+0x448>
 8001e94:	2301      	movs	r3, #1
 8001e96:	431d      	orrs	r5, r3
 8001e98:	4b49      	ldr	r3, [pc, #292]	; (8001fc0 <__aeabi_ddiv+0x37c>)
 8001e9a:	445b      	add	r3, fp
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	dc00      	bgt.n	8001ea2 <__aeabi_ddiv+0x25e>
 8001ea0:	e0aa      	b.n	8001ff8 <__aeabi_ddiv+0x3b4>
 8001ea2:	076a      	lsls	r2, r5, #29
 8001ea4:	d000      	beq.n	8001ea8 <__aeabi_ddiv+0x264>
 8001ea6:	e13d      	b.n	8002124 <__aeabi_ddiv+0x4e0>
 8001ea8:	08e9      	lsrs	r1, r5, #3
 8001eaa:	4642      	mov	r2, r8
 8001eac:	01d2      	lsls	r2, r2, #7
 8001eae:	d506      	bpl.n	8001ebe <__aeabi_ddiv+0x27a>
 8001eb0:	4642      	mov	r2, r8
 8001eb2:	4b44      	ldr	r3, [pc, #272]	; (8001fc4 <__aeabi_ddiv+0x380>)
 8001eb4:	401a      	ands	r2, r3
 8001eb6:	2380      	movs	r3, #128	; 0x80
 8001eb8:	4690      	mov	r8, r2
 8001eba:	00db      	lsls	r3, r3, #3
 8001ebc:	445b      	add	r3, fp
 8001ebe:	4a42      	ldr	r2, [pc, #264]	; (8001fc8 <__aeabi_ddiv+0x384>)
 8001ec0:	4293      	cmp	r3, r2
 8001ec2:	dd00      	ble.n	8001ec6 <__aeabi_ddiv+0x282>
 8001ec4:	e723      	b.n	8001d0e <__aeabi_ddiv+0xca>
 8001ec6:	4642      	mov	r2, r8
 8001ec8:	055b      	lsls	r3, r3, #21
 8001eca:	0755      	lsls	r5, r2, #29
 8001ecc:	0252      	lsls	r2, r2, #9
 8001ece:	430d      	orrs	r5, r1
 8001ed0:	0b12      	lsrs	r2, r2, #12
 8001ed2:	0d5b      	lsrs	r3, r3, #21
 8001ed4:	e70d      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 8001ed6:	4651      	mov	r1, sl
 8001ed8:	4321      	orrs	r1, r4
 8001eda:	d100      	bne.n	8001ede <__aeabi_ddiv+0x29a>
 8001edc:	e07c      	b.n	8001fd8 <__aeabi_ddiv+0x394>
 8001ede:	2c00      	cmp	r4, #0
 8001ee0:	d100      	bne.n	8001ee4 <__aeabi_ddiv+0x2a0>
 8001ee2:	e0fb      	b.n	80020dc <__aeabi_ddiv+0x498>
 8001ee4:	0020      	movs	r0, r4
 8001ee6:	f001 fa1b 	bl	8003320 <__clzsi2>
 8001eea:	0002      	movs	r2, r0
 8001eec:	3a0b      	subs	r2, #11
 8001eee:	231d      	movs	r3, #29
 8001ef0:	1a9b      	subs	r3, r3, r2
 8001ef2:	4652      	mov	r2, sl
 8001ef4:	0001      	movs	r1, r0
 8001ef6:	40da      	lsrs	r2, r3
 8001ef8:	4653      	mov	r3, sl
 8001efa:	3908      	subs	r1, #8
 8001efc:	408b      	lsls	r3, r1
 8001efe:	408c      	lsls	r4, r1
 8001f00:	0019      	movs	r1, r3
 8001f02:	4314      	orrs	r4, r2
 8001f04:	4b31      	ldr	r3, [pc, #196]	; (8001fcc <__aeabi_ddiv+0x388>)
 8001f06:	4458      	add	r0, fp
 8001f08:	469b      	mov	fp, r3
 8001f0a:	4483      	add	fp, r0
 8001f0c:	2000      	movs	r0, #0
 8001f0e:	e6d9      	b.n	8001cc4 <__aeabi_ddiv+0x80>
 8001f10:	0003      	movs	r3, r0
 8001f12:	4323      	orrs	r3, r4
 8001f14:	4698      	mov	r8, r3
 8001f16:	d044      	beq.n	8001fa2 <__aeabi_ddiv+0x35e>
 8001f18:	2c00      	cmp	r4, #0
 8001f1a:	d100      	bne.n	8001f1e <__aeabi_ddiv+0x2da>
 8001f1c:	e0cf      	b.n	80020be <__aeabi_ddiv+0x47a>
 8001f1e:	0020      	movs	r0, r4
 8001f20:	f001 f9fe 	bl	8003320 <__clzsi2>
 8001f24:	0001      	movs	r1, r0
 8001f26:	0002      	movs	r2, r0
 8001f28:	390b      	subs	r1, #11
 8001f2a:	231d      	movs	r3, #29
 8001f2c:	1a5b      	subs	r3, r3, r1
 8001f2e:	4649      	mov	r1, r9
 8001f30:	0010      	movs	r0, r2
 8001f32:	40d9      	lsrs	r1, r3
 8001f34:	3808      	subs	r0, #8
 8001f36:	4084      	lsls	r4, r0
 8001f38:	000b      	movs	r3, r1
 8001f3a:	464d      	mov	r5, r9
 8001f3c:	4323      	orrs	r3, r4
 8001f3e:	4698      	mov	r8, r3
 8001f40:	4085      	lsls	r5, r0
 8001f42:	4b23      	ldr	r3, [pc, #140]	; (8001fd0 <__aeabi_ddiv+0x38c>)
 8001f44:	1a9b      	subs	r3, r3, r2
 8001f46:	469b      	mov	fp, r3
 8001f48:	2300      	movs	r3, #0
 8001f4a:	4699      	mov	r9, r3
 8001f4c:	9300      	str	r3, [sp, #0]
 8001f4e:	e69e      	b.n	8001c8e <__aeabi_ddiv+0x4a>
 8001f50:	0002      	movs	r2, r0
 8001f52:	4322      	orrs	r2, r4
 8001f54:	4690      	mov	r8, r2
 8001f56:	d11d      	bne.n	8001f94 <__aeabi_ddiv+0x350>
 8001f58:	2208      	movs	r2, #8
 8001f5a:	469b      	mov	fp, r3
 8001f5c:	2302      	movs	r3, #2
 8001f5e:	2500      	movs	r5, #0
 8001f60:	4691      	mov	r9, r2
 8001f62:	9300      	str	r3, [sp, #0]
 8001f64:	e693      	b.n	8001c8e <__aeabi_ddiv+0x4a>
 8001f66:	4651      	mov	r1, sl
 8001f68:	4321      	orrs	r1, r4
 8001f6a:	d109      	bne.n	8001f80 <__aeabi_ddiv+0x33c>
 8001f6c:	2302      	movs	r3, #2
 8001f6e:	464a      	mov	r2, r9
 8001f70:	431a      	orrs	r2, r3
 8001f72:	4b18      	ldr	r3, [pc, #96]	; (8001fd4 <__aeabi_ddiv+0x390>)
 8001f74:	4691      	mov	r9, r2
 8001f76:	469c      	mov	ip, r3
 8001f78:	2400      	movs	r4, #0
 8001f7a:	2002      	movs	r0, #2
 8001f7c:	44e3      	add	fp, ip
 8001f7e:	e6a1      	b.n	8001cc4 <__aeabi_ddiv+0x80>
 8001f80:	2303      	movs	r3, #3
 8001f82:	464a      	mov	r2, r9
 8001f84:	431a      	orrs	r2, r3
 8001f86:	4b13      	ldr	r3, [pc, #76]	; (8001fd4 <__aeabi_ddiv+0x390>)
 8001f88:	4691      	mov	r9, r2
 8001f8a:	469c      	mov	ip, r3
 8001f8c:	4651      	mov	r1, sl
 8001f8e:	2003      	movs	r0, #3
 8001f90:	44e3      	add	fp, ip
 8001f92:	e697      	b.n	8001cc4 <__aeabi_ddiv+0x80>
 8001f94:	220c      	movs	r2, #12
 8001f96:	469b      	mov	fp, r3
 8001f98:	2303      	movs	r3, #3
 8001f9a:	46a0      	mov	r8, r4
 8001f9c:	4691      	mov	r9, r2
 8001f9e:	9300      	str	r3, [sp, #0]
 8001fa0:	e675      	b.n	8001c8e <__aeabi_ddiv+0x4a>
 8001fa2:	2304      	movs	r3, #4
 8001fa4:	4699      	mov	r9, r3
 8001fa6:	2300      	movs	r3, #0
 8001fa8:	469b      	mov	fp, r3
 8001faa:	3301      	adds	r3, #1
 8001fac:	2500      	movs	r5, #0
 8001fae:	9300      	str	r3, [sp, #0]
 8001fb0:	e66d      	b.n	8001c8e <__aeabi_ddiv+0x4a>
 8001fb2:	46c0      	nop			; (mov r8, r8)
 8001fb4:	000007ff 	.word	0x000007ff
 8001fb8:	fffffc01 	.word	0xfffffc01
 8001fbc:	0800a5c0 	.word	0x0800a5c0
 8001fc0:	000003ff 	.word	0x000003ff
 8001fc4:	feffffff 	.word	0xfeffffff
 8001fc8:	000007fe 	.word	0x000007fe
 8001fcc:	000003f3 	.word	0x000003f3
 8001fd0:	fffffc0d 	.word	0xfffffc0d
 8001fd4:	fffff801 	.word	0xfffff801
 8001fd8:	464a      	mov	r2, r9
 8001fda:	2301      	movs	r3, #1
 8001fdc:	431a      	orrs	r2, r3
 8001fde:	4691      	mov	r9, r2
 8001fe0:	2400      	movs	r4, #0
 8001fe2:	2001      	movs	r0, #1
 8001fe4:	e66e      	b.n	8001cc4 <__aeabi_ddiv+0x80>
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	2280      	movs	r2, #128	; 0x80
 8001fea:	469a      	mov	sl, r3
 8001fec:	2500      	movs	r5, #0
 8001fee:	4b88      	ldr	r3, [pc, #544]	; (8002210 <__aeabi_ddiv+0x5cc>)
 8001ff0:	0312      	lsls	r2, r2, #12
 8001ff2:	e67e      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 8001ff4:	2501      	movs	r5, #1
 8001ff6:	426d      	negs	r5, r5
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	1ad2      	subs	r2, r2, r3
 8001ffc:	2a38      	cmp	r2, #56	; 0x38
 8001ffe:	dd00      	ble.n	8002002 <__aeabi_ddiv+0x3be>
 8002000:	e674      	b.n	8001cec <__aeabi_ddiv+0xa8>
 8002002:	2a1f      	cmp	r2, #31
 8002004:	dc00      	bgt.n	8002008 <__aeabi_ddiv+0x3c4>
 8002006:	e0bd      	b.n	8002184 <__aeabi_ddiv+0x540>
 8002008:	211f      	movs	r1, #31
 800200a:	4249      	negs	r1, r1
 800200c:	1acb      	subs	r3, r1, r3
 800200e:	4641      	mov	r1, r8
 8002010:	40d9      	lsrs	r1, r3
 8002012:	000b      	movs	r3, r1
 8002014:	2a20      	cmp	r2, #32
 8002016:	d004      	beq.n	8002022 <__aeabi_ddiv+0x3de>
 8002018:	4641      	mov	r1, r8
 800201a:	4a7e      	ldr	r2, [pc, #504]	; (8002214 <__aeabi_ddiv+0x5d0>)
 800201c:	445a      	add	r2, fp
 800201e:	4091      	lsls	r1, r2
 8002020:	430d      	orrs	r5, r1
 8002022:	0029      	movs	r1, r5
 8002024:	1e4a      	subs	r2, r1, #1
 8002026:	4191      	sbcs	r1, r2
 8002028:	4319      	orrs	r1, r3
 800202a:	2307      	movs	r3, #7
 800202c:	001d      	movs	r5, r3
 800202e:	2200      	movs	r2, #0
 8002030:	400d      	ands	r5, r1
 8002032:	420b      	tst	r3, r1
 8002034:	d100      	bne.n	8002038 <__aeabi_ddiv+0x3f4>
 8002036:	e0d0      	b.n	80021da <__aeabi_ddiv+0x596>
 8002038:	220f      	movs	r2, #15
 800203a:	2300      	movs	r3, #0
 800203c:	400a      	ands	r2, r1
 800203e:	2a04      	cmp	r2, #4
 8002040:	d100      	bne.n	8002044 <__aeabi_ddiv+0x400>
 8002042:	e0c7      	b.n	80021d4 <__aeabi_ddiv+0x590>
 8002044:	1d0a      	adds	r2, r1, #4
 8002046:	428a      	cmp	r2, r1
 8002048:	4189      	sbcs	r1, r1
 800204a:	4249      	negs	r1, r1
 800204c:	185b      	adds	r3, r3, r1
 800204e:	0011      	movs	r1, r2
 8002050:	021a      	lsls	r2, r3, #8
 8002052:	d400      	bmi.n	8002056 <__aeabi_ddiv+0x412>
 8002054:	e0be      	b.n	80021d4 <__aeabi_ddiv+0x590>
 8002056:	2301      	movs	r3, #1
 8002058:	2200      	movs	r2, #0
 800205a:	2500      	movs	r5, #0
 800205c:	e649      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 800205e:	2280      	movs	r2, #128	; 0x80
 8002060:	4643      	mov	r3, r8
 8002062:	0312      	lsls	r2, r2, #12
 8002064:	4213      	tst	r3, r2
 8002066:	d008      	beq.n	800207a <__aeabi_ddiv+0x436>
 8002068:	4214      	tst	r4, r2
 800206a:	d106      	bne.n	800207a <__aeabi_ddiv+0x436>
 800206c:	4322      	orrs	r2, r4
 800206e:	0312      	lsls	r2, r2, #12
 8002070:	46ba      	mov	sl, r7
 8002072:	000d      	movs	r5, r1
 8002074:	4b66      	ldr	r3, [pc, #408]	; (8002210 <__aeabi_ddiv+0x5cc>)
 8002076:	0b12      	lsrs	r2, r2, #12
 8002078:	e63b      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 800207a:	2280      	movs	r2, #128	; 0x80
 800207c:	4643      	mov	r3, r8
 800207e:	0312      	lsls	r2, r2, #12
 8002080:	431a      	orrs	r2, r3
 8002082:	0312      	lsls	r2, r2, #12
 8002084:	46b2      	mov	sl, r6
 8002086:	4b62      	ldr	r3, [pc, #392]	; (8002210 <__aeabi_ddiv+0x5cc>)
 8002088:	0b12      	lsrs	r2, r2, #12
 800208a:	e632      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 800208c:	2b00      	cmp	r3, #0
 800208e:	d100      	bne.n	8002092 <__aeabi_ddiv+0x44e>
 8002090:	e702      	b.n	8001e98 <__aeabi_ddiv+0x254>
 8002092:	19a6      	adds	r6, r4, r6
 8002094:	1e6a      	subs	r2, r5, #1
 8002096:	42a6      	cmp	r6, r4
 8002098:	d200      	bcs.n	800209c <__aeabi_ddiv+0x458>
 800209a:	e089      	b.n	80021b0 <__aeabi_ddiv+0x56c>
 800209c:	4286      	cmp	r6, r0
 800209e:	d200      	bcs.n	80020a2 <__aeabi_ddiv+0x45e>
 80020a0:	e09f      	b.n	80021e2 <__aeabi_ddiv+0x59e>
 80020a2:	d100      	bne.n	80020a6 <__aeabi_ddiv+0x462>
 80020a4:	e0af      	b.n	8002206 <__aeabi_ddiv+0x5c2>
 80020a6:	0015      	movs	r5, r2
 80020a8:	e6f4      	b.n	8001e94 <__aeabi_ddiv+0x250>
 80020aa:	42a9      	cmp	r1, r5
 80020ac:	d900      	bls.n	80020b0 <__aeabi_ddiv+0x46c>
 80020ae:	e63c      	b.n	8001d2a <__aeabi_ddiv+0xe6>
 80020b0:	4643      	mov	r3, r8
 80020b2:	07de      	lsls	r6, r3, #31
 80020b4:	0858      	lsrs	r0, r3, #1
 80020b6:	086b      	lsrs	r3, r5, #1
 80020b8:	431e      	orrs	r6, r3
 80020ba:	07ed      	lsls	r5, r5, #31
 80020bc:	e63c      	b.n	8001d38 <__aeabi_ddiv+0xf4>
 80020be:	f001 f92f 	bl	8003320 <__clzsi2>
 80020c2:	0001      	movs	r1, r0
 80020c4:	0002      	movs	r2, r0
 80020c6:	3115      	adds	r1, #21
 80020c8:	3220      	adds	r2, #32
 80020ca:	291c      	cmp	r1, #28
 80020cc:	dc00      	bgt.n	80020d0 <__aeabi_ddiv+0x48c>
 80020ce:	e72c      	b.n	8001f2a <__aeabi_ddiv+0x2e6>
 80020d0:	464b      	mov	r3, r9
 80020d2:	3808      	subs	r0, #8
 80020d4:	4083      	lsls	r3, r0
 80020d6:	2500      	movs	r5, #0
 80020d8:	4698      	mov	r8, r3
 80020da:	e732      	b.n	8001f42 <__aeabi_ddiv+0x2fe>
 80020dc:	f001 f920 	bl	8003320 <__clzsi2>
 80020e0:	0003      	movs	r3, r0
 80020e2:	001a      	movs	r2, r3
 80020e4:	3215      	adds	r2, #21
 80020e6:	3020      	adds	r0, #32
 80020e8:	2a1c      	cmp	r2, #28
 80020ea:	dc00      	bgt.n	80020ee <__aeabi_ddiv+0x4aa>
 80020ec:	e6ff      	b.n	8001eee <__aeabi_ddiv+0x2aa>
 80020ee:	4654      	mov	r4, sl
 80020f0:	3b08      	subs	r3, #8
 80020f2:	2100      	movs	r1, #0
 80020f4:	409c      	lsls	r4, r3
 80020f6:	e705      	b.n	8001f04 <__aeabi_ddiv+0x2c0>
 80020f8:	1936      	adds	r6, r6, r4
 80020fa:	3b01      	subs	r3, #1
 80020fc:	42b4      	cmp	r4, r6
 80020fe:	d900      	bls.n	8002102 <__aeabi_ddiv+0x4be>
 8002100:	e6a6      	b.n	8001e50 <__aeabi_ddiv+0x20c>
 8002102:	42b2      	cmp	r2, r6
 8002104:	d800      	bhi.n	8002108 <__aeabi_ddiv+0x4c4>
 8002106:	e6a3      	b.n	8001e50 <__aeabi_ddiv+0x20c>
 8002108:	1e83      	subs	r3, r0, #2
 800210a:	1936      	adds	r6, r6, r4
 800210c:	e6a0      	b.n	8001e50 <__aeabi_ddiv+0x20c>
 800210e:	1909      	adds	r1, r1, r4
 8002110:	3d01      	subs	r5, #1
 8002112:	428c      	cmp	r4, r1
 8002114:	d900      	bls.n	8002118 <__aeabi_ddiv+0x4d4>
 8002116:	e68d      	b.n	8001e34 <__aeabi_ddiv+0x1f0>
 8002118:	428a      	cmp	r2, r1
 800211a:	d800      	bhi.n	800211e <__aeabi_ddiv+0x4da>
 800211c:	e68a      	b.n	8001e34 <__aeabi_ddiv+0x1f0>
 800211e:	1e85      	subs	r5, r0, #2
 8002120:	1909      	adds	r1, r1, r4
 8002122:	e687      	b.n	8001e34 <__aeabi_ddiv+0x1f0>
 8002124:	220f      	movs	r2, #15
 8002126:	402a      	ands	r2, r5
 8002128:	2a04      	cmp	r2, #4
 800212a:	d100      	bne.n	800212e <__aeabi_ddiv+0x4ea>
 800212c:	e6bc      	b.n	8001ea8 <__aeabi_ddiv+0x264>
 800212e:	1d29      	adds	r1, r5, #4
 8002130:	42a9      	cmp	r1, r5
 8002132:	41ad      	sbcs	r5, r5
 8002134:	426d      	negs	r5, r5
 8002136:	08c9      	lsrs	r1, r1, #3
 8002138:	44a8      	add	r8, r5
 800213a:	e6b6      	b.n	8001eaa <__aeabi_ddiv+0x266>
 800213c:	42af      	cmp	r7, r5
 800213e:	d900      	bls.n	8002142 <__aeabi_ddiv+0x4fe>
 8002140:	e662      	b.n	8001e08 <__aeabi_ddiv+0x1c4>
 8002142:	4281      	cmp	r1, r0
 8002144:	d804      	bhi.n	8002150 <__aeabi_ddiv+0x50c>
 8002146:	d000      	beq.n	800214a <__aeabi_ddiv+0x506>
 8002148:	e65e      	b.n	8001e08 <__aeabi_ddiv+0x1c4>
 800214a:	42ae      	cmp	r6, r5
 800214c:	d800      	bhi.n	8002150 <__aeabi_ddiv+0x50c>
 800214e:	e65b      	b.n	8001e08 <__aeabi_ddiv+0x1c4>
 8002150:	2302      	movs	r3, #2
 8002152:	425b      	negs	r3, r3
 8002154:	469c      	mov	ip, r3
 8002156:	9b00      	ldr	r3, [sp, #0]
 8002158:	44e0      	add	r8, ip
 800215a:	469c      	mov	ip, r3
 800215c:	4465      	add	r5, ip
 800215e:	429d      	cmp	r5, r3
 8002160:	419b      	sbcs	r3, r3
 8002162:	425b      	negs	r3, r3
 8002164:	191b      	adds	r3, r3, r4
 8002166:	18c0      	adds	r0, r0, r3
 8002168:	e64f      	b.n	8001e0a <__aeabi_ddiv+0x1c6>
 800216a:	42b2      	cmp	r2, r6
 800216c:	d800      	bhi.n	8002170 <__aeabi_ddiv+0x52c>
 800216e:	e612      	b.n	8001d96 <__aeabi_ddiv+0x152>
 8002170:	1e83      	subs	r3, r0, #2
 8002172:	1936      	adds	r6, r6, r4
 8002174:	e60f      	b.n	8001d96 <__aeabi_ddiv+0x152>
 8002176:	428a      	cmp	r2, r1
 8002178:	d800      	bhi.n	800217c <__aeabi_ddiv+0x538>
 800217a:	e5fa      	b.n	8001d72 <__aeabi_ddiv+0x12e>
 800217c:	1e83      	subs	r3, r0, #2
 800217e:	4698      	mov	r8, r3
 8002180:	1909      	adds	r1, r1, r4
 8002182:	e5f6      	b.n	8001d72 <__aeabi_ddiv+0x12e>
 8002184:	4b24      	ldr	r3, [pc, #144]	; (8002218 <__aeabi_ddiv+0x5d4>)
 8002186:	0028      	movs	r0, r5
 8002188:	445b      	add	r3, fp
 800218a:	4641      	mov	r1, r8
 800218c:	409d      	lsls	r5, r3
 800218e:	4099      	lsls	r1, r3
 8002190:	40d0      	lsrs	r0, r2
 8002192:	1e6b      	subs	r3, r5, #1
 8002194:	419d      	sbcs	r5, r3
 8002196:	4643      	mov	r3, r8
 8002198:	4301      	orrs	r1, r0
 800219a:	4329      	orrs	r1, r5
 800219c:	40d3      	lsrs	r3, r2
 800219e:	074a      	lsls	r2, r1, #29
 80021a0:	d100      	bne.n	80021a4 <__aeabi_ddiv+0x560>
 80021a2:	e755      	b.n	8002050 <__aeabi_ddiv+0x40c>
 80021a4:	220f      	movs	r2, #15
 80021a6:	400a      	ands	r2, r1
 80021a8:	2a04      	cmp	r2, #4
 80021aa:	d000      	beq.n	80021ae <__aeabi_ddiv+0x56a>
 80021ac:	e74a      	b.n	8002044 <__aeabi_ddiv+0x400>
 80021ae:	e74f      	b.n	8002050 <__aeabi_ddiv+0x40c>
 80021b0:	0015      	movs	r5, r2
 80021b2:	4286      	cmp	r6, r0
 80021b4:	d000      	beq.n	80021b8 <__aeabi_ddiv+0x574>
 80021b6:	e66d      	b.n	8001e94 <__aeabi_ddiv+0x250>
 80021b8:	9a00      	ldr	r2, [sp, #0]
 80021ba:	429a      	cmp	r2, r3
 80021bc:	d000      	beq.n	80021c0 <__aeabi_ddiv+0x57c>
 80021be:	e669      	b.n	8001e94 <__aeabi_ddiv+0x250>
 80021c0:	e66a      	b.n	8001e98 <__aeabi_ddiv+0x254>
 80021c2:	4b16      	ldr	r3, [pc, #88]	; (800221c <__aeabi_ddiv+0x5d8>)
 80021c4:	445b      	add	r3, fp
 80021c6:	2b00      	cmp	r3, #0
 80021c8:	dc00      	bgt.n	80021cc <__aeabi_ddiv+0x588>
 80021ca:	e713      	b.n	8001ff4 <__aeabi_ddiv+0x3b0>
 80021cc:	2501      	movs	r5, #1
 80021ce:	2100      	movs	r1, #0
 80021d0:	44a8      	add	r8, r5
 80021d2:	e66a      	b.n	8001eaa <__aeabi_ddiv+0x266>
 80021d4:	075d      	lsls	r5, r3, #29
 80021d6:	025b      	lsls	r3, r3, #9
 80021d8:	0b1a      	lsrs	r2, r3, #12
 80021da:	08c9      	lsrs	r1, r1, #3
 80021dc:	2300      	movs	r3, #0
 80021de:	430d      	orrs	r5, r1
 80021e0:	e587      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 80021e2:	9900      	ldr	r1, [sp, #0]
 80021e4:	3d02      	subs	r5, #2
 80021e6:	004a      	lsls	r2, r1, #1
 80021e8:	428a      	cmp	r2, r1
 80021ea:	41bf      	sbcs	r7, r7
 80021ec:	427f      	negs	r7, r7
 80021ee:	193f      	adds	r7, r7, r4
 80021f0:	19f6      	adds	r6, r6, r7
 80021f2:	9200      	str	r2, [sp, #0]
 80021f4:	e7dd      	b.n	80021b2 <__aeabi_ddiv+0x56e>
 80021f6:	2280      	movs	r2, #128	; 0x80
 80021f8:	4643      	mov	r3, r8
 80021fa:	0312      	lsls	r2, r2, #12
 80021fc:	431a      	orrs	r2, r3
 80021fe:	0312      	lsls	r2, r2, #12
 8002200:	4b03      	ldr	r3, [pc, #12]	; (8002210 <__aeabi_ddiv+0x5cc>)
 8002202:	0b12      	lsrs	r2, r2, #12
 8002204:	e575      	b.n	8001cf2 <__aeabi_ddiv+0xae>
 8002206:	9900      	ldr	r1, [sp, #0]
 8002208:	4299      	cmp	r1, r3
 800220a:	d3ea      	bcc.n	80021e2 <__aeabi_ddiv+0x59e>
 800220c:	0015      	movs	r5, r2
 800220e:	e7d3      	b.n	80021b8 <__aeabi_ddiv+0x574>
 8002210:	000007ff 	.word	0x000007ff
 8002214:	0000043e 	.word	0x0000043e
 8002218:	0000041e 	.word	0x0000041e
 800221c:	000003ff 	.word	0x000003ff

08002220 <__eqdf2>:
 8002220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002222:	464e      	mov	r6, r9
 8002224:	4645      	mov	r5, r8
 8002226:	46de      	mov	lr, fp
 8002228:	4657      	mov	r7, sl
 800222a:	4690      	mov	r8, r2
 800222c:	b5e0      	push	{r5, r6, r7, lr}
 800222e:	0017      	movs	r7, r2
 8002230:	031a      	lsls	r2, r3, #12
 8002232:	0b12      	lsrs	r2, r2, #12
 8002234:	0005      	movs	r5, r0
 8002236:	4684      	mov	ip, r0
 8002238:	4819      	ldr	r0, [pc, #100]	; (80022a0 <__eqdf2+0x80>)
 800223a:	030e      	lsls	r6, r1, #12
 800223c:	004c      	lsls	r4, r1, #1
 800223e:	4691      	mov	r9, r2
 8002240:	005a      	lsls	r2, r3, #1
 8002242:	0fdb      	lsrs	r3, r3, #31
 8002244:	469b      	mov	fp, r3
 8002246:	0b36      	lsrs	r6, r6, #12
 8002248:	0d64      	lsrs	r4, r4, #21
 800224a:	0fc9      	lsrs	r1, r1, #31
 800224c:	0d52      	lsrs	r2, r2, #21
 800224e:	4284      	cmp	r4, r0
 8002250:	d019      	beq.n	8002286 <__eqdf2+0x66>
 8002252:	4282      	cmp	r2, r0
 8002254:	d010      	beq.n	8002278 <__eqdf2+0x58>
 8002256:	2001      	movs	r0, #1
 8002258:	4294      	cmp	r4, r2
 800225a:	d10e      	bne.n	800227a <__eqdf2+0x5a>
 800225c:	454e      	cmp	r6, r9
 800225e:	d10c      	bne.n	800227a <__eqdf2+0x5a>
 8002260:	2001      	movs	r0, #1
 8002262:	45c4      	cmp	ip, r8
 8002264:	d109      	bne.n	800227a <__eqdf2+0x5a>
 8002266:	4559      	cmp	r1, fp
 8002268:	d017      	beq.n	800229a <__eqdf2+0x7a>
 800226a:	2c00      	cmp	r4, #0
 800226c:	d105      	bne.n	800227a <__eqdf2+0x5a>
 800226e:	0030      	movs	r0, r6
 8002270:	4328      	orrs	r0, r5
 8002272:	1e43      	subs	r3, r0, #1
 8002274:	4198      	sbcs	r0, r3
 8002276:	e000      	b.n	800227a <__eqdf2+0x5a>
 8002278:	2001      	movs	r0, #1
 800227a:	bcf0      	pop	{r4, r5, r6, r7}
 800227c:	46bb      	mov	fp, r7
 800227e:	46b2      	mov	sl, r6
 8002280:	46a9      	mov	r9, r5
 8002282:	46a0      	mov	r8, r4
 8002284:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002286:	0033      	movs	r3, r6
 8002288:	2001      	movs	r0, #1
 800228a:	432b      	orrs	r3, r5
 800228c:	d1f5      	bne.n	800227a <__eqdf2+0x5a>
 800228e:	42a2      	cmp	r2, r4
 8002290:	d1f3      	bne.n	800227a <__eqdf2+0x5a>
 8002292:	464b      	mov	r3, r9
 8002294:	433b      	orrs	r3, r7
 8002296:	d1f0      	bne.n	800227a <__eqdf2+0x5a>
 8002298:	e7e2      	b.n	8002260 <__eqdf2+0x40>
 800229a:	2000      	movs	r0, #0
 800229c:	e7ed      	b.n	800227a <__eqdf2+0x5a>
 800229e:	46c0      	nop			; (mov r8, r8)
 80022a0:	000007ff 	.word	0x000007ff

080022a4 <__gedf2>:
 80022a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022a6:	4647      	mov	r7, r8
 80022a8:	46ce      	mov	lr, r9
 80022aa:	0004      	movs	r4, r0
 80022ac:	0018      	movs	r0, r3
 80022ae:	0016      	movs	r6, r2
 80022b0:	031b      	lsls	r3, r3, #12
 80022b2:	0b1b      	lsrs	r3, r3, #12
 80022b4:	4d2d      	ldr	r5, [pc, #180]	; (800236c <__gedf2+0xc8>)
 80022b6:	004a      	lsls	r2, r1, #1
 80022b8:	4699      	mov	r9, r3
 80022ba:	b580      	push	{r7, lr}
 80022bc:	0043      	lsls	r3, r0, #1
 80022be:	030f      	lsls	r7, r1, #12
 80022c0:	46a4      	mov	ip, r4
 80022c2:	46b0      	mov	r8, r6
 80022c4:	0b3f      	lsrs	r7, r7, #12
 80022c6:	0d52      	lsrs	r2, r2, #21
 80022c8:	0fc9      	lsrs	r1, r1, #31
 80022ca:	0d5b      	lsrs	r3, r3, #21
 80022cc:	0fc0      	lsrs	r0, r0, #31
 80022ce:	42aa      	cmp	r2, r5
 80022d0:	d021      	beq.n	8002316 <__gedf2+0x72>
 80022d2:	42ab      	cmp	r3, r5
 80022d4:	d013      	beq.n	80022fe <__gedf2+0x5a>
 80022d6:	2a00      	cmp	r2, #0
 80022d8:	d122      	bne.n	8002320 <__gedf2+0x7c>
 80022da:	433c      	orrs	r4, r7
 80022dc:	2b00      	cmp	r3, #0
 80022de:	d102      	bne.n	80022e6 <__gedf2+0x42>
 80022e0:	464d      	mov	r5, r9
 80022e2:	432e      	orrs	r6, r5
 80022e4:	d022      	beq.n	800232c <__gedf2+0x88>
 80022e6:	2c00      	cmp	r4, #0
 80022e8:	d010      	beq.n	800230c <__gedf2+0x68>
 80022ea:	4281      	cmp	r1, r0
 80022ec:	d022      	beq.n	8002334 <__gedf2+0x90>
 80022ee:	2002      	movs	r0, #2
 80022f0:	3901      	subs	r1, #1
 80022f2:	4008      	ands	r0, r1
 80022f4:	3801      	subs	r0, #1
 80022f6:	bcc0      	pop	{r6, r7}
 80022f8:	46b9      	mov	r9, r7
 80022fa:	46b0      	mov	r8, r6
 80022fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022fe:	464d      	mov	r5, r9
 8002300:	432e      	orrs	r6, r5
 8002302:	d129      	bne.n	8002358 <__gedf2+0xb4>
 8002304:	2a00      	cmp	r2, #0
 8002306:	d1f0      	bne.n	80022ea <__gedf2+0x46>
 8002308:	433c      	orrs	r4, r7
 800230a:	d1ee      	bne.n	80022ea <__gedf2+0x46>
 800230c:	2800      	cmp	r0, #0
 800230e:	d1f2      	bne.n	80022f6 <__gedf2+0x52>
 8002310:	2001      	movs	r0, #1
 8002312:	4240      	negs	r0, r0
 8002314:	e7ef      	b.n	80022f6 <__gedf2+0x52>
 8002316:	003d      	movs	r5, r7
 8002318:	4325      	orrs	r5, r4
 800231a:	d11d      	bne.n	8002358 <__gedf2+0xb4>
 800231c:	4293      	cmp	r3, r2
 800231e:	d0ee      	beq.n	80022fe <__gedf2+0x5a>
 8002320:	2b00      	cmp	r3, #0
 8002322:	d1e2      	bne.n	80022ea <__gedf2+0x46>
 8002324:	464c      	mov	r4, r9
 8002326:	4326      	orrs	r6, r4
 8002328:	d1df      	bne.n	80022ea <__gedf2+0x46>
 800232a:	e7e0      	b.n	80022ee <__gedf2+0x4a>
 800232c:	2000      	movs	r0, #0
 800232e:	2c00      	cmp	r4, #0
 8002330:	d0e1      	beq.n	80022f6 <__gedf2+0x52>
 8002332:	e7dc      	b.n	80022ee <__gedf2+0x4a>
 8002334:	429a      	cmp	r2, r3
 8002336:	dc0a      	bgt.n	800234e <__gedf2+0xaa>
 8002338:	dbe8      	blt.n	800230c <__gedf2+0x68>
 800233a:	454f      	cmp	r7, r9
 800233c:	d8d7      	bhi.n	80022ee <__gedf2+0x4a>
 800233e:	d00e      	beq.n	800235e <__gedf2+0xba>
 8002340:	2000      	movs	r0, #0
 8002342:	454f      	cmp	r7, r9
 8002344:	d2d7      	bcs.n	80022f6 <__gedf2+0x52>
 8002346:	2900      	cmp	r1, #0
 8002348:	d0e2      	beq.n	8002310 <__gedf2+0x6c>
 800234a:	0008      	movs	r0, r1
 800234c:	e7d3      	b.n	80022f6 <__gedf2+0x52>
 800234e:	4243      	negs	r3, r0
 8002350:	4158      	adcs	r0, r3
 8002352:	0040      	lsls	r0, r0, #1
 8002354:	3801      	subs	r0, #1
 8002356:	e7ce      	b.n	80022f6 <__gedf2+0x52>
 8002358:	2002      	movs	r0, #2
 800235a:	4240      	negs	r0, r0
 800235c:	e7cb      	b.n	80022f6 <__gedf2+0x52>
 800235e:	45c4      	cmp	ip, r8
 8002360:	d8c5      	bhi.n	80022ee <__gedf2+0x4a>
 8002362:	2000      	movs	r0, #0
 8002364:	45c4      	cmp	ip, r8
 8002366:	d2c6      	bcs.n	80022f6 <__gedf2+0x52>
 8002368:	e7ed      	b.n	8002346 <__gedf2+0xa2>
 800236a:	46c0      	nop			; (mov r8, r8)
 800236c:	000007ff 	.word	0x000007ff

08002370 <__ledf2>:
 8002370:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002372:	4647      	mov	r7, r8
 8002374:	46ce      	mov	lr, r9
 8002376:	0004      	movs	r4, r0
 8002378:	0018      	movs	r0, r3
 800237a:	0016      	movs	r6, r2
 800237c:	031b      	lsls	r3, r3, #12
 800237e:	0b1b      	lsrs	r3, r3, #12
 8002380:	4d2c      	ldr	r5, [pc, #176]	; (8002434 <__ledf2+0xc4>)
 8002382:	004a      	lsls	r2, r1, #1
 8002384:	4699      	mov	r9, r3
 8002386:	b580      	push	{r7, lr}
 8002388:	0043      	lsls	r3, r0, #1
 800238a:	030f      	lsls	r7, r1, #12
 800238c:	46a4      	mov	ip, r4
 800238e:	46b0      	mov	r8, r6
 8002390:	0b3f      	lsrs	r7, r7, #12
 8002392:	0d52      	lsrs	r2, r2, #21
 8002394:	0fc9      	lsrs	r1, r1, #31
 8002396:	0d5b      	lsrs	r3, r3, #21
 8002398:	0fc0      	lsrs	r0, r0, #31
 800239a:	42aa      	cmp	r2, r5
 800239c:	d00d      	beq.n	80023ba <__ledf2+0x4a>
 800239e:	42ab      	cmp	r3, r5
 80023a0:	d010      	beq.n	80023c4 <__ledf2+0x54>
 80023a2:	2a00      	cmp	r2, #0
 80023a4:	d127      	bne.n	80023f6 <__ledf2+0x86>
 80023a6:	433c      	orrs	r4, r7
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d111      	bne.n	80023d0 <__ledf2+0x60>
 80023ac:	464d      	mov	r5, r9
 80023ae:	432e      	orrs	r6, r5
 80023b0:	d10e      	bne.n	80023d0 <__ledf2+0x60>
 80023b2:	2000      	movs	r0, #0
 80023b4:	2c00      	cmp	r4, #0
 80023b6:	d015      	beq.n	80023e4 <__ledf2+0x74>
 80023b8:	e00e      	b.n	80023d8 <__ledf2+0x68>
 80023ba:	003d      	movs	r5, r7
 80023bc:	4325      	orrs	r5, r4
 80023be:	d110      	bne.n	80023e2 <__ledf2+0x72>
 80023c0:	4293      	cmp	r3, r2
 80023c2:	d118      	bne.n	80023f6 <__ledf2+0x86>
 80023c4:	464d      	mov	r5, r9
 80023c6:	432e      	orrs	r6, r5
 80023c8:	d10b      	bne.n	80023e2 <__ledf2+0x72>
 80023ca:	2a00      	cmp	r2, #0
 80023cc:	d102      	bne.n	80023d4 <__ledf2+0x64>
 80023ce:	433c      	orrs	r4, r7
 80023d0:	2c00      	cmp	r4, #0
 80023d2:	d00b      	beq.n	80023ec <__ledf2+0x7c>
 80023d4:	4281      	cmp	r1, r0
 80023d6:	d014      	beq.n	8002402 <__ledf2+0x92>
 80023d8:	2002      	movs	r0, #2
 80023da:	3901      	subs	r1, #1
 80023dc:	4008      	ands	r0, r1
 80023de:	3801      	subs	r0, #1
 80023e0:	e000      	b.n	80023e4 <__ledf2+0x74>
 80023e2:	2002      	movs	r0, #2
 80023e4:	bcc0      	pop	{r6, r7}
 80023e6:	46b9      	mov	r9, r7
 80023e8:	46b0      	mov	r8, r6
 80023ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023ec:	2800      	cmp	r0, #0
 80023ee:	d1f9      	bne.n	80023e4 <__ledf2+0x74>
 80023f0:	2001      	movs	r0, #1
 80023f2:	4240      	negs	r0, r0
 80023f4:	e7f6      	b.n	80023e4 <__ledf2+0x74>
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	d1ec      	bne.n	80023d4 <__ledf2+0x64>
 80023fa:	464c      	mov	r4, r9
 80023fc:	4326      	orrs	r6, r4
 80023fe:	d1e9      	bne.n	80023d4 <__ledf2+0x64>
 8002400:	e7ea      	b.n	80023d8 <__ledf2+0x68>
 8002402:	429a      	cmp	r2, r3
 8002404:	dd04      	ble.n	8002410 <__ledf2+0xa0>
 8002406:	4243      	negs	r3, r0
 8002408:	4158      	adcs	r0, r3
 800240a:	0040      	lsls	r0, r0, #1
 800240c:	3801      	subs	r0, #1
 800240e:	e7e9      	b.n	80023e4 <__ledf2+0x74>
 8002410:	429a      	cmp	r2, r3
 8002412:	dbeb      	blt.n	80023ec <__ledf2+0x7c>
 8002414:	454f      	cmp	r7, r9
 8002416:	d8df      	bhi.n	80023d8 <__ledf2+0x68>
 8002418:	d006      	beq.n	8002428 <__ledf2+0xb8>
 800241a:	2000      	movs	r0, #0
 800241c:	454f      	cmp	r7, r9
 800241e:	d2e1      	bcs.n	80023e4 <__ledf2+0x74>
 8002420:	2900      	cmp	r1, #0
 8002422:	d0e5      	beq.n	80023f0 <__ledf2+0x80>
 8002424:	0008      	movs	r0, r1
 8002426:	e7dd      	b.n	80023e4 <__ledf2+0x74>
 8002428:	45c4      	cmp	ip, r8
 800242a:	d8d5      	bhi.n	80023d8 <__ledf2+0x68>
 800242c:	2000      	movs	r0, #0
 800242e:	45c4      	cmp	ip, r8
 8002430:	d2d8      	bcs.n	80023e4 <__ledf2+0x74>
 8002432:	e7f5      	b.n	8002420 <__ledf2+0xb0>
 8002434:	000007ff 	.word	0x000007ff

08002438 <__aeabi_dmul>:
 8002438:	b5f0      	push	{r4, r5, r6, r7, lr}
 800243a:	4645      	mov	r5, r8
 800243c:	46de      	mov	lr, fp
 800243e:	4657      	mov	r7, sl
 8002440:	464e      	mov	r6, r9
 8002442:	b5e0      	push	{r5, r6, r7, lr}
 8002444:	001f      	movs	r7, r3
 8002446:	030b      	lsls	r3, r1, #12
 8002448:	0b1b      	lsrs	r3, r3, #12
 800244a:	469b      	mov	fp, r3
 800244c:	004d      	lsls	r5, r1, #1
 800244e:	0fcb      	lsrs	r3, r1, #31
 8002450:	0004      	movs	r4, r0
 8002452:	4691      	mov	r9, r2
 8002454:	4698      	mov	r8, r3
 8002456:	b087      	sub	sp, #28
 8002458:	0d6d      	lsrs	r5, r5, #21
 800245a:	d100      	bne.n	800245e <__aeabi_dmul+0x26>
 800245c:	e1cd      	b.n	80027fa <__aeabi_dmul+0x3c2>
 800245e:	4bce      	ldr	r3, [pc, #824]	; (8002798 <__aeabi_dmul+0x360>)
 8002460:	429d      	cmp	r5, r3
 8002462:	d100      	bne.n	8002466 <__aeabi_dmul+0x2e>
 8002464:	e1e9      	b.n	800283a <__aeabi_dmul+0x402>
 8002466:	465a      	mov	r2, fp
 8002468:	0f43      	lsrs	r3, r0, #29
 800246a:	00d2      	lsls	r2, r2, #3
 800246c:	4313      	orrs	r3, r2
 800246e:	2280      	movs	r2, #128	; 0x80
 8002470:	0412      	lsls	r2, r2, #16
 8002472:	431a      	orrs	r2, r3
 8002474:	00c3      	lsls	r3, r0, #3
 8002476:	469a      	mov	sl, r3
 8002478:	4bc8      	ldr	r3, [pc, #800]	; (800279c <__aeabi_dmul+0x364>)
 800247a:	4693      	mov	fp, r2
 800247c:	469c      	mov	ip, r3
 800247e:	2300      	movs	r3, #0
 8002480:	2600      	movs	r6, #0
 8002482:	4465      	add	r5, ip
 8002484:	9300      	str	r3, [sp, #0]
 8002486:	033c      	lsls	r4, r7, #12
 8002488:	007b      	lsls	r3, r7, #1
 800248a:	4648      	mov	r0, r9
 800248c:	0b24      	lsrs	r4, r4, #12
 800248e:	0d5b      	lsrs	r3, r3, #21
 8002490:	0fff      	lsrs	r7, r7, #31
 8002492:	2b00      	cmp	r3, #0
 8002494:	d100      	bne.n	8002498 <__aeabi_dmul+0x60>
 8002496:	e189      	b.n	80027ac <__aeabi_dmul+0x374>
 8002498:	4abf      	ldr	r2, [pc, #764]	; (8002798 <__aeabi_dmul+0x360>)
 800249a:	4293      	cmp	r3, r2
 800249c:	d019      	beq.n	80024d2 <__aeabi_dmul+0x9a>
 800249e:	0f42      	lsrs	r2, r0, #29
 80024a0:	00e4      	lsls	r4, r4, #3
 80024a2:	4322      	orrs	r2, r4
 80024a4:	2480      	movs	r4, #128	; 0x80
 80024a6:	0424      	lsls	r4, r4, #16
 80024a8:	4314      	orrs	r4, r2
 80024aa:	4abc      	ldr	r2, [pc, #752]	; (800279c <__aeabi_dmul+0x364>)
 80024ac:	2100      	movs	r1, #0
 80024ae:	4694      	mov	ip, r2
 80024b0:	4642      	mov	r2, r8
 80024b2:	4463      	add	r3, ip
 80024b4:	195b      	adds	r3, r3, r5
 80024b6:	9301      	str	r3, [sp, #4]
 80024b8:	9b01      	ldr	r3, [sp, #4]
 80024ba:	407a      	eors	r2, r7
 80024bc:	3301      	adds	r3, #1
 80024be:	00c0      	lsls	r0, r0, #3
 80024c0:	b2d2      	uxtb	r2, r2
 80024c2:	9302      	str	r3, [sp, #8]
 80024c4:	2e0a      	cmp	r6, #10
 80024c6:	dd1c      	ble.n	8002502 <__aeabi_dmul+0xca>
 80024c8:	003a      	movs	r2, r7
 80024ca:	2e0b      	cmp	r6, #11
 80024cc:	d05e      	beq.n	800258c <__aeabi_dmul+0x154>
 80024ce:	4647      	mov	r7, r8
 80024d0:	e056      	b.n	8002580 <__aeabi_dmul+0x148>
 80024d2:	4649      	mov	r1, r9
 80024d4:	4bb0      	ldr	r3, [pc, #704]	; (8002798 <__aeabi_dmul+0x360>)
 80024d6:	4321      	orrs	r1, r4
 80024d8:	18eb      	adds	r3, r5, r3
 80024da:	9301      	str	r3, [sp, #4]
 80024dc:	2900      	cmp	r1, #0
 80024de:	d12a      	bne.n	8002536 <__aeabi_dmul+0xfe>
 80024e0:	2080      	movs	r0, #128	; 0x80
 80024e2:	2202      	movs	r2, #2
 80024e4:	0100      	lsls	r0, r0, #4
 80024e6:	002b      	movs	r3, r5
 80024e8:	4684      	mov	ip, r0
 80024ea:	4316      	orrs	r6, r2
 80024ec:	4642      	mov	r2, r8
 80024ee:	4463      	add	r3, ip
 80024f0:	407a      	eors	r2, r7
 80024f2:	b2d2      	uxtb	r2, r2
 80024f4:	9302      	str	r3, [sp, #8]
 80024f6:	2e0a      	cmp	r6, #10
 80024f8:	dd00      	ble.n	80024fc <__aeabi_dmul+0xc4>
 80024fa:	e231      	b.n	8002960 <__aeabi_dmul+0x528>
 80024fc:	2000      	movs	r0, #0
 80024fe:	2400      	movs	r4, #0
 8002500:	2102      	movs	r1, #2
 8002502:	2e02      	cmp	r6, #2
 8002504:	dc26      	bgt.n	8002554 <__aeabi_dmul+0x11c>
 8002506:	3e01      	subs	r6, #1
 8002508:	2e01      	cmp	r6, #1
 800250a:	d852      	bhi.n	80025b2 <__aeabi_dmul+0x17a>
 800250c:	2902      	cmp	r1, #2
 800250e:	d04c      	beq.n	80025aa <__aeabi_dmul+0x172>
 8002510:	2901      	cmp	r1, #1
 8002512:	d000      	beq.n	8002516 <__aeabi_dmul+0xde>
 8002514:	e118      	b.n	8002748 <__aeabi_dmul+0x310>
 8002516:	2300      	movs	r3, #0
 8002518:	2400      	movs	r4, #0
 800251a:	2500      	movs	r5, #0
 800251c:	051b      	lsls	r3, r3, #20
 800251e:	4323      	orrs	r3, r4
 8002520:	07d2      	lsls	r2, r2, #31
 8002522:	4313      	orrs	r3, r2
 8002524:	0028      	movs	r0, r5
 8002526:	0019      	movs	r1, r3
 8002528:	b007      	add	sp, #28
 800252a:	bcf0      	pop	{r4, r5, r6, r7}
 800252c:	46bb      	mov	fp, r7
 800252e:	46b2      	mov	sl, r6
 8002530:	46a9      	mov	r9, r5
 8002532:	46a0      	mov	r8, r4
 8002534:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002536:	2180      	movs	r1, #128	; 0x80
 8002538:	2203      	movs	r2, #3
 800253a:	0109      	lsls	r1, r1, #4
 800253c:	002b      	movs	r3, r5
 800253e:	468c      	mov	ip, r1
 8002540:	4316      	orrs	r6, r2
 8002542:	4642      	mov	r2, r8
 8002544:	4463      	add	r3, ip
 8002546:	407a      	eors	r2, r7
 8002548:	b2d2      	uxtb	r2, r2
 800254a:	9302      	str	r3, [sp, #8]
 800254c:	2e0a      	cmp	r6, #10
 800254e:	dd00      	ble.n	8002552 <__aeabi_dmul+0x11a>
 8002550:	e228      	b.n	80029a4 <__aeabi_dmul+0x56c>
 8002552:	2103      	movs	r1, #3
 8002554:	2501      	movs	r5, #1
 8002556:	40b5      	lsls	r5, r6
 8002558:	46ac      	mov	ip, r5
 800255a:	26a6      	movs	r6, #166	; 0xa6
 800255c:	4663      	mov	r3, ip
 800255e:	00f6      	lsls	r6, r6, #3
 8002560:	4035      	ands	r5, r6
 8002562:	4233      	tst	r3, r6
 8002564:	d10b      	bne.n	800257e <__aeabi_dmul+0x146>
 8002566:	2690      	movs	r6, #144	; 0x90
 8002568:	00b6      	lsls	r6, r6, #2
 800256a:	4233      	tst	r3, r6
 800256c:	d118      	bne.n	80025a0 <__aeabi_dmul+0x168>
 800256e:	3eb9      	subs	r6, #185	; 0xb9
 8002570:	3eff      	subs	r6, #255	; 0xff
 8002572:	421e      	tst	r6, r3
 8002574:	d01d      	beq.n	80025b2 <__aeabi_dmul+0x17a>
 8002576:	46a3      	mov	fp, r4
 8002578:	4682      	mov	sl, r0
 800257a:	9100      	str	r1, [sp, #0]
 800257c:	e000      	b.n	8002580 <__aeabi_dmul+0x148>
 800257e:	0017      	movs	r7, r2
 8002580:	9900      	ldr	r1, [sp, #0]
 8002582:	003a      	movs	r2, r7
 8002584:	2902      	cmp	r1, #2
 8002586:	d010      	beq.n	80025aa <__aeabi_dmul+0x172>
 8002588:	465c      	mov	r4, fp
 800258a:	4650      	mov	r0, sl
 800258c:	2903      	cmp	r1, #3
 800258e:	d1bf      	bne.n	8002510 <__aeabi_dmul+0xd8>
 8002590:	2380      	movs	r3, #128	; 0x80
 8002592:	031b      	lsls	r3, r3, #12
 8002594:	431c      	orrs	r4, r3
 8002596:	0324      	lsls	r4, r4, #12
 8002598:	0005      	movs	r5, r0
 800259a:	4b7f      	ldr	r3, [pc, #508]	; (8002798 <__aeabi_dmul+0x360>)
 800259c:	0b24      	lsrs	r4, r4, #12
 800259e:	e7bd      	b.n	800251c <__aeabi_dmul+0xe4>
 80025a0:	2480      	movs	r4, #128	; 0x80
 80025a2:	2200      	movs	r2, #0
 80025a4:	4b7c      	ldr	r3, [pc, #496]	; (8002798 <__aeabi_dmul+0x360>)
 80025a6:	0324      	lsls	r4, r4, #12
 80025a8:	e7b8      	b.n	800251c <__aeabi_dmul+0xe4>
 80025aa:	2400      	movs	r4, #0
 80025ac:	2500      	movs	r5, #0
 80025ae:	4b7a      	ldr	r3, [pc, #488]	; (8002798 <__aeabi_dmul+0x360>)
 80025b0:	e7b4      	b.n	800251c <__aeabi_dmul+0xe4>
 80025b2:	4653      	mov	r3, sl
 80025b4:	041e      	lsls	r6, r3, #16
 80025b6:	0c36      	lsrs	r6, r6, #16
 80025b8:	0c1f      	lsrs	r7, r3, #16
 80025ba:	0033      	movs	r3, r6
 80025bc:	0c01      	lsrs	r1, r0, #16
 80025be:	0400      	lsls	r0, r0, #16
 80025c0:	0c00      	lsrs	r0, r0, #16
 80025c2:	4343      	muls	r3, r0
 80025c4:	4698      	mov	r8, r3
 80025c6:	0003      	movs	r3, r0
 80025c8:	437b      	muls	r3, r7
 80025ca:	4699      	mov	r9, r3
 80025cc:	0033      	movs	r3, r6
 80025ce:	434b      	muls	r3, r1
 80025d0:	469c      	mov	ip, r3
 80025d2:	4643      	mov	r3, r8
 80025d4:	000d      	movs	r5, r1
 80025d6:	0c1b      	lsrs	r3, r3, #16
 80025d8:	469a      	mov	sl, r3
 80025da:	437d      	muls	r5, r7
 80025dc:	44cc      	add	ip, r9
 80025de:	44d4      	add	ip, sl
 80025e0:	9500      	str	r5, [sp, #0]
 80025e2:	45e1      	cmp	r9, ip
 80025e4:	d904      	bls.n	80025f0 <__aeabi_dmul+0x1b8>
 80025e6:	2380      	movs	r3, #128	; 0x80
 80025e8:	025b      	lsls	r3, r3, #9
 80025ea:	4699      	mov	r9, r3
 80025ec:	444d      	add	r5, r9
 80025ee:	9500      	str	r5, [sp, #0]
 80025f0:	4663      	mov	r3, ip
 80025f2:	0c1b      	lsrs	r3, r3, #16
 80025f4:	001d      	movs	r5, r3
 80025f6:	4663      	mov	r3, ip
 80025f8:	041b      	lsls	r3, r3, #16
 80025fa:	469c      	mov	ip, r3
 80025fc:	4643      	mov	r3, r8
 80025fe:	041b      	lsls	r3, r3, #16
 8002600:	0c1b      	lsrs	r3, r3, #16
 8002602:	4698      	mov	r8, r3
 8002604:	4663      	mov	r3, ip
 8002606:	4443      	add	r3, r8
 8002608:	9303      	str	r3, [sp, #12]
 800260a:	0c23      	lsrs	r3, r4, #16
 800260c:	4698      	mov	r8, r3
 800260e:	0033      	movs	r3, r6
 8002610:	0424      	lsls	r4, r4, #16
 8002612:	0c24      	lsrs	r4, r4, #16
 8002614:	4363      	muls	r3, r4
 8002616:	469c      	mov	ip, r3
 8002618:	0023      	movs	r3, r4
 800261a:	437b      	muls	r3, r7
 800261c:	4699      	mov	r9, r3
 800261e:	4643      	mov	r3, r8
 8002620:	435e      	muls	r6, r3
 8002622:	435f      	muls	r7, r3
 8002624:	444e      	add	r6, r9
 8002626:	4663      	mov	r3, ip
 8002628:	46b2      	mov	sl, r6
 800262a:	0c1e      	lsrs	r6, r3, #16
 800262c:	4456      	add	r6, sl
 800262e:	45b1      	cmp	r9, r6
 8002630:	d903      	bls.n	800263a <__aeabi_dmul+0x202>
 8002632:	2380      	movs	r3, #128	; 0x80
 8002634:	025b      	lsls	r3, r3, #9
 8002636:	4699      	mov	r9, r3
 8002638:	444f      	add	r7, r9
 800263a:	0c33      	lsrs	r3, r6, #16
 800263c:	4699      	mov	r9, r3
 800263e:	003b      	movs	r3, r7
 8002640:	444b      	add	r3, r9
 8002642:	9305      	str	r3, [sp, #20]
 8002644:	4663      	mov	r3, ip
 8002646:	46ac      	mov	ip, r5
 8002648:	041f      	lsls	r7, r3, #16
 800264a:	0c3f      	lsrs	r7, r7, #16
 800264c:	0436      	lsls	r6, r6, #16
 800264e:	19f6      	adds	r6, r6, r7
 8002650:	44b4      	add	ip, r6
 8002652:	4663      	mov	r3, ip
 8002654:	9304      	str	r3, [sp, #16]
 8002656:	465b      	mov	r3, fp
 8002658:	0c1b      	lsrs	r3, r3, #16
 800265a:	469c      	mov	ip, r3
 800265c:	465b      	mov	r3, fp
 800265e:	041f      	lsls	r7, r3, #16
 8002660:	0c3f      	lsrs	r7, r7, #16
 8002662:	003b      	movs	r3, r7
 8002664:	4343      	muls	r3, r0
 8002666:	4699      	mov	r9, r3
 8002668:	4663      	mov	r3, ip
 800266a:	4343      	muls	r3, r0
 800266c:	469a      	mov	sl, r3
 800266e:	464b      	mov	r3, r9
 8002670:	4660      	mov	r0, ip
 8002672:	0c1b      	lsrs	r3, r3, #16
 8002674:	469b      	mov	fp, r3
 8002676:	4348      	muls	r0, r1
 8002678:	4379      	muls	r1, r7
 800267a:	4451      	add	r1, sl
 800267c:	4459      	add	r1, fp
 800267e:	458a      	cmp	sl, r1
 8002680:	d903      	bls.n	800268a <__aeabi_dmul+0x252>
 8002682:	2380      	movs	r3, #128	; 0x80
 8002684:	025b      	lsls	r3, r3, #9
 8002686:	469a      	mov	sl, r3
 8002688:	4450      	add	r0, sl
 800268a:	0c0b      	lsrs	r3, r1, #16
 800268c:	469a      	mov	sl, r3
 800268e:	464b      	mov	r3, r9
 8002690:	041b      	lsls	r3, r3, #16
 8002692:	0c1b      	lsrs	r3, r3, #16
 8002694:	4699      	mov	r9, r3
 8002696:	003b      	movs	r3, r7
 8002698:	4363      	muls	r3, r4
 800269a:	0409      	lsls	r1, r1, #16
 800269c:	4645      	mov	r5, r8
 800269e:	4449      	add	r1, r9
 80026a0:	4699      	mov	r9, r3
 80026a2:	4663      	mov	r3, ip
 80026a4:	435c      	muls	r4, r3
 80026a6:	436b      	muls	r3, r5
 80026a8:	469c      	mov	ip, r3
 80026aa:	464b      	mov	r3, r9
 80026ac:	0c1b      	lsrs	r3, r3, #16
 80026ae:	4698      	mov	r8, r3
 80026b0:	436f      	muls	r7, r5
 80026b2:	193f      	adds	r7, r7, r4
 80026b4:	4447      	add	r7, r8
 80026b6:	4450      	add	r0, sl
 80026b8:	42bc      	cmp	r4, r7
 80026ba:	d903      	bls.n	80026c4 <__aeabi_dmul+0x28c>
 80026bc:	2380      	movs	r3, #128	; 0x80
 80026be:	025b      	lsls	r3, r3, #9
 80026c0:	4698      	mov	r8, r3
 80026c2:	44c4      	add	ip, r8
 80026c4:	9b04      	ldr	r3, [sp, #16]
 80026c6:	9d00      	ldr	r5, [sp, #0]
 80026c8:	4698      	mov	r8, r3
 80026ca:	4445      	add	r5, r8
 80026cc:	42b5      	cmp	r5, r6
 80026ce:	41b6      	sbcs	r6, r6
 80026d0:	4273      	negs	r3, r6
 80026d2:	4698      	mov	r8, r3
 80026d4:	464b      	mov	r3, r9
 80026d6:	041e      	lsls	r6, r3, #16
 80026d8:	9b05      	ldr	r3, [sp, #20]
 80026da:	043c      	lsls	r4, r7, #16
 80026dc:	4699      	mov	r9, r3
 80026de:	0c36      	lsrs	r6, r6, #16
 80026e0:	19a4      	adds	r4, r4, r6
 80026e2:	444c      	add	r4, r9
 80026e4:	46a1      	mov	r9, r4
 80026e6:	4683      	mov	fp, r0
 80026e8:	186e      	adds	r6, r5, r1
 80026ea:	44c1      	add	r9, r8
 80026ec:	428e      	cmp	r6, r1
 80026ee:	4189      	sbcs	r1, r1
 80026f0:	44cb      	add	fp, r9
 80026f2:	465d      	mov	r5, fp
 80026f4:	4249      	negs	r1, r1
 80026f6:	186d      	adds	r5, r5, r1
 80026f8:	429c      	cmp	r4, r3
 80026fa:	41a4      	sbcs	r4, r4
 80026fc:	45c1      	cmp	r9, r8
 80026fe:	419b      	sbcs	r3, r3
 8002700:	4583      	cmp	fp, r0
 8002702:	4180      	sbcs	r0, r0
 8002704:	428d      	cmp	r5, r1
 8002706:	4189      	sbcs	r1, r1
 8002708:	425b      	negs	r3, r3
 800270a:	4264      	negs	r4, r4
 800270c:	431c      	orrs	r4, r3
 800270e:	4240      	negs	r0, r0
 8002710:	9b03      	ldr	r3, [sp, #12]
 8002712:	4249      	negs	r1, r1
 8002714:	4301      	orrs	r1, r0
 8002716:	0270      	lsls	r0, r6, #9
 8002718:	0c3f      	lsrs	r7, r7, #16
 800271a:	4318      	orrs	r0, r3
 800271c:	19e4      	adds	r4, r4, r7
 800271e:	1e47      	subs	r7, r0, #1
 8002720:	41b8      	sbcs	r0, r7
 8002722:	1864      	adds	r4, r4, r1
 8002724:	4464      	add	r4, ip
 8002726:	0df6      	lsrs	r6, r6, #23
 8002728:	0261      	lsls	r1, r4, #9
 800272a:	4330      	orrs	r0, r6
 800272c:	0dec      	lsrs	r4, r5, #23
 800272e:	026e      	lsls	r6, r5, #9
 8002730:	430c      	orrs	r4, r1
 8002732:	4330      	orrs	r0, r6
 8002734:	01c9      	lsls	r1, r1, #7
 8002736:	d400      	bmi.n	800273a <__aeabi_dmul+0x302>
 8002738:	e0f1      	b.n	800291e <__aeabi_dmul+0x4e6>
 800273a:	2101      	movs	r1, #1
 800273c:	0843      	lsrs	r3, r0, #1
 800273e:	4001      	ands	r1, r0
 8002740:	430b      	orrs	r3, r1
 8002742:	07e0      	lsls	r0, r4, #31
 8002744:	4318      	orrs	r0, r3
 8002746:	0864      	lsrs	r4, r4, #1
 8002748:	4915      	ldr	r1, [pc, #84]	; (80027a0 <__aeabi_dmul+0x368>)
 800274a:	9b02      	ldr	r3, [sp, #8]
 800274c:	468c      	mov	ip, r1
 800274e:	4463      	add	r3, ip
 8002750:	2b00      	cmp	r3, #0
 8002752:	dc00      	bgt.n	8002756 <__aeabi_dmul+0x31e>
 8002754:	e097      	b.n	8002886 <__aeabi_dmul+0x44e>
 8002756:	0741      	lsls	r1, r0, #29
 8002758:	d009      	beq.n	800276e <__aeabi_dmul+0x336>
 800275a:	210f      	movs	r1, #15
 800275c:	4001      	ands	r1, r0
 800275e:	2904      	cmp	r1, #4
 8002760:	d005      	beq.n	800276e <__aeabi_dmul+0x336>
 8002762:	1d01      	adds	r1, r0, #4
 8002764:	4281      	cmp	r1, r0
 8002766:	4180      	sbcs	r0, r0
 8002768:	4240      	negs	r0, r0
 800276a:	1824      	adds	r4, r4, r0
 800276c:	0008      	movs	r0, r1
 800276e:	01e1      	lsls	r1, r4, #7
 8002770:	d506      	bpl.n	8002780 <__aeabi_dmul+0x348>
 8002772:	2180      	movs	r1, #128	; 0x80
 8002774:	00c9      	lsls	r1, r1, #3
 8002776:	468c      	mov	ip, r1
 8002778:	4b0a      	ldr	r3, [pc, #40]	; (80027a4 <__aeabi_dmul+0x36c>)
 800277a:	401c      	ands	r4, r3
 800277c:	9b02      	ldr	r3, [sp, #8]
 800277e:	4463      	add	r3, ip
 8002780:	4909      	ldr	r1, [pc, #36]	; (80027a8 <__aeabi_dmul+0x370>)
 8002782:	428b      	cmp	r3, r1
 8002784:	dd00      	ble.n	8002788 <__aeabi_dmul+0x350>
 8002786:	e710      	b.n	80025aa <__aeabi_dmul+0x172>
 8002788:	0761      	lsls	r1, r4, #29
 800278a:	08c5      	lsrs	r5, r0, #3
 800278c:	0264      	lsls	r4, r4, #9
 800278e:	055b      	lsls	r3, r3, #21
 8002790:	430d      	orrs	r5, r1
 8002792:	0b24      	lsrs	r4, r4, #12
 8002794:	0d5b      	lsrs	r3, r3, #21
 8002796:	e6c1      	b.n	800251c <__aeabi_dmul+0xe4>
 8002798:	000007ff 	.word	0x000007ff
 800279c:	fffffc01 	.word	0xfffffc01
 80027a0:	000003ff 	.word	0x000003ff
 80027a4:	feffffff 	.word	0xfeffffff
 80027a8:	000007fe 	.word	0x000007fe
 80027ac:	464b      	mov	r3, r9
 80027ae:	4323      	orrs	r3, r4
 80027b0:	d059      	beq.n	8002866 <__aeabi_dmul+0x42e>
 80027b2:	2c00      	cmp	r4, #0
 80027b4:	d100      	bne.n	80027b8 <__aeabi_dmul+0x380>
 80027b6:	e0a3      	b.n	8002900 <__aeabi_dmul+0x4c8>
 80027b8:	0020      	movs	r0, r4
 80027ba:	f000 fdb1 	bl	8003320 <__clzsi2>
 80027be:	0001      	movs	r1, r0
 80027c0:	0003      	movs	r3, r0
 80027c2:	390b      	subs	r1, #11
 80027c4:	221d      	movs	r2, #29
 80027c6:	1a52      	subs	r2, r2, r1
 80027c8:	4649      	mov	r1, r9
 80027ca:	0018      	movs	r0, r3
 80027cc:	40d1      	lsrs	r1, r2
 80027ce:	464a      	mov	r2, r9
 80027d0:	3808      	subs	r0, #8
 80027d2:	4082      	lsls	r2, r0
 80027d4:	4084      	lsls	r4, r0
 80027d6:	0010      	movs	r0, r2
 80027d8:	430c      	orrs	r4, r1
 80027da:	4a74      	ldr	r2, [pc, #464]	; (80029ac <__aeabi_dmul+0x574>)
 80027dc:	1aeb      	subs	r3, r5, r3
 80027de:	4694      	mov	ip, r2
 80027e0:	4642      	mov	r2, r8
 80027e2:	4463      	add	r3, ip
 80027e4:	9301      	str	r3, [sp, #4]
 80027e6:	9b01      	ldr	r3, [sp, #4]
 80027e8:	407a      	eors	r2, r7
 80027ea:	3301      	adds	r3, #1
 80027ec:	2100      	movs	r1, #0
 80027ee:	b2d2      	uxtb	r2, r2
 80027f0:	9302      	str	r3, [sp, #8]
 80027f2:	2e0a      	cmp	r6, #10
 80027f4:	dd00      	ble.n	80027f8 <__aeabi_dmul+0x3c0>
 80027f6:	e667      	b.n	80024c8 <__aeabi_dmul+0x90>
 80027f8:	e683      	b.n	8002502 <__aeabi_dmul+0xca>
 80027fa:	465b      	mov	r3, fp
 80027fc:	4303      	orrs	r3, r0
 80027fe:	469a      	mov	sl, r3
 8002800:	d02a      	beq.n	8002858 <__aeabi_dmul+0x420>
 8002802:	465b      	mov	r3, fp
 8002804:	2b00      	cmp	r3, #0
 8002806:	d06d      	beq.n	80028e4 <__aeabi_dmul+0x4ac>
 8002808:	4658      	mov	r0, fp
 800280a:	f000 fd89 	bl	8003320 <__clzsi2>
 800280e:	0001      	movs	r1, r0
 8002810:	0003      	movs	r3, r0
 8002812:	390b      	subs	r1, #11
 8002814:	221d      	movs	r2, #29
 8002816:	1a52      	subs	r2, r2, r1
 8002818:	0021      	movs	r1, r4
 800281a:	0018      	movs	r0, r3
 800281c:	465d      	mov	r5, fp
 800281e:	40d1      	lsrs	r1, r2
 8002820:	3808      	subs	r0, #8
 8002822:	4085      	lsls	r5, r0
 8002824:	000a      	movs	r2, r1
 8002826:	4084      	lsls	r4, r0
 8002828:	432a      	orrs	r2, r5
 800282a:	4693      	mov	fp, r2
 800282c:	46a2      	mov	sl, r4
 800282e:	4d5f      	ldr	r5, [pc, #380]	; (80029ac <__aeabi_dmul+0x574>)
 8002830:	2600      	movs	r6, #0
 8002832:	1aed      	subs	r5, r5, r3
 8002834:	2300      	movs	r3, #0
 8002836:	9300      	str	r3, [sp, #0]
 8002838:	e625      	b.n	8002486 <__aeabi_dmul+0x4e>
 800283a:	465b      	mov	r3, fp
 800283c:	4303      	orrs	r3, r0
 800283e:	469a      	mov	sl, r3
 8002840:	d105      	bne.n	800284e <__aeabi_dmul+0x416>
 8002842:	2300      	movs	r3, #0
 8002844:	469b      	mov	fp, r3
 8002846:	3302      	adds	r3, #2
 8002848:	2608      	movs	r6, #8
 800284a:	9300      	str	r3, [sp, #0]
 800284c:	e61b      	b.n	8002486 <__aeabi_dmul+0x4e>
 800284e:	2303      	movs	r3, #3
 8002850:	4682      	mov	sl, r0
 8002852:	260c      	movs	r6, #12
 8002854:	9300      	str	r3, [sp, #0]
 8002856:	e616      	b.n	8002486 <__aeabi_dmul+0x4e>
 8002858:	2300      	movs	r3, #0
 800285a:	469b      	mov	fp, r3
 800285c:	3301      	adds	r3, #1
 800285e:	2604      	movs	r6, #4
 8002860:	2500      	movs	r5, #0
 8002862:	9300      	str	r3, [sp, #0]
 8002864:	e60f      	b.n	8002486 <__aeabi_dmul+0x4e>
 8002866:	4642      	mov	r2, r8
 8002868:	3301      	adds	r3, #1
 800286a:	9501      	str	r5, [sp, #4]
 800286c:	431e      	orrs	r6, r3
 800286e:	9b01      	ldr	r3, [sp, #4]
 8002870:	407a      	eors	r2, r7
 8002872:	3301      	adds	r3, #1
 8002874:	2400      	movs	r4, #0
 8002876:	2000      	movs	r0, #0
 8002878:	2101      	movs	r1, #1
 800287a:	b2d2      	uxtb	r2, r2
 800287c:	9302      	str	r3, [sp, #8]
 800287e:	2e0a      	cmp	r6, #10
 8002880:	dd00      	ble.n	8002884 <__aeabi_dmul+0x44c>
 8002882:	e621      	b.n	80024c8 <__aeabi_dmul+0x90>
 8002884:	e63d      	b.n	8002502 <__aeabi_dmul+0xca>
 8002886:	2101      	movs	r1, #1
 8002888:	1ac9      	subs	r1, r1, r3
 800288a:	2938      	cmp	r1, #56	; 0x38
 800288c:	dd00      	ble.n	8002890 <__aeabi_dmul+0x458>
 800288e:	e642      	b.n	8002516 <__aeabi_dmul+0xde>
 8002890:	291f      	cmp	r1, #31
 8002892:	dd47      	ble.n	8002924 <__aeabi_dmul+0x4ec>
 8002894:	261f      	movs	r6, #31
 8002896:	0025      	movs	r5, r4
 8002898:	4276      	negs	r6, r6
 800289a:	1af3      	subs	r3, r6, r3
 800289c:	40dd      	lsrs	r5, r3
 800289e:	002b      	movs	r3, r5
 80028a0:	2920      	cmp	r1, #32
 80028a2:	d005      	beq.n	80028b0 <__aeabi_dmul+0x478>
 80028a4:	4942      	ldr	r1, [pc, #264]	; (80029b0 <__aeabi_dmul+0x578>)
 80028a6:	9d02      	ldr	r5, [sp, #8]
 80028a8:	468c      	mov	ip, r1
 80028aa:	4465      	add	r5, ip
 80028ac:	40ac      	lsls	r4, r5
 80028ae:	4320      	orrs	r0, r4
 80028b0:	1e41      	subs	r1, r0, #1
 80028b2:	4188      	sbcs	r0, r1
 80028b4:	4318      	orrs	r0, r3
 80028b6:	2307      	movs	r3, #7
 80028b8:	001d      	movs	r5, r3
 80028ba:	2400      	movs	r4, #0
 80028bc:	4005      	ands	r5, r0
 80028be:	4203      	tst	r3, r0
 80028c0:	d04a      	beq.n	8002958 <__aeabi_dmul+0x520>
 80028c2:	230f      	movs	r3, #15
 80028c4:	2400      	movs	r4, #0
 80028c6:	4003      	ands	r3, r0
 80028c8:	2b04      	cmp	r3, #4
 80028ca:	d042      	beq.n	8002952 <__aeabi_dmul+0x51a>
 80028cc:	1d03      	adds	r3, r0, #4
 80028ce:	4283      	cmp	r3, r0
 80028d0:	4180      	sbcs	r0, r0
 80028d2:	4240      	negs	r0, r0
 80028d4:	1824      	adds	r4, r4, r0
 80028d6:	0018      	movs	r0, r3
 80028d8:	0223      	lsls	r3, r4, #8
 80028da:	d53a      	bpl.n	8002952 <__aeabi_dmul+0x51a>
 80028dc:	2301      	movs	r3, #1
 80028de:	2400      	movs	r4, #0
 80028e0:	2500      	movs	r5, #0
 80028e2:	e61b      	b.n	800251c <__aeabi_dmul+0xe4>
 80028e4:	f000 fd1c 	bl	8003320 <__clzsi2>
 80028e8:	0001      	movs	r1, r0
 80028ea:	0003      	movs	r3, r0
 80028ec:	3115      	adds	r1, #21
 80028ee:	3320      	adds	r3, #32
 80028f0:	291c      	cmp	r1, #28
 80028f2:	dd8f      	ble.n	8002814 <__aeabi_dmul+0x3dc>
 80028f4:	3808      	subs	r0, #8
 80028f6:	2200      	movs	r2, #0
 80028f8:	4084      	lsls	r4, r0
 80028fa:	4692      	mov	sl, r2
 80028fc:	46a3      	mov	fp, r4
 80028fe:	e796      	b.n	800282e <__aeabi_dmul+0x3f6>
 8002900:	f000 fd0e 	bl	8003320 <__clzsi2>
 8002904:	0001      	movs	r1, r0
 8002906:	0003      	movs	r3, r0
 8002908:	3115      	adds	r1, #21
 800290a:	3320      	adds	r3, #32
 800290c:	291c      	cmp	r1, #28
 800290e:	dc00      	bgt.n	8002912 <__aeabi_dmul+0x4da>
 8002910:	e758      	b.n	80027c4 <__aeabi_dmul+0x38c>
 8002912:	0002      	movs	r2, r0
 8002914:	464c      	mov	r4, r9
 8002916:	3a08      	subs	r2, #8
 8002918:	2000      	movs	r0, #0
 800291a:	4094      	lsls	r4, r2
 800291c:	e75d      	b.n	80027da <__aeabi_dmul+0x3a2>
 800291e:	9b01      	ldr	r3, [sp, #4]
 8002920:	9302      	str	r3, [sp, #8]
 8002922:	e711      	b.n	8002748 <__aeabi_dmul+0x310>
 8002924:	4b23      	ldr	r3, [pc, #140]	; (80029b4 <__aeabi_dmul+0x57c>)
 8002926:	0026      	movs	r6, r4
 8002928:	469c      	mov	ip, r3
 800292a:	0003      	movs	r3, r0
 800292c:	9d02      	ldr	r5, [sp, #8]
 800292e:	40cb      	lsrs	r3, r1
 8002930:	4465      	add	r5, ip
 8002932:	40ae      	lsls	r6, r5
 8002934:	431e      	orrs	r6, r3
 8002936:	0003      	movs	r3, r0
 8002938:	40ab      	lsls	r3, r5
 800293a:	1e58      	subs	r0, r3, #1
 800293c:	4183      	sbcs	r3, r0
 800293e:	0030      	movs	r0, r6
 8002940:	4318      	orrs	r0, r3
 8002942:	40cc      	lsrs	r4, r1
 8002944:	0743      	lsls	r3, r0, #29
 8002946:	d0c7      	beq.n	80028d8 <__aeabi_dmul+0x4a0>
 8002948:	230f      	movs	r3, #15
 800294a:	4003      	ands	r3, r0
 800294c:	2b04      	cmp	r3, #4
 800294e:	d1bd      	bne.n	80028cc <__aeabi_dmul+0x494>
 8002950:	e7c2      	b.n	80028d8 <__aeabi_dmul+0x4a0>
 8002952:	0765      	lsls	r5, r4, #29
 8002954:	0264      	lsls	r4, r4, #9
 8002956:	0b24      	lsrs	r4, r4, #12
 8002958:	08c0      	lsrs	r0, r0, #3
 800295a:	2300      	movs	r3, #0
 800295c:	4305      	orrs	r5, r0
 800295e:	e5dd      	b.n	800251c <__aeabi_dmul+0xe4>
 8002960:	2500      	movs	r5, #0
 8002962:	2302      	movs	r3, #2
 8002964:	2e0f      	cmp	r6, #15
 8002966:	d10c      	bne.n	8002982 <__aeabi_dmul+0x54a>
 8002968:	2480      	movs	r4, #128	; 0x80
 800296a:	465b      	mov	r3, fp
 800296c:	0324      	lsls	r4, r4, #12
 800296e:	4223      	tst	r3, r4
 8002970:	d00e      	beq.n	8002990 <__aeabi_dmul+0x558>
 8002972:	4221      	tst	r1, r4
 8002974:	d10c      	bne.n	8002990 <__aeabi_dmul+0x558>
 8002976:	430c      	orrs	r4, r1
 8002978:	0324      	lsls	r4, r4, #12
 800297a:	003a      	movs	r2, r7
 800297c:	4b0e      	ldr	r3, [pc, #56]	; (80029b8 <__aeabi_dmul+0x580>)
 800297e:	0b24      	lsrs	r4, r4, #12
 8002980:	e5cc      	b.n	800251c <__aeabi_dmul+0xe4>
 8002982:	2e0b      	cmp	r6, #11
 8002984:	d000      	beq.n	8002988 <__aeabi_dmul+0x550>
 8002986:	e5a2      	b.n	80024ce <__aeabi_dmul+0x96>
 8002988:	468b      	mov	fp, r1
 800298a:	46aa      	mov	sl, r5
 800298c:	9300      	str	r3, [sp, #0]
 800298e:	e5f7      	b.n	8002580 <__aeabi_dmul+0x148>
 8002990:	2480      	movs	r4, #128	; 0x80
 8002992:	465b      	mov	r3, fp
 8002994:	0324      	lsls	r4, r4, #12
 8002996:	431c      	orrs	r4, r3
 8002998:	0324      	lsls	r4, r4, #12
 800299a:	4642      	mov	r2, r8
 800299c:	4655      	mov	r5, sl
 800299e:	4b06      	ldr	r3, [pc, #24]	; (80029b8 <__aeabi_dmul+0x580>)
 80029a0:	0b24      	lsrs	r4, r4, #12
 80029a2:	e5bb      	b.n	800251c <__aeabi_dmul+0xe4>
 80029a4:	464d      	mov	r5, r9
 80029a6:	0021      	movs	r1, r4
 80029a8:	2303      	movs	r3, #3
 80029aa:	e7db      	b.n	8002964 <__aeabi_dmul+0x52c>
 80029ac:	fffffc0d 	.word	0xfffffc0d
 80029b0:	0000043e 	.word	0x0000043e
 80029b4:	0000041e 	.word	0x0000041e
 80029b8:	000007ff 	.word	0x000007ff

080029bc <__aeabi_dsub>:
 80029bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029be:	4657      	mov	r7, sl
 80029c0:	464e      	mov	r6, r9
 80029c2:	4645      	mov	r5, r8
 80029c4:	46de      	mov	lr, fp
 80029c6:	b5e0      	push	{r5, r6, r7, lr}
 80029c8:	000d      	movs	r5, r1
 80029ca:	0004      	movs	r4, r0
 80029cc:	0019      	movs	r1, r3
 80029ce:	0010      	movs	r0, r2
 80029d0:	032b      	lsls	r3, r5, #12
 80029d2:	0a5b      	lsrs	r3, r3, #9
 80029d4:	0f62      	lsrs	r2, r4, #29
 80029d6:	431a      	orrs	r2, r3
 80029d8:	00e3      	lsls	r3, r4, #3
 80029da:	030c      	lsls	r4, r1, #12
 80029dc:	0a64      	lsrs	r4, r4, #9
 80029de:	0f47      	lsrs	r7, r0, #29
 80029e0:	4327      	orrs	r7, r4
 80029e2:	4cd0      	ldr	r4, [pc, #832]	; (8002d24 <__aeabi_dsub+0x368>)
 80029e4:	006e      	lsls	r6, r5, #1
 80029e6:	4691      	mov	r9, r2
 80029e8:	b083      	sub	sp, #12
 80029ea:	004a      	lsls	r2, r1, #1
 80029ec:	00c0      	lsls	r0, r0, #3
 80029ee:	4698      	mov	r8, r3
 80029f0:	46a2      	mov	sl, r4
 80029f2:	0d76      	lsrs	r6, r6, #21
 80029f4:	0fed      	lsrs	r5, r5, #31
 80029f6:	0d52      	lsrs	r2, r2, #21
 80029f8:	0fc9      	lsrs	r1, r1, #31
 80029fa:	9001      	str	r0, [sp, #4]
 80029fc:	42a2      	cmp	r2, r4
 80029fe:	d100      	bne.n	8002a02 <__aeabi_dsub+0x46>
 8002a00:	e0b9      	b.n	8002b76 <__aeabi_dsub+0x1ba>
 8002a02:	2401      	movs	r4, #1
 8002a04:	4061      	eors	r1, r4
 8002a06:	468b      	mov	fp, r1
 8002a08:	428d      	cmp	r5, r1
 8002a0a:	d100      	bne.n	8002a0e <__aeabi_dsub+0x52>
 8002a0c:	e08d      	b.n	8002b2a <__aeabi_dsub+0x16e>
 8002a0e:	1ab4      	subs	r4, r6, r2
 8002a10:	46a4      	mov	ip, r4
 8002a12:	2c00      	cmp	r4, #0
 8002a14:	dc00      	bgt.n	8002a18 <__aeabi_dsub+0x5c>
 8002a16:	e0b7      	b.n	8002b88 <__aeabi_dsub+0x1cc>
 8002a18:	2a00      	cmp	r2, #0
 8002a1a:	d100      	bne.n	8002a1e <__aeabi_dsub+0x62>
 8002a1c:	e0cb      	b.n	8002bb6 <__aeabi_dsub+0x1fa>
 8002a1e:	4ac1      	ldr	r2, [pc, #772]	; (8002d24 <__aeabi_dsub+0x368>)
 8002a20:	4296      	cmp	r6, r2
 8002a22:	d100      	bne.n	8002a26 <__aeabi_dsub+0x6a>
 8002a24:	e186      	b.n	8002d34 <__aeabi_dsub+0x378>
 8002a26:	2280      	movs	r2, #128	; 0x80
 8002a28:	0412      	lsls	r2, r2, #16
 8002a2a:	4317      	orrs	r7, r2
 8002a2c:	4662      	mov	r2, ip
 8002a2e:	2a38      	cmp	r2, #56	; 0x38
 8002a30:	dd00      	ble.n	8002a34 <__aeabi_dsub+0x78>
 8002a32:	e1a4      	b.n	8002d7e <__aeabi_dsub+0x3c2>
 8002a34:	2a1f      	cmp	r2, #31
 8002a36:	dd00      	ble.n	8002a3a <__aeabi_dsub+0x7e>
 8002a38:	e21d      	b.n	8002e76 <__aeabi_dsub+0x4ba>
 8002a3a:	4661      	mov	r1, ip
 8002a3c:	2220      	movs	r2, #32
 8002a3e:	003c      	movs	r4, r7
 8002a40:	1a52      	subs	r2, r2, r1
 8002a42:	0001      	movs	r1, r0
 8002a44:	4090      	lsls	r0, r2
 8002a46:	4094      	lsls	r4, r2
 8002a48:	1e42      	subs	r2, r0, #1
 8002a4a:	4190      	sbcs	r0, r2
 8002a4c:	4662      	mov	r2, ip
 8002a4e:	46a0      	mov	r8, r4
 8002a50:	4664      	mov	r4, ip
 8002a52:	40d7      	lsrs	r7, r2
 8002a54:	464a      	mov	r2, r9
 8002a56:	40e1      	lsrs	r1, r4
 8002a58:	4644      	mov	r4, r8
 8002a5a:	1bd2      	subs	r2, r2, r7
 8002a5c:	4691      	mov	r9, r2
 8002a5e:	430c      	orrs	r4, r1
 8002a60:	4304      	orrs	r4, r0
 8002a62:	1b1c      	subs	r4, r3, r4
 8002a64:	42a3      	cmp	r3, r4
 8002a66:	4192      	sbcs	r2, r2
 8002a68:	464b      	mov	r3, r9
 8002a6a:	4252      	negs	r2, r2
 8002a6c:	1a9b      	subs	r3, r3, r2
 8002a6e:	469a      	mov	sl, r3
 8002a70:	4653      	mov	r3, sl
 8002a72:	021b      	lsls	r3, r3, #8
 8002a74:	d400      	bmi.n	8002a78 <__aeabi_dsub+0xbc>
 8002a76:	e12b      	b.n	8002cd0 <__aeabi_dsub+0x314>
 8002a78:	4653      	mov	r3, sl
 8002a7a:	025a      	lsls	r2, r3, #9
 8002a7c:	0a53      	lsrs	r3, r2, #9
 8002a7e:	469a      	mov	sl, r3
 8002a80:	4653      	mov	r3, sl
 8002a82:	2b00      	cmp	r3, #0
 8002a84:	d100      	bne.n	8002a88 <__aeabi_dsub+0xcc>
 8002a86:	e166      	b.n	8002d56 <__aeabi_dsub+0x39a>
 8002a88:	4650      	mov	r0, sl
 8002a8a:	f000 fc49 	bl	8003320 <__clzsi2>
 8002a8e:	0003      	movs	r3, r0
 8002a90:	3b08      	subs	r3, #8
 8002a92:	2220      	movs	r2, #32
 8002a94:	0020      	movs	r0, r4
 8002a96:	1ad2      	subs	r2, r2, r3
 8002a98:	4651      	mov	r1, sl
 8002a9a:	40d0      	lsrs	r0, r2
 8002a9c:	4099      	lsls	r1, r3
 8002a9e:	0002      	movs	r2, r0
 8002aa0:	409c      	lsls	r4, r3
 8002aa2:	430a      	orrs	r2, r1
 8002aa4:	429e      	cmp	r6, r3
 8002aa6:	dd00      	ble.n	8002aaa <__aeabi_dsub+0xee>
 8002aa8:	e164      	b.n	8002d74 <__aeabi_dsub+0x3b8>
 8002aaa:	1b9b      	subs	r3, r3, r6
 8002aac:	1c59      	adds	r1, r3, #1
 8002aae:	291f      	cmp	r1, #31
 8002ab0:	dd00      	ble.n	8002ab4 <__aeabi_dsub+0xf8>
 8002ab2:	e0fe      	b.n	8002cb2 <__aeabi_dsub+0x2f6>
 8002ab4:	2320      	movs	r3, #32
 8002ab6:	0010      	movs	r0, r2
 8002ab8:	0026      	movs	r6, r4
 8002aba:	1a5b      	subs	r3, r3, r1
 8002abc:	409c      	lsls	r4, r3
 8002abe:	4098      	lsls	r0, r3
 8002ac0:	40ce      	lsrs	r6, r1
 8002ac2:	40ca      	lsrs	r2, r1
 8002ac4:	1e63      	subs	r3, r4, #1
 8002ac6:	419c      	sbcs	r4, r3
 8002ac8:	4330      	orrs	r0, r6
 8002aca:	4692      	mov	sl, r2
 8002acc:	2600      	movs	r6, #0
 8002ace:	4304      	orrs	r4, r0
 8002ad0:	0763      	lsls	r3, r4, #29
 8002ad2:	d009      	beq.n	8002ae8 <__aeabi_dsub+0x12c>
 8002ad4:	230f      	movs	r3, #15
 8002ad6:	4023      	ands	r3, r4
 8002ad8:	2b04      	cmp	r3, #4
 8002ada:	d005      	beq.n	8002ae8 <__aeabi_dsub+0x12c>
 8002adc:	1d23      	adds	r3, r4, #4
 8002ade:	42a3      	cmp	r3, r4
 8002ae0:	41a4      	sbcs	r4, r4
 8002ae2:	4264      	negs	r4, r4
 8002ae4:	44a2      	add	sl, r4
 8002ae6:	001c      	movs	r4, r3
 8002ae8:	4653      	mov	r3, sl
 8002aea:	021b      	lsls	r3, r3, #8
 8002aec:	d400      	bmi.n	8002af0 <__aeabi_dsub+0x134>
 8002aee:	e0f2      	b.n	8002cd6 <__aeabi_dsub+0x31a>
 8002af0:	4b8c      	ldr	r3, [pc, #560]	; (8002d24 <__aeabi_dsub+0x368>)
 8002af2:	3601      	adds	r6, #1
 8002af4:	429e      	cmp	r6, r3
 8002af6:	d100      	bne.n	8002afa <__aeabi_dsub+0x13e>
 8002af8:	e10f      	b.n	8002d1a <__aeabi_dsub+0x35e>
 8002afa:	4653      	mov	r3, sl
 8002afc:	498a      	ldr	r1, [pc, #552]	; (8002d28 <__aeabi_dsub+0x36c>)
 8002afe:	08e4      	lsrs	r4, r4, #3
 8002b00:	400b      	ands	r3, r1
 8002b02:	0019      	movs	r1, r3
 8002b04:	075b      	lsls	r3, r3, #29
 8002b06:	4323      	orrs	r3, r4
 8002b08:	0572      	lsls	r2, r6, #21
 8002b0a:	024c      	lsls	r4, r1, #9
 8002b0c:	0b24      	lsrs	r4, r4, #12
 8002b0e:	0d52      	lsrs	r2, r2, #21
 8002b10:	0512      	lsls	r2, r2, #20
 8002b12:	4322      	orrs	r2, r4
 8002b14:	07ed      	lsls	r5, r5, #31
 8002b16:	432a      	orrs	r2, r5
 8002b18:	0018      	movs	r0, r3
 8002b1a:	0011      	movs	r1, r2
 8002b1c:	b003      	add	sp, #12
 8002b1e:	bcf0      	pop	{r4, r5, r6, r7}
 8002b20:	46bb      	mov	fp, r7
 8002b22:	46b2      	mov	sl, r6
 8002b24:	46a9      	mov	r9, r5
 8002b26:	46a0      	mov	r8, r4
 8002b28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b2a:	1ab4      	subs	r4, r6, r2
 8002b2c:	46a4      	mov	ip, r4
 8002b2e:	2c00      	cmp	r4, #0
 8002b30:	dd59      	ble.n	8002be6 <__aeabi_dsub+0x22a>
 8002b32:	2a00      	cmp	r2, #0
 8002b34:	d100      	bne.n	8002b38 <__aeabi_dsub+0x17c>
 8002b36:	e0b0      	b.n	8002c9a <__aeabi_dsub+0x2de>
 8002b38:	4556      	cmp	r6, sl
 8002b3a:	d100      	bne.n	8002b3e <__aeabi_dsub+0x182>
 8002b3c:	e0fa      	b.n	8002d34 <__aeabi_dsub+0x378>
 8002b3e:	2280      	movs	r2, #128	; 0x80
 8002b40:	0412      	lsls	r2, r2, #16
 8002b42:	4317      	orrs	r7, r2
 8002b44:	4662      	mov	r2, ip
 8002b46:	2a38      	cmp	r2, #56	; 0x38
 8002b48:	dd00      	ble.n	8002b4c <__aeabi_dsub+0x190>
 8002b4a:	e0d4      	b.n	8002cf6 <__aeabi_dsub+0x33a>
 8002b4c:	2a1f      	cmp	r2, #31
 8002b4e:	dc00      	bgt.n	8002b52 <__aeabi_dsub+0x196>
 8002b50:	e1c0      	b.n	8002ed4 <__aeabi_dsub+0x518>
 8002b52:	0039      	movs	r1, r7
 8002b54:	3a20      	subs	r2, #32
 8002b56:	40d1      	lsrs	r1, r2
 8002b58:	4662      	mov	r2, ip
 8002b5a:	2a20      	cmp	r2, #32
 8002b5c:	d006      	beq.n	8002b6c <__aeabi_dsub+0x1b0>
 8002b5e:	4664      	mov	r4, ip
 8002b60:	2240      	movs	r2, #64	; 0x40
 8002b62:	1b12      	subs	r2, r2, r4
 8002b64:	003c      	movs	r4, r7
 8002b66:	4094      	lsls	r4, r2
 8002b68:	4304      	orrs	r4, r0
 8002b6a:	9401      	str	r4, [sp, #4]
 8002b6c:	9c01      	ldr	r4, [sp, #4]
 8002b6e:	1e62      	subs	r2, r4, #1
 8002b70:	4194      	sbcs	r4, r2
 8002b72:	430c      	orrs	r4, r1
 8002b74:	e0c3      	b.n	8002cfe <__aeabi_dsub+0x342>
 8002b76:	003c      	movs	r4, r7
 8002b78:	4304      	orrs	r4, r0
 8002b7a:	d02b      	beq.n	8002bd4 <__aeabi_dsub+0x218>
 8002b7c:	468b      	mov	fp, r1
 8002b7e:	428d      	cmp	r5, r1
 8002b80:	d02e      	beq.n	8002be0 <__aeabi_dsub+0x224>
 8002b82:	4c6a      	ldr	r4, [pc, #424]	; (8002d2c <__aeabi_dsub+0x370>)
 8002b84:	46a4      	mov	ip, r4
 8002b86:	44b4      	add	ip, r6
 8002b88:	4664      	mov	r4, ip
 8002b8a:	2c00      	cmp	r4, #0
 8002b8c:	d05f      	beq.n	8002c4e <__aeabi_dsub+0x292>
 8002b8e:	1b94      	subs	r4, r2, r6
 8002b90:	46a4      	mov	ip, r4
 8002b92:	2e00      	cmp	r6, #0
 8002b94:	d000      	beq.n	8002b98 <__aeabi_dsub+0x1dc>
 8002b96:	e120      	b.n	8002dda <__aeabi_dsub+0x41e>
 8002b98:	464c      	mov	r4, r9
 8002b9a:	431c      	orrs	r4, r3
 8002b9c:	d100      	bne.n	8002ba0 <__aeabi_dsub+0x1e4>
 8002b9e:	e1c7      	b.n	8002f30 <__aeabi_dsub+0x574>
 8002ba0:	4661      	mov	r1, ip
 8002ba2:	1e4c      	subs	r4, r1, #1
 8002ba4:	2901      	cmp	r1, #1
 8002ba6:	d100      	bne.n	8002baa <__aeabi_dsub+0x1ee>
 8002ba8:	e223      	b.n	8002ff2 <__aeabi_dsub+0x636>
 8002baa:	4d5e      	ldr	r5, [pc, #376]	; (8002d24 <__aeabi_dsub+0x368>)
 8002bac:	45ac      	cmp	ip, r5
 8002bae:	d100      	bne.n	8002bb2 <__aeabi_dsub+0x1f6>
 8002bb0:	e1d8      	b.n	8002f64 <__aeabi_dsub+0x5a8>
 8002bb2:	46a4      	mov	ip, r4
 8002bb4:	e11a      	b.n	8002dec <__aeabi_dsub+0x430>
 8002bb6:	003a      	movs	r2, r7
 8002bb8:	4302      	orrs	r2, r0
 8002bba:	d100      	bne.n	8002bbe <__aeabi_dsub+0x202>
 8002bbc:	e0e4      	b.n	8002d88 <__aeabi_dsub+0x3cc>
 8002bbe:	0022      	movs	r2, r4
 8002bc0:	3a01      	subs	r2, #1
 8002bc2:	2c01      	cmp	r4, #1
 8002bc4:	d100      	bne.n	8002bc8 <__aeabi_dsub+0x20c>
 8002bc6:	e1c3      	b.n	8002f50 <__aeabi_dsub+0x594>
 8002bc8:	4956      	ldr	r1, [pc, #344]	; (8002d24 <__aeabi_dsub+0x368>)
 8002bca:	428c      	cmp	r4, r1
 8002bcc:	d100      	bne.n	8002bd0 <__aeabi_dsub+0x214>
 8002bce:	e0b1      	b.n	8002d34 <__aeabi_dsub+0x378>
 8002bd0:	4694      	mov	ip, r2
 8002bd2:	e72b      	b.n	8002a2c <__aeabi_dsub+0x70>
 8002bd4:	2401      	movs	r4, #1
 8002bd6:	4061      	eors	r1, r4
 8002bd8:	468b      	mov	fp, r1
 8002bda:	428d      	cmp	r5, r1
 8002bdc:	d000      	beq.n	8002be0 <__aeabi_dsub+0x224>
 8002bde:	e716      	b.n	8002a0e <__aeabi_dsub+0x52>
 8002be0:	4952      	ldr	r1, [pc, #328]	; (8002d2c <__aeabi_dsub+0x370>)
 8002be2:	468c      	mov	ip, r1
 8002be4:	44b4      	add	ip, r6
 8002be6:	4664      	mov	r4, ip
 8002be8:	2c00      	cmp	r4, #0
 8002bea:	d100      	bne.n	8002bee <__aeabi_dsub+0x232>
 8002bec:	e0d3      	b.n	8002d96 <__aeabi_dsub+0x3da>
 8002bee:	1b91      	subs	r1, r2, r6
 8002bf0:	468c      	mov	ip, r1
 8002bf2:	2e00      	cmp	r6, #0
 8002bf4:	d100      	bne.n	8002bf8 <__aeabi_dsub+0x23c>
 8002bf6:	e15e      	b.n	8002eb6 <__aeabi_dsub+0x4fa>
 8002bf8:	494a      	ldr	r1, [pc, #296]	; (8002d24 <__aeabi_dsub+0x368>)
 8002bfa:	428a      	cmp	r2, r1
 8002bfc:	d100      	bne.n	8002c00 <__aeabi_dsub+0x244>
 8002bfe:	e1be      	b.n	8002f7e <__aeabi_dsub+0x5c2>
 8002c00:	2180      	movs	r1, #128	; 0x80
 8002c02:	464c      	mov	r4, r9
 8002c04:	0409      	lsls	r1, r1, #16
 8002c06:	430c      	orrs	r4, r1
 8002c08:	46a1      	mov	r9, r4
 8002c0a:	4661      	mov	r1, ip
 8002c0c:	2938      	cmp	r1, #56	; 0x38
 8002c0e:	dd00      	ble.n	8002c12 <__aeabi_dsub+0x256>
 8002c10:	e1ba      	b.n	8002f88 <__aeabi_dsub+0x5cc>
 8002c12:	291f      	cmp	r1, #31
 8002c14:	dd00      	ble.n	8002c18 <__aeabi_dsub+0x25c>
 8002c16:	e227      	b.n	8003068 <__aeabi_dsub+0x6ac>
 8002c18:	2420      	movs	r4, #32
 8002c1a:	1a64      	subs	r4, r4, r1
 8002c1c:	4649      	mov	r1, r9
 8002c1e:	40a1      	lsls	r1, r4
 8002c20:	001e      	movs	r6, r3
 8002c22:	4688      	mov	r8, r1
 8002c24:	4661      	mov	r1, ip
 8002c26:	40a3      	lsls	r3, r4
 8002c28:	40ce      	lsrs	r6, r1
 8002c2a:	4641      	mov	r1, r8
 8002c2c:	1e5c      	subs	r4, r3, #1
 8002c2e:	41a3      	sbcs	r3, r4
 8002c30:	4331      	orrs	r1, r6
 8002c32:	4319      	orrs	r1, r3
 8002c34:	000c      	movs	r4, r1
 8002c36:	4663      	mov	r3, ip
 8002c38:	4649      	mov	r1, r9
 8002c3a:	40d9      	lsrs	r1, r3
 8002c3c:	187f      	adds	r7, r7, r1
 8002c3e:	1824      	adds	r4, r4, r0
 8002c40:	4284      	cmp	r4, r0
 8002c42:	419b      	sbcs	r3, r3
 8002c44:	425b      	negs	r3, r3
 8002c46:	469a      	mov	sl, r3
 8002c48:	0016      	movs	r6, r2
 8002c4a:	44ba      	add	sl, r7
 8002c4c:	e05d      	b.n	8002d0a <__aeabi_dsub+0x34e>
 8002c4e:	4c38      	ldr	r4, [pc, #224]	; (8002d30 <__aeabi_dsub+0x374>)
 8002c50:	1c72      	adds	r2, r6, #1
 8002c52:	4222      	tst	r2, r4
 8002c54:	d000      	beq.n	8002c58 <__aeabi_dsub+0x29c>
 8002c56:	e0df      	b.n	8002e18 <__aeabi_dsub+0x45c>
 8002c58:	464a      	mov	r2, r9
 8002c5a:	431a      	orrs	r2, r3
 8002c5c:	2e00      	cmp	r6, #0
 8002c5e:	d000      	beq.n	8002c62 <__aeabi_dsub+0x2a6>
 8002c60:	e15c      	b.n	8002f1c <__aeabi_dsub+0x560>
 8002c62:	2a00      	cmp	r2, #0
 8002c64:	d100      	bne.n	8002c68 <__aeabi_dsub+0x2ac>
 8002c66:	e1cf      	b.n	8003008 <__aeabi_dsub+0x64c>
 8002c68:	003a      	movs	r2, r7
 8002c6a:	4302      	orrs	r2, r0
 8002c6c:	d100      	bne.n	8002c70 <__aeabi_dsub+0x2b4>
 8002c6e:	e17f      	b.n	8002f70 <__aeabi_dsub+0x5b4>
 8002c70:	1a1c      	subs	r4, r3, r0
 8002c72:	464a      	mov	r2, r9
 8002c74:	42a3      	cmp	r3, r4
 8002c76:	4189      	sbcs	r1, r1
 8002c78:	1bd2      	subs	r2, r2, r7
 8002c7a:	4249      	negs	r1, r1
 8002c7c:	1a52      	subs	r2, r2, r1
 8002c7e:	4692      	mov	sl, r2
 8002c80:	0212      	lsls	r2, r2, #8
 8002c82:	d400      	bmi.n	8002c86 <__aeabi_dsub+0x2ca>
 8002c84:	e20a      	b.n	800309c <__aeabi_dsub+0x6e0>
 8002c86:	1ac4      	subs	r4, r0, r3
 8002c88:	42a0      	cmp	r0, r4
 8002c8a:	4180      	sbcs	r0, r0
 8002c8c:	464b      	mov	r3, r9
 8002c8e:	4240      	negs	r0, r0
 8002c90:	1aff      	subs	r7, r7, r3
 8002c92:	1a3b      	subs	r3, r7, r0
 8002c94:	469a      	mov	sl, r3
 8002c96:	465d      	mov	r5, fp
 8002c98:	e71a      	b.n	8002ad0 <__aeabi_dsub+0x114>
 8002c9a:	003a      	movs	r2, r7
 8002c9c:	4302      	orrs	r2, r0
 8002c9e:	d073      	beq.n	8002d88 <__aeabi_dsub+0x3cc>
 8002ca0:	0022      	movs	r2, r4
 8002ca2:	3a01      	subs	r2, #1
 8002ca4:	2c01      	cmp	r4, #1
 8002ca6:	d100      	bne.n	8002caa <__aeabi_dsub+0x2ee>
 8002ca8:	e0cb      	b.n	8002e42 <__aeabi_dsub+0x486>
 8002caa:	4554      	cmp	r4, sl
 8002cac:	d042      	beq.n	8002d34 <__aeabi_dsub+0x378>
 8002cae:	4694      	mov	ip, r2
 8002cb0:	e748      	b.n	8002b44 <__aeabi_dsub+0x188>
 8002cb2:	0010      	movs	r0, r2
 8002cb4:	3b1f      	subs	r3, #31
 8002cb6:	40d8      	lsrs	r0, r3
 8002cb8:	2920      	cmp	r1, #32
 8002cba:	d003      	beq.n	8002cc4 <__aeabi_dsub+0x308>
 8002cbc:	2340      	movs	r3, #64	; 0x40
 8002cbe:	1a5b      	subs	r3, r3, r1
 8002cc0:	409a      	lsls	r2, r3
 8002cc2:	4314      	orrs	r4, r2
 8002cc4:	1e63      	subs	r3, r4, #1
 8002cc6:	419c      	sbcs	r4, r3
 8002cc8:	2300      	movs	r3, #0
 8002cca:	2600      	movs	r6, #0
 8002ccc:	469a      	mov	sl, r3
 8002cce:	4304      	orrs	r4, r0
 8002cd0:	0763      	lsls	r3, r4, #29
 8002cd2:	d000      	beq.n	8002cd6 <__aeabi_dsub+0x31a>
 8002cd4:	e6fe      	b.n	8002ad4 <__aeabi_dsub+0x118>
 8002cd6:	4652      	mov	r2, sl
 8002cd8:	08e3      	lsrs	r3, r4, #3
 8002cda:	0752      	lsls	r2, r2, #29
 8002cdc:	4313      	orrs	r3, r2
 8002cde:	4652      	mov	r2, sl
 8002ce0:	46b4      	mov	ip, r6
 8002ce2:	08d2      	lsrs	r2, r2, #3
 8002ce4:	490f      	ldr	r1, [pc, #60]	; (8002d24 <__aeabi_dsub+0x368>)
 8002ce6:	458c      	cmp	ip, r1
 8002ce8:	d02a      	beq.n	8002d40 <__aeabi_dsub+0x384>
 8002cea:	0312      	lsls	r2, r2, #12
 8002cec:	0b14      	lsrs	r4, r2, #12
 8002cee:	4662      	mov	r2, ip
 8002cf0:	0552      	lsls	r2, r2, #21
 8002cf2:	0d52      	lsrs	r2, r2, #21
 8002cf4:	e70c      	b.n	8002b10 <__aeabi_dsub+0x154>
 8002cf6:	003c      	movs	r4, r7
 8002cf8:	4304      	orrs	r4, r0
 8002cfa:	1e62      	subs	r2, r4, #1
 8002cfc:	4194      	sbcs	r4, r2
 8002cfe:	18e4      	adds	r4, r4, r3
 8002d00:	429c      	cmp	r4, r3
 8002d02:	4192      	sbcs	r2, r2
 8002d04:	4252      	negs	r2, r2
 8002d06:	444a      	add	r2, r9
 8002d08:	4692      	mov	sl, r2
 8002d0a:	4653      	mov	r3, sl
 8002d0c:	021b      	lsls	r3, r3, #8
 8002d0e:	d5df      	bpl.n	8002cd0 <__aeabi_dsub+0x314>
 8002d10:	4b04      	ldr	r3, [pc, #16]	; (8002d24 <__aeabi_dsub+0x368>)
 8002d12:	3601      	adds	r6, #1
 8002d14:	429e      	cmp	r6, r3
 8002d16:	d000      	beq.n	8002d1a <__aeabi_dsub+0x35e>
 8002d18:	e0a0      	b.n	8002e5c <__aeabi_dsub+0x4a0>
 8002d1a:	0032      	movs	r2, r6
 8002d1c:	2400      	movs	r4, #0
 8002d1e:	2300      	movs	r3, #0
 8002d20:	e6f6      	b.n	8002b10 <__aeabi_dsub+0x154>
 8002d22:	46c0      	nop			; (mov r8, r8)
 8002d24:	000007ff 	.word	0x000007ff
 8002d28:	ff7fffff 	.word	0xff7fffff
 8002d2c:	fffff801 	.word	0xfffff801
 8002d30:	000007fe 	.word	0x000007fe
 8002d34:	08db      	lsrs	r3, r3, #3
 8002d36:	464a      	mov	r2, r9
 8002d38:	0752      	lsls	r2, r2, #29
 8002d3a:	4313      	orrs	r3, r2
 8002d3c:	464a      	mov	r2, r9
 8002d3e:	08d2      	lsrs	r2, r2, #3
 8002d40:	0019      	movs	r1, r3
 8002d42:	4311      	orrs	r1, r2
 8002d44:	d100      	bne.n	8002d48 <__aeabi_dsub+0x38c>
 8002d46:	e1b5      	b.n	80030b4 <__aeabi_dsub+0x6f8>
 8002d48:	2480      	movs	r4, #128	; 0x80
 8002d4a:	0324      	lsls	r4, r4, #12
 8002d4c:	4314      	orrs	r4, r2
 8002d4e:	0324      	lsls	r4, r4, #12
 8002d50:	4ad5      	ldr	r2, [pc, #852]	; (80030a8 <__aeabi_dsub+0x6ec>)
 8002d52:	0b24      	lsrs	r4, r4, #12
 8002d54:	e6dc      	b.n	8002b10 <__aeabi_dsub+0x154>
 8002d56:	0020      	movs	r0, r4
 8002d58:	f000 fae2 	bl	8003320 <__clzsi2>
 8002d5c:	0003      	movs	r3, r0
 8002d5e:	3318      	adds	r3, #24
 8002d60:	2b1f      	cmp	r3, #31
 8002d62:	dc00      	bgt.n	8002d66 <__aeabi_dsub+0x3aa>
 8002d64:	e695      	b.n	8002a92 <__aeabi_dsub+0xd6>
 8002d66:	0022      	movs	r2, r4
 8002d68:	3808      	subs	r0, #8
 8002d6a:	4082      	lsls	r2, r0
 8002d6c:	2400      	movs	r4, #0
 8002d6e:	429e      	cmp	r6, r3
 8002d70:	dc00      	bgt.n	8002d74 <__aeabi_dsub+0x3b8>
 8002d72:	e69a      	b.n	8002aaa <__aeabi_dsub+0xee>
 8002d74:	1af6      	subs	r6, r6, r3
 8002d76:	4bcd      	ldr	r3, [pc, #820]	; (80030ac <__aeabi_dsub+0x6f0>)
 8002d78:	401a      	ands	r2, r3
 8002d7a:	4692      	mov	sl, r2
 8002d7c:	e6a8      	b.n	8002ad0 <__aeabi_dsub+0x114>
 8002d7e:	003c      	movs	r4, r7
 8002d80:	4304      	orrs	r4, r0
 8002d82:	1e62      	subs	r2, r4, #1
 8002d84:	4194      	sbcs	r4, r2
 8002d86:	e66c      	b.n	8002a62 <__aeabi_dsub+0xa6>
 8002d88:	464a      	mov	r2, r9
 8002d8a:	08db      	lsrs	r3, r3, #3
 8002d8c:	0752      	lsls	r2, r2, #29
 8002d8e:	4313      	orrs	r3, r2
 8002d90:	464a      	mov	r2, r9
 8002d92:	08d2      	lsrs	r2, r2, #3
 8002d94:	e7a6      	b.n	8002ce4 <__aeabi_dsub+0x328>
 8002d96:	4cc6      	ldr	r4, [pc, #792]	; (80030b0 <__aeabi_dsub+0x6f4>)
 8002d98:	1c72      	adds	r2, r6, #1
 8002d9a:	4222      	tst	r2, r4
 8002d9c:	d000      	beq.n	8002da0 <__aeabi_dsub+0x3e4>
 8002d9e:	e0ac      	b.n	8002efa <__aeabi_dsub+0x53e>
 8002da0:	464a      	mov	r2, r9
 8002da2:	431a      	orrs	r2, r3
 8002da4:	2e00      	cmp	r6, #0
 8002da6:	d000      	beq.n	8002daa <__aeabi_dsub+0x3ee>
 8002da8:	e105      	b.n	8002fb6 <__aeabi_dsub+0x5fa>
 8002daa:	2a00      	cmp	r2, #0
 8002dac:	d100      	bne.n	8002db0 <__aeabi_dsub+0x3f4>
 8002dae:	e156      	b.n	800305e <__aeabi_dsub+0x6a2>
 8002db0:	003a      	movs	r2, r7
 8002db2:	4302      	orrs	r2, r0
 8002db4:	d100      	bne.n	8002db8 <__aeabi_dsub+0x3fc>
 8002db6:	e0db      	b.n	8002f70 <__aeabi_dsub+0x5b4>
 8002db8:	181c      	adds	r4, r3, r0
 8002dba:	429c      	cmp	r4, r3
 8002dbc:	419b      	sbcs	r3, r3
 8002dbe:	444f      	add	r7, r9
 8002dc0:	46ba      	mov	sl, r7
 8002dc2:	425b      	negs	r3, r3
 8002dc4:	449a      	add	sl, r3
 8002dc6:	4653      	mov	r3, sl
 8002dc8:	021b      	lsls	r3, r3, #8
 8002dca:	d400      	bmi.n	8002dce <__aeabi_dsub+0x412>
 8002dcc:	e780      	b.n	8002cd0 <__aeabi_dsub+0x314>
 8002dce:	4652      	mov	r2, sl
 8002dd0:	4bb6      	ldr	r3, [pc, #728]	; (80030ac <__aeabi_dsub+0x6f0>)
 8002dd2:	2601      	movs	r6, #1
 8002dd4:	401a      	ands	r2, r3
 8002dd6:	4692      	mov	sl, r2
 8002dd8:	e77a      	b.n	8002cd0 <__aeabi_dsub+0x314>
 8002dda:	4cb3      	ldr	r4, [pc, #716]	; (80030a8 <__aeabi_dsub+0x6ec>)
 8002ddc:	42a2      	cmp	r2, r4
 8002dde:	d100      	bne.n	8002de2 <__aeabi_dsub+0x426>
 8002de0:	e0c0      	b.n	8002f64 <__aeabi_dsub+0x5a8>
 8002de2:	2480      	movs	r4, #128	; 0x80
 8002de4:	464d      	mov	r5, r9
 8002de6:	0424      	lsls	r4, r4, #16
 8002de8:	4325      	orrs	r5, r4
 8002dea:	46a9      	mov	r9, r5
 8002dec:	4664      	mov	r4, ip
 8002dee:	2c38      	cmp	r4, #56	; 0x38
 8002df0:	dc53      	bgt.n	8002e9a <__aeabi_dsub+0x4de>
 8002df2:	4661      	mov	r1, ip
 8002df4:	2c1f      	cmp	r4, #31
 8002df6:	dd00      	ble.n	8002dfa <__aeabi_dsub+0x43e>
 8002df8:	e0cd      	b.n	8002f96 <__aeabi_dsub+0x5da>
 8002dfa:	2520      	movs	r5, #32
 8002dfc:	001e      	movs	r6, r3
 8002dfe:	1b2d      	subs	r5, r5, r4
 8002e00:	464c      	mov	r4, r9
 8002e02:	40ab      	lsls	r3, r5
 8002e04:	40ac      	lsls	r4, r5
 8002e06:	40ce      	lsrs	r6, r1
 8002e08:	1e5d      	subs	r5, r3, #1
 8002e0a:	41ab      	sbcs	r3, r5
 8002e0c:	4334      	orrs	r4, r6
 8002e0e:	4323      	orrs	r3, r4
 8002e10:	464c      	mov	r4, r9
 8002e12:	40cc      	lsrs	r4, r1
 8002e14:	1b3f      	subs	r7, r7, r4
 8002e16:	e045      	b.n	8002ea4 <__aeabi_dsub+0x4e8>
 8002e18:	464a      	mov	r2, r9
 8002e1a:	1a1c      	subs	r4, r3, r0
 8002e1c:	1bd1      	subs	r1, r2, r7
 8002e1e:	42a3      	cmp	r3, r4
 8002e20:	4192      	sbcs	r2, r2
 8002e22:	4252      	negs	r2, r2
 8002e24:	4692      	mov	sl, r2
 8002e26:	000a      	movs	r2, r1
 8002e28:	4651      	mov	r1, sl
 8002e2a:	1a52      	subs	r2, r2, r1
 8002e2c:	4692      	mov	sl, r2
 8002e2e:	0212      	lsls	r2, r2, #8
 8002e30:	d500      	bpl.n	8002e34 <__aeabi_dsub+0x478>
 8002e32:	e083      	b.n	8002f3c <__aeabi_dsub+0x580>
 8002e34:	4653      	mov	r3, sl
 8002e36:	4323      	orrs	r3, r4
 8002e38:	d000      	beq.n	8002e3c <__aeabi_dsub+0x480>
 8002e3a:	e621      	b.n	8002a80 <__aeabi_dsub+0xc4>
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	2500      	movs	r5, #0
 8002e40:	e753      	b.n	8002cea <__aeabi_dsub+0x32e>
 8002e42:	181c      	adds	r4, r3, r0
 8002e44:	429c      	cmp	r4, r3
 8002e46:	419b      	sbcs	r3, r3
 8002e48:	444f      	add	r7, r9
 8002e4a:	46ba      	mov	sl, r7
 8002e4c:	425b      	negs	r3, r3
 8002e4e:	449a      	add	sl, r3
 8002e50:	4653      	mov	r3, sl
 8002e52:	2601      	movs	r6, #1
 8002e54:	021b      	lsls	r3, r3, #8
 8002e56:	d400      	bmi.n	8002e5a <__aeabi_dsub+0x49e>
 8002e58:	e73a      	b.n	8002cd0 <__aeabi_dsub+0x314>
 8002e5a:	2602      	movs	r6, #2
 8002e5c:	4652      	mov	r2, sl
 8002e5e:	4b93      	ldr	r3, [pc, #588]	; (80030ac <__aeabi_dsub+0x6f0>)
 8002e60:	2101      	movs	r1, #1
 8002e62:	401a      	ands	r2, r3
 8002e64:	0013      	movs	r3, r2
 8002e66:	4021      	ands	r1, r4
 8002e68:	0862      	lsrs	r2, r4, #1
 8002e6a:	430a      	orrs	r2, r1
 8002e6c:	07dc      	lsls	r4, r3, #31
 8002e6e:	085b      	lsrs	r3, r3, #1
 8002e70:	469a      	mov	sl, r3
 8002e72:	4314      	orrs	r4, r2
 8002e74:	e62c      	b.n	8002ad0 <__aeabi_dsub+0x114>
 8002e76:	0039      	movs	r1, r7
 8002e78:	3a20      	subs	r2, #32
 8002e7a:	40d1      	lsrs	r1, r2
 8002e7c:	4662      	mov	r2, ip
 8002e7e:	2a20      	cmp	r2, #32
 8002e80:	d006      	beq.n	8002e90 <__aeabi_dsub+0x4d4>
 8002e82:	4664      	mov	r4, ip
 8002e84:	2240      	movs	r2, #64	; 0x40
 8002e86:	1b12      	subs	r2, r2, r4
 8002e88:	003c      	movs	r4, r7
 8002e8a:	4094      	lsls	r4, r2
 8002e8c:	4304      	orrs	r4, r0
 8002e8e:	9401      	str	r4, [sp, #4]
 8002e90:	9c01      	ldr	r4, [sp, #4]
 8002e92:	1e62      	subs	r2, r4, #1
 8002e94:	4194      	sbcs	r4, r2
 8002e96:	430c      	orrs	r4, r1
 8002e98:	e5e3      	b.n	8002a62 <__aeabi_dsub+0xa6>
 8002e9a:	4649      	mov	r1, r9
 8002e9c:	4319      	orrs	r1, r3
 8002e9e:	000b      	movs	r3, r1
 8002ea0:	1e5c      	subs	r4, r3, #1
 8002ea2:	41a3      	sbcs	r3, r4
 8002ea4:	1ac4      	subs	r4, r0, r3
 8002ea6:	42a0      	cmp	r0, r4
 8002ea8:	419b      	sbcs	r3, r3
 8002eaa:	425b      	negs	r3, r3
 8002eac:	1afb      	subs	r3, r7, r3
 8002eae:	469a      	mov	sl, r3
 8002eb0:	465d      	mov	r5, fp
 8002eb2:	0016      	movs	r6, r2
 8002eb4:	e5dc      	b.n	8002a70 <__aeabi_dsub+0xb4>
 8002eb6:	4649      	mov	r1, r9
 8002eb8:	4319      	orrs	r1, r3
 8002eba:	d100      	bne.n	8002ebe <__aeabi_dsub+0x502>
 8002ebc:	e0ae      	b.n	800301c <__aeabi_dsub+0x660>
 8002ebe:	4661      	mov	r1, ip
 8002ec0:	4664      	mov	r4, ip
 8002ec2:	3901      	subs	r1, #1
 8002ec4:	2c01      	cmp	r4, #1
 8002ec6:	d100      	bne.n	8002eca <__aeabi_dsub+0x50e>
 8002ec8:	e0e0      	b.n	800308c <__aeabi_dsub+0x6d0>
 8002eca:	4c77      	ldr	r4, [pc, #476]	; (80030a8 <__aeabi_dsub+0x6ec>)
 8002ecc:	45a4      	cmp	ip, r4
 8002ece:	d056      	beq.n	8002f7e <__aeabi_dsub+0x5c2>
 8002ed0:	468c      	mov	ip, r1
 8002ed2:	e69a      	b.n	8002c0a <__aeabi_dsub+0x24e>
 8002ed4:	4661      	mov	r1, ip
 8002ed6:	2220      	movs	r2, #32
 8002ed8:	003c      	movs	r4, r7
 8002eda:	1a52      	subs	r2, r2, r1
 8002edc:	4094      	lsls	r4, r2
 8002ede:	0001      	movs	r1, r0
 8002ee0:	4090      	lsls	r0, r2
 8002ee2:	46a0      	mov	r8, r4
 8002ee4:	4664      	mov	r4, ip
 8002ee6:	1e42      	subs	r2, r0, #1
 8002ee8:	4190      	sbcs	r0, r2
 8002eea:	4662      	mov	r2, ip
 8002eec:	40e1      	lsrs	r1, r4
 8002eee:	4644      	mov	r4, r8
 8002ef0:	40d7      	lsrs	r7, r2
 8002ef2:	430c      	orrs	r4, r1
 8002ef4:	4304      	orrs	r4, r0
 8002ef6:	44b9      	add	r9, r7
 8002ef8:	e701      	b.n	8002cfe <__aeabi_dsub+0x342>
 8002efa:	496b      	ldr	r1, [pc, #428]	; (80030a8 <__aeabi_dsub+0x6ec>)
 8002efc:	428a      	cmp	r2, r1
 8002efe:	d100      	bne.n	8002f02 <__aeabi_dsub+0x546>
 8002f00:	e70c      	b.n	8002d1c <__aeabi_dsub+0x360>
 8002f02:	1818      	adds	r0, r3, r0
 8002f04:	4298      	cmp	r0, r3
 8002f06:	419b      	sbcs	r3, r3
 8002f08:	444f      	add	r7, r9
 8002f0a:	425b      	negs	r3, r3
 8002f0c:	18fb      	adds	r3, r7, r3
 8002f0e:	07dc      	lsls	r4, r3, #31
 8002f10:	0840      	lsrs	r0, r0, #1
 8002f12:	085b      	lsrs	r3, r3, #1
 8002f14:	469a      	mov	sl, r3
 8002f16:	0016      	movs	r6, r2
 8002f18:	4304      	orrs	r4, r0
 8002f1a:	e6d9      	b.n	8002cd0 <__aeabi_dsub+0x314>
 8002f1c:	2a00      	cmp	r2, #0
 8002f1e:	d000      	beq.n	8002f22 <__aeabi_dsub+0x566>
 8002f20:	e081      	b.n	8003026 <__aeabi_dsub+0x66a>
 8002f22:	003b      	movs	r3, r7
 8002f24:	4303      	orrs	r3, r0
 8002f26:	d11d      	bne.n	8002f64 <__aeabi_dsub+0x5a8>
 8002f28:	2280      	movs	r2, #128	; 0x80
 8002f2a:	2500      	movs	r5, #0
 8002f2c:	0312      	lsls	r2, r2, #12
 8002f2e:	e70b      	b.n	8002d48 <__aeabi_dsub+0x38c>
 8002f30:	08c0      	lsrs	r0, r0, #3
 8002f32:	077b      	lsls	r3, r7, #29
 8002f34:	465d      	mov	r5, fp
 8002f36:	4303      	orrs	r3, r0
 8002f38:	08fa      	lsrs	r2, r7, #3
 8002f3a:	e6d3      	b.n	8002ce4 <__aeabi_dsub+0x328>
 8002f3c:	1ac4      	subs	r4, r0, r3
 8002f3e:	42a0      	cmp	r0, r4
 8002f40:	4180      	sbcs	r0, r0
 8002f42:	464b      	mov	r3, r9
 8002f44:	4240      	negs	r0, r0
 8002f46:	1aff      	subs	r7, r7, r3
 8002f48:	1a3b      	subs	r3, r7, r0
 8002f4a:	469a      	mov	sl, r3
 8002f4c:	465d      	mov	r5, fp
 8002f4e:	e597      	b.n	8002a80 <__aeabi_dsub+0xc4>
 8002f50:	1a1c      	subs	r4, r3, r0
 8002f52:	464a      	mov	r2, r9
 8002f54:	42a3      	cmp	r3, r4
 8002f56:	419b      	sbcs	r3, r3
 8002f58:	1bd7      	subs	r7, r2, r7
 8002f5a:	425b      	negs	r3, r3
 8002f5c:	1afb      	subs	r3, r7, r3
 8002f5e:	469a      	mov	sl, r3
 8002f60:	2601      	movs	r6, #1
 8002f62:	e585      	b.n	8002a70 <__aeabi_dsub+0xb4>
 8002f64:	08c0      	lsrs	r0, r0, #3
 8002f66:	077b      	lsls	r3, r7, #29
 8002f68:	465d      	mov	r5, fp
 8002f6a:	4303      	orrs	r3, r0
 8002f6c:	08fa      	lsrs	r2, r7, #3
 8002f6e:	e6e7      	b.n	8002d40 <__aeabi_dsub+0x384>
 8002f70:	464a      	mov	r2, r9
 8002f72:	08db      	lsrs	r3, r3, #3
 8002f74:	0752      	lsls	r2, r2, #29
 8002f76:	4313      	orrs	r3, r2
 8002f78:	464a      	mov	r2, r9
 8002f7a:	08d2      	lsrs	r2, r2, #3
 8002f7c:	e6b5      	b.n	8002cea <__aeabi_dsub+0x32e>
 8002f7e:	08c0      	lsrs	r0, r0, #3
 8002f80:	077b      	lsls	r3, r7, #29
 8002f82:	4303      	orrs	r3, r0
 8002f84:	08fa      	lsrs	r2, r7, #3
 8002f86:	e6db      	b.n	8002d40 <__aeabi_dsub+0x384>
 8002f88:	4649      	mov	r1, r9
 8002f8a:	4319      	orrs	r1, r3
 8002f8c:	000b      	movs	r3, r1
 8002f8e:	1e59      	subs	r1, r3, #1
 8002f90:	418b      	sbcs	r3, r1
 8002f92:	001c      	movs	r4, r3
 8002f94:	e653      	b.n	8002c3e <__aeabi_dsub+0x282>
 8002f96:	464d      	mov	r5, r9
 8002f98:	3c20      	subs	r4, #32
 8002f9a:	40e5      	lsrs	r5, r4
 8002f9c:	2920      	cmp	r1, #32
 8002f9e:	d005      	beq.n	8002fac <__aeabi_dsub+0x5f0>
 8002fa0:	2440      	movs	r4, #64	; 0x40
 8002fa2:	1a64      	subs	r4, r4, r1
 8002fa4:	4649      	mov	r1, r9
 8002fa6:	40a1      	lsls	r1, r4
 8002fa8:	430b      	orrs	r3, r1
 8002faa:	4698      	mov	r8, r3
 8002fac:	4643      	mov	r3, r8
 8002fae:	1e5c      	subs	r4, r3, #1
 8002fb0:	41a3      	sbcs	r3, r4
 8002fb2:	432b      	orrs	r3, r5
 8002fb4:	e776      	b.n	8002ea4 <__aeabi_dsub+0x4e8>
 8002fb6:	2a00      	cmp	r2, #0
 8002fb8:	d0e1      	beq.n	8002f7e <__aeabi_dsub+0x5c2>
 8002fba:	003a      	movs	r2, r7
 8002fbc:	08db      	lsrs	r3, r3, #3
 8002fbe:	4302      	orrs	r2, r0
 8002fc0:	d100      	bne.n	8002fc4 <__aeabi_dsub+0x608>
 8002fc2:	e6b8      	b.n	8002d36 <__aeabi_dsub+0x37a>
 8002fc4:	464a      	mov	r2, r9
 8002fc6:	0752      	lsls	r2, r2, #29
 8002fc8:	2480      	movs	r4, #128	; 0x80
 8002fca:	4313      	orrs	r3, r2
 8002fcc:	464a      	mov	r2, r9
 8002fce:	0324      	lsls	r4, r4, #12
 8002fd0:	08d2      	lsrs	r2, r2, #3
 8002fd2:	4222      	tst	r2, r4
 8002fd4:	d007      	beq.n	8002fe6 <__aeabi_dsub+0x62a>
 8002fd6:	08fe      	lsrs	r6, r7, #3
 8002fd8:	4226      	tst	r6, r4
 8002fda:	d104      	bne.n	8002fe6 <__aeabi_dsub+0x62a>
 8002fdc:	465d      	mov	r5, fp
 8002fde:	0032      	movs	r2, r6
 8002fe0:	08c3      	lsrs	r3, r0, #3
 8002fe2:	077f      	lsls	r7, r7, #29
 8002fe4:	433b      	orrs	r3, r7
 8002fe6:	0f59      	lsrs	r1, r3, #29
 8002fe8:	00db      	lsls	r3, r3, #3
 8002fea:	0749      	lsls	r1, r1, #29
 8002fec:	08db      	lsrs	r3, r3, #3
 8002fee:	430b      	orrs	r3, r1
 8002ff0:	e6a6      	b.n	8002d40 <__aeabi_dsub+0x384>
 8002ff2:	1ac4      	subs	r4, r0, r3
 8002ff4:	42a0      	cmp	r0, r4
 8002ff6:	4180      	sbcs	r0, r0
 8002ff8:	464b      	mov	r3, r9
 8002ffa:	4240      	negs	r0, r0
 8002ffc:	1aff      	subs	r7, r7, r3
 8002ffe:	1a3b      	subs	r3, r7, r0
 8003000:	469a      	mov	sl, r3
 8003002:	465d      	mov	r5, fp
 8003004:	2601      	movs	r6, #1
 8003006:	e533      	b.n	8002a70 <__aeabi_dsub+0xb4>
 8003008:	003b      	movs	r3, r7
 800300a:	4303      	orrs	r3, r0
 800300c:	d100      	bne.n	8003010 <__aeabi_dsub+0x654>
 800300e:	e715      	b.n	8002e3c <__aeabi_dsub+0x480>
 8003010:	08c0      	lsrs	r0, r0, #3
 8003012:	077b      	lsls	r3, r7, #29
 8003014:	465d      	mov	r5, fp
 8003016:	4303      	orrs	r3, r0
 8003018:	08fa      	lsrs	r2, r7, #3
 800301a:	e666      	b.n	8002cea <__aeabi_dsub+0x32e>
 800301c:	08c0      	lsrs	r0, r0, #3
 800301e:	077b      	lsls	r3, r7, #29
 8003020:	4303      	orrs	r3, r0
 8003022:	08fa      	lsrs	r2, r7, #3
 8003024:	e65e      	b.n	8002ce4 <__aeabi_dsub+0x328>
 8003026:	003a      	movs	r2, r7
 8003028:	08db      	lsrs	r3, r3, #3
 800302a:	4302      	orrs	r2, r0
 800302c:	d100      	bne.n	8003030 <__aeabi_dsub+0x674>
 800302e:	e682      	b.n	8002d36 <__aeabi_dsub+0x37a>
 8003030:	464a      	mov	r2, r9
 8003032:	0752      	lsls	r2, r2, #29
 8003034:	2480      	movs	r4, #128	; 0x80
 8003036:	4313      	orrs	r3, r2
 8003038:	464a      	mov	r2, r9
 800303a:	0324      	lsls	r4, r4, #12
 800303c:	08d2      	lsrs	r2, r2, #3
 800303e:	4222      	tst	r2, r4
 8003040:	d007      	beq.n	8003052 <__aeabi_dsub+0x696>
 8003042:	08fe      	lsrs	r6, r7, #3
 8003044:	4226      	tst	r6, r4
 8003046:	d104      	bne.n	8003052 <__aeabi_dsub+0x696>
 8003048:	465d      	mov	r5, fp
 800304a:	0032      	movs	r2, r6
 800304c:	08c3      	lsrs	r3, r0, #3
 800304e:	077f      	lsls	r7, r7, #29
 8003050:	433b      	orrs	r3, r7
 8003052:	0f59      	lsrs	r1, r3, #29
 8003054:	00db      	lsls	r3, r3, #3
 8003056:	08db      	lsrs	r3, r3, #3
 8003058:	0749      	lsls	r1, r1, #29
 800305a:	430b      	orrs	r3, r1
 800305c:	e670      	b.n	8002d40 <__aeabi_dsub+0x384>
 800305e:	08c0      	lsrs	r0, r0, #3
 8003060:	077b      	lsls	r3, r7, #29
 8003062:	4303      	orrs	r3, r0
 8003064:	08fa      	lsrs	r2, r7, #3
 8003066:	e640      	b.n	8002cea <__aeabi_dsub+0x32e>
 8003068:	464c      	mov	r4, r9
 800306a:	3920      	subs	r1, #32
 800306c:	40cc      	lsrs	r4, r1
 800306e:	4661      	mov	r1, ip
 8003070:	2920      	cmp	r1, #32
 8003072:	d006      	beq.n	8003082 <__aeabi_dsub+0x6c6>
 8003074:	4666      	mov	r6, ip
 8003076:	2140      	movs	r1, #64	; 0x40
 8003078:	1b89      	subs	r1, r1, r6
 800307a:	464e      	mov	r6, r9
 800307c:	408e      	lsls	r6, r1
 800307e:	4333      	orrs	r3, r6
 8003080:	4698      	mov	r8, r3
 8003082:	4643      	mov	r3, r8
 8003084:	1e59      	subs	r1, r3, #1
 8003086:	418b      	sbcs	r3, r1
 8003088:	431c      	orrs	r4, r3
 800308a:	e5d8      	b.n	8002c3e <__aeabi_dsub+0x282>
 800308c:	181c      	adds	r4, r3, r0
 800308e:	4284      	cmp	r4, r0
 8003090:	4180      	sbcs	r0, r0
 8003092:	444f      	add	r7, r9
 8003094:	46ba      	mov	sl, r7
 8003096:	4240      	negs	r0, r0
 8003098:	4482      	add	sl, r0
 800309a:	e6d9      	b.n	8002e50 <__aeabi_dsub+0x494>
 800309c:	4653      	mov	r3, sl
 800309e:	4323      	orrs	r3, r4
 80030a0:	d100      	bne.n	80030a4 <__aeabi_dsub+0x6e8>
 80030a2:	e6cb      	b.n	8002e3c <__aeabi_dsub+0x480>
 80030a4:	e614      	b.n	8002cd0 <__aeabi_dsub+0x314>
 80030a6:	46c0      	nop			; (mov r8, r8)
 80030a8:	000007ff 	.word	0x000007ff
 80030ac:	ff7fffff 	.word	0xff7fffff
 80030b0:	000007fe 	.word	0x000007fe
 80030b4:	2300      	movs	r3, #0
 80030b6:	4a01      	ldr	r2, [pc, #4]	; (80030bc <__aeabi_dsub+0x700>)
 80030b8:	001c      	movs	r4, r3
 80030ba:	e529      	b.n	8002b10 <__aeabi_dsub+0x154>
 80030bc:	000007ff 	.word	0x000007ff

080030c0 <__aeabi_dcmpun>:
 80030c0:	b570      	push	{r4, r5, r6, lr}
 80030c2:	0005      	movs	r5, r0
 80030c4:	480c      	ldr	r0, [pc, #48]	; (80030f8 <__aeabi_dcmpun+0x38>)
 80030c6:	031c      	lsls	r4, r3, #12
 80030c8:	0016      	movs	r6, r2
 80030ca:	005b      	lsls	r3, r3, #1
 80030cc:	030a      	lsls	r2, r1, #12
 80030ce:	0049      	lsls	r1, r1, #1
 80030d0:	0b12      	lsrs	r2, r2, #12
 80030d2:	0d49      	lsrs	r1, r1, #21
 80030d4:	0b24      	lsrs	r4, r4, #12
 80030d6:	0d5b      	lsrs	r3, r3, #21
 80030d8:	4281      	cmp	r1, r0
 80030da:	d008      	beq.n	80030ee <__aeabi_dcmpun+0x2e>
 80030dc:	4a06      	ldr	r2, [pc, #24]	; (80030f8 <__aeabi_dcmpun+0x38>)
 80030de:	2000      	movs	r0, #0
 80030e0:	4293      	cmp	r3, r2
 80030e2:	d103      	bne.n	80030ec <__aeabi_dcmpun+0x2c>
 80030e4:	0020      	movs	r0, r4
 80030e6:	4330      	orrs	r0, r6
 80030e8:	1e43      	subs	r3, r0, #1
 80030ea:	4198      	sbcs	r0, r3
 80030ec:	bd70      	pop	{r4, r5, r6, pc}
 80030ee:	2001      	movs	r0, #1
 80030f0:	432a      	orrs	r2, r5
 80030f2:	d1fb      	bne.n	80030ec <__aeabi_dcmpun+0x2c>
 80030f4:	e7f2      	b.n	80030dc <__aeabi_dcmpun+0x1c>
 80030f6:	46c0      	nop			; (mov r8, r8)
 80030f8:	000007ff 	.word	0x000007ff

080030fc <__aeabi_d2iz>:
 80030fc:	000a      	movs	r2, r1
 80030fe:	b530      	push	{r4, r5, lr}
 8003100:	4c13      	ldr	r4, [pc, #76]	; (8003150 <__aeabi_d2iz+0x54>)
 8003102:	0053      	lsls	r3, r2, #1
 8003104:	0309      	lsls	r1, r1, #12
 8003106:	0005      	movs	r5, r0
 8003108:	0b09      	lsrs	r1, r1, #12
 800310a:	2000      	movs	r0, #0
 800310c:	0d5b      	lsrs	r3, r3, #21
 800310e:	0fd2      	lsrs	r2, r2, #31
 8003110:	42a3      	cmp	r3, r4
 8003112:	dd04      	ble.n	800311e <__aeabi_d2iz+0x22>
 8003114:	480f      	ldr	r0, [pc, #60]	; (8003154 <__aeabi_d2iz+0x58>)
 8003116:	4283      	cmp	r3, r0
 8003118:	dd02      	ble.n	8003120 <__aeabi_d2iz+0x24>
 800311a:	4b0f      	ldr	r3, [pc, #60]	; (8003158 <__aeabi_d2iz+0x5c>)
 800311c:	18d0      	adds	r0, r2, r3
 800311e:	bd30      	pop	{r4, r5, pc}
 8003120:	2080      	movs	r0, #128	; 0x80
 8003122:	0340      	lsls	r0, r0, #13
 8003124:	4301      	orrs	r1, r0
 8003126:	480d      	ldr	r0, [pc, #52]	; (800315c <__aeabi_d2iz+0x60>)
 8003128:	1ac0      	subs	r0, r0, r3
 800312a:	281f      	cmp	r0, #31
 800312c:	dd08      	ble.n	8003140 <__aeabi_d2iz+0x44>
 800312e:	480c      	ldr	r0, [pc, #48]	; (8003160 <__aeabi_d2iz+0x64>)
 8003130:	1ac3      	subs	r3, r0, r3
 8003132:	40d9      	lsrs	r1, r3
 8003134:	000b      	movs	r3, r1
 8003136:	4258      	negs	r0, r3
 8003138:	2a00      	cmp	r2, #0
 800313a:	d1f0      	bne.n	800311e <__aeabi_d2iz+0x22>
 800313c:	0018      	movs	r0, r3
 800313e:	e7ee      	b.n	800311e <__aeabi_d2iz+0x22>
 8003140:	4c08      	ldr	r4, [pc, #32]	; (8003164 <__aeabi_d2iz+0x68>)
 8003142:	40c5      	lsrs	r5, r0
 8003144:	46a4      	mov	ip, r4
 8003146:	4463      	add	r3, ip
 8003148:	4099      	lsls	r1, r3
 800314a:	000b      	movs	r3, r1
 800314c:	432b      	orrs	r3, r5
 800314e:	e7f2      	b.n	8003136 <__aeabi_d2iz+0x3a>
 8003150:	000003fe 	.word	0x000003fe
 8003154:	0000041d 	.word	0x0000041d
 8003158:	7fffffff 	.word	0x7fffffff
 800315c:	00000433 	.word	0x00000433
 8003160:	00000413 	.word	0x00000413
 8003164:	fffffbed 	.word	0xfffffbed

08003168 <__aeabi_i2d>:
 8003168:	b570      	push	{r4, r5, r6, lr}
 800316a:	2800      	cmp	r0, #0
 800316c:	d016      	beq.n	800319c <__aeabi_i2d+0x34>
 800316e:	17c3      	asrs	r3, r0, #31
 8003170:	18c5      	adds	r5, r0, r3
 8003172:	405d      	eors	r5, r3
 8003174:	0fc4      	lsrs	r4, r0, #31
 8003176:	0028      	movs	r0, r5
 8003178:	f000 f8d2 	bl	8003320 <__clzsi2>
 800317c:	4b11      	ldr	r3, [pc, #68]	; (80031c4 <__aeabi_i2d+0x5c>)
 800317e:	1a1b      	subs	r3, r3, r0
 8003180:	280a      	cmp	r0, #10
 8003182:	dc16      	bgt.n	80031b2 <__aeabi_i2d+0x4a>
 8003184:	0002      	movs	r2, r0
 8003186:	002e      	movs	r6, r5
 8003188:	3215      	adds	r2, #21
 800318a:	4096      	lsls	r6, r2
 800318c:	220b      	movs	r2, #11
 800318e:	1a12      	subs	r2, r2, r0
 8003190:	40d5      	lsrs	r5, r2
 8003192:	055b      	lsls	r3, r3, #21
 8003194:	032d      	lsls	r5, r5, #12
 8003196:	0b2d      	lsrs	r5, r5, #12
 8003198:	0d5b      	lsrs	r3, r3, #21
 800319a:	e003      	b.n	80031a4 <__aeabi_i2d+0x3c>
 800319c:	2400      	movs	r4, #0
 800319e:	2300      	movs	r3, #0
 80031a0:	2500      	movs	r5, #0
 80031a2:	2600      	movs	r6, #0
 80031a4:	051b      	lsls	r3, r3, #20
 80031a6:	432b      	orrs	r3, r5
 80031a8:	07e4      	lsls	r4, r4, #31
 80031aa:	4323      	orrs	r3, r4
 80031ac:	0030      	movs	r0, r6
 80031ae:	0019      	movs	r1, r3
 80031b0:	bd70      	pop	{r4, r5, r6, pc}
 80031b2:	380b      	subs	r0, #11
 80031b4:	4085      	lsls	r5, r0
 80031b6:	055b      	lsls	r3, r3, #21
 80031b8:	032d      	lsls	r5, r5, #12
 80031ba:	2600      	movs	r6, #0
 80031bc:	0b2d      	lsrs	r5, r5, #12
 80031be:	0d5b      	lsrs	r3, r3, #21
 80031c0:	e7f0      	b.n	80031a4 <__aeabi_i2d+0x3c>
 80031c2:	46c0      	nop			; (mov r8, r8)
 80031c4:	0000041e 	.word	0x0000041e

080031c8 <__aeabi_ui2d>:
 80031c8:	b510      	push	{r4, lr}
 80031ca:	1e04      	subs	r4, r0, #0
 80031cc:	d010      	beq.n	80031f0 <__aeabi_ui2d+0x28>
 80031ce:	f000 f8a7 	bl	8003320 <__clzsi2>
 80031d2:	4b0f      	ldr	r3, [pc, #60]	; (8003210 <__aeabi_ui2d+0x48>)
 80031d4:	1a1b      	subs	r3, r3, r0
 80031d6:	280a      	cmp	r0, #10
 80031d8:	dc11      	bgt.n	80031fe <__aeabi_ui2d+0x36>
 80031da:	220b      	movs	r2, #11
 80031dc:	0021      	movs	r1, r4
 80031de:	1a12      	subs	r2, r2, r0
 80031e0:	40d1      	lsrs	r1, r2
 80031e2:	3015      	adds	r0, #21
 80031e4:	030a      	lsls	r2, r1, #12
 80031e6:	055b      	lsls	r3, r3, #21
 80031e8:	4084      	lsls	r4, r0
 80031ea:	0b12      	lsrs	r2, r2, #12
 80031ec:	0d5b      	lsrs	r3, r3, #21
 80031ee:	e001      	b.n	80031f4 <__aeabi_ui2d+0x2c>
 80031f0:	2300      	movs	r3, #0
 80031f2:	2200      	movs	r2, #0
 80031f4:	051b      	lsls	r3, r3, #20
 80031f6:	4313      	orrs	r3, r2
 80031f8:	0020      	movs	r0, r4
 80031fa:	0019      	movs	r1, r3
 80031fc:	bd10      	pop	{r4, pc}
 80031fe:	0022      	movs	r2, r4
 8003200:	380b      	subs	r0, #11
 8003202:	4082      	lsls	r2, r0
 8003204:	055b      	lsls	r3, r3, #21
 8003206:	0312      	lsls	r2, r2, #12
 8003208:	2400      	movs	r4, #0
 800320a:	0b12      	lsrs	r2, r2, #12
 800320c:	0d5b      	lsrs	r3, r3, #21
 800320e:	e7f1      	b.n	80031f4 <__aeabi_ui2d+0x2c>
 8003210:	0000041e 	.word	0x0000041e

08003214 <__aeabi_d2f>:
 8003214:	0002      	movs	r2, r0
 8003216:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003218:	004b      	lsls	r3, r1, #1
 800321a:	030d      	lsls	r5, r1, #12
 800321c:	0f40      	lsrs	r0, r0, #29
 800321e:	0d5b      	lsrs	r3, r3, #21
 8003220:	0fcc      	lsrs	r4, r1, #31
 8003222:	0a6d      	lsrs	r5, r5, #9
 8003224:	493a      	ldr	r1, [pc, #232]	; (8003310 <__aeabi_d2f+0xfc>)
 8003226:	4305      	orrs	r5, r0
 8003228:	1c58      	adds	r0, r3, #1
 800322a:	00d7      	lsls	r7, r2, #3
 800322c:	4208      	tst	r0, r1
 800322e:	d00a      	beq.n	8003246 <__aeabi_d2f+0x32>
 8003230:	4938      	ldr	r1, [pc, #224]	; (8003314 <__aeabi_d2f+0x100>)
 8003232:	1859      	adds	r1, r3, r1
 8003234:	29fe      	cmp	r1, #254	; 0xfe
 8003236:	dd16      	ble.n	8003266 <__aeabi_d2f+0x52>
 8003238:	20ff      	movs	r0, #255	; 0xff
 800323a:	2200      	movs	r2, #0
 800323c:	05c0      	lsls	r0, r0, #23
 800323e:	4310      	orrs	r0, r2
 8003240:	07e4      	lsls	r4, r4, #31
 8003242:	4320      	orrs	r0, r4
 8003244:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003246:	2b00      	cmp	r3, #0
 8003248:	d106      	bne.n	8003258 <__aeabi_d2f+0x44>
 800324a:	433d      	orrs	r5, r7
 800324c:	d026      	beq.n	800329c <__aeabi_d2f+0x88>
 800324e:	2205      	movs	r2, #5
 8003250:	0192      	lsls	r2, r2, #6
 8003252:	0a52      	lsrs	r2, r2, #9
 8003254:	b2d8      	uxtb	r0, r3
 8003256:	e7f1      	b.n	800323c <__aeabi_d2f+0x28>
 8003258:	432f      	orrs	r7, r5
 800325a:	d0ed      	beq.n	8003238 <__aeabi_d2f+0x24>
 800325c:	2280      	movs	r2, #128	; 0x80
 800325e:	03d2      	lsls	r2, r2, #15
 8003260:	20ff      	movs	r0, #255	; 0xff
 8003262:	432a      	orrs	r2, r5
 8003264:	e7ea      	b.n	800323c <__aeabi_d2f+0x28>
 8003266:	2900      	cmp	r1, #0
 8003268:	dd1b      	ble.n	80032a2 <__aeabi_d2f+0x8e>
 800326a:	0192      	lsls	r2, r2, #6
 800326c:	1e50      	subs	r0, r2, #1
 800326e:	4182      	sbcs	r2, r0
 8003270:	00ed      	lsls	r5, r5, #3
 8003272:	0f7f      	lsrs	r7, r7, #29
 8003274:	432a      	orrs	r2, r5
 8003276:	433a      	orrs	r2, r7
 8003278:	0753      	lsls	r3, r2, #29
 800327a:	d047      	beq.n	800330c <__aeabi_d2f+0xf8>
 800327c:	230f      	movs	r3, #15
 800327e:	4013      	ands	r3, r2
 8003280:	2b04      	cmp	r3, #4
 8003282:	d000      	beq.n	8003286 <__aeabi_d2f+0x72>
 8003284:	3204      	adds	r2, #4
 8003286:	2380      	movs	r3, #128	; 0x80
 8003288:	04db      	lsls	r3, r3, #19
 800328a:	4013      	ands	r3, r2
 800328c:	d03e      	beq.n	800330c <__aeabi_d2f+0xf8>
 800328e:	1c48      	adds	r0, r1, #1
 8003290:	29fe      	cmp	r1, #254	; 0xfe
 8003292:	d0d1      	beq.n	8003238 <__aeabi_d2f+0x24>
 8003294:	0192      	lsls	r2, r2, #6
 8003296:	0a52      	lsrs	r2, r2, #9
 8003298:	b2c0      	uxtb	r0, r0
 800329a:	e7cf      	b.n	800323c <__aeabi_d2f+0x28>
 800329c:	2000      	movs	r0, #0
 800329e:	2200      	movs	r2, #0
 80032a0:	e7cc      	b.n	800323c <__aeabi_d2f+0x28>
 80032a2:	000a      	movs	r2, r1
 80032a4:	3217      	adds	r2, #23
 80032a6:	db2f      	blt.n	8003308 <__aeabi_d2f+0xf4>
 80032a8:	2680      	movs	r6, #128	; 0x80
 80032aa:	0436      	lsls	r6, r6, #16
 80032ac:	432e      	orrs	r6, r5
 80032ae:	251e      	movs	r5, #30
 80032b0:	1a6d      	subs	r5, r5, r1
 80032b2:	2d1f      	cmp	r5, #31
 80032b4:	dd11      	ble.n	80032da <__aeabi_d2f+0xc6>
 80032b6:	2202      	movs	r2, #2
 80032b8:	4252      	negs	r2, r2
 80032ba:	1a52      	subs	r2, r2, r1
 80032bc:	0031      	movs	r1, r6
 80032be:	40d1      	lsrs	r1, r2
 80032c0:	2d20      	cmp	r5, #32
 80032c2:	d004      	beq.n	80032ce <__aeabi_d2f+0xba>
 80032c4:	4a14      	ldr	r2, [pc, #80]	; (8003318 <__aeabi_d2f+0x104>)
 80032c6:	4694      	mov	ip, r2
 80032c8:	4463      	add	r3, ip
 80032ca:	409e      	lsls	r6, r3
 80032cc:	4337      	orrs	r7, r6
 80032ce:	003a      	movs	r2, r7
 80032d0:	1e53      	subs	r3, r2, #1
 80032d2:	419a      	sbcs	r2, r3
 80032d4:	430a      	orrs	r2, r1
 80032d6:	2100      	movs	r1, #0
 80032d8:	e7ce      	b.n	8003278 <__aeabi_d2f+0x64>
 80032da:	4a10      	ldr	r2, [pc, #64]	; (800331c <__aeabi_d2f+0x108>)
 80032dc:	0038      	movs	r0, r7
 80032de:	4694      	mov	ip, r2
 80032e0:	4463      	add	r3, ip
 80032e2:	4098      	lsls	r0, r3
 80032e4:	003a      	movs	r2, r7
 80032e6:	1e41      	subs	r1, r0, #1
 80032e8:	4188      	sbcs	r0, r1
 80032ea:	409e      	lsls	r6, r3
 80032ec:	40ea      	lsrs	r2, r5
 80032ee:	4330      	orrs	r0, r6
 80032f0:	4302      	orrs	r2, r0
 80032f2:	2100      	movs	r1, #0
 80032f4:	0753      	lsls	r3, r2, #29
 80032f6:	d1c1      	bne.n	800327c <__aeabi_d2f+0x68>
 80032f8:	2180      	movs	r1, #128	; 0x80
 80032fa:	0013      	movs	r3, r2
 80032fc:	04c9      	lsls	r1, r1, #19
 80032fe:	2001      	movs	r0, #1
 8003300:	400b      	ands	r3, r1
 8003302:	420a      	tst	r2, r1
 8003304:	d1c6      	bne.n	8003294 <__aeabi_d2f+0x80>
 8003306:	e7a3      	b.n	8003250 <__aeabi_d2f+0x3c>
 8003308:	2300      	movs	r3, #0
 800330a:	e7a0      	b.n	800324e <__aeabi_d2f+0x3a>
 800330c:	000b      	movs	r3, r1
 800330e:	e79f      	b.n	8003250 <__aeabi_d2f+0x3c>
 8003310:	000007fe 	.word	0x000007fe
 8003314:	fffffc80 	.word	0xfffffc80
 8003318:	fffffca2 	.word	0xfffffca2
 800331c:	fffffc82 	.word	0xfffffc82

08003320 <__clzsi2>:
 8003320:	211c      	movs	r1, #28
 8003322:	2301      	movs	r3, #1
 8003324:	041b      	lsls	r3, r3, #16
 8003326:	4298      	cmp	r0, r3
 8003328:	d301      	bcc.n	800332e <__clzsi2+0xe>
 800332a:	0c00      	lsrs	r0, r0, #16
 800332c:	3910      	subs	r1, #16
 800332e:	0a1b      	lsrs	r3, r3, #8
 8003330:	4298      	cmp	r0, r3
 8003332:	d301      	bcc.n	8003338 <__clzsi2+0x18>
 8003334:	0a00      	lsrs	r0, r0, #8
 8003336:	3908      	subs	r1, #8
 8003338:	091b      	lsrs	r3, r3, #4
 800333a:	4298      	cmp	r0, r3
 800333c:	d301      	bcc.n	8003342 <__clzsi2+0x22>
 800333e:	0900      	lsrs	r0, r0, #4
 8003340:	3904      	subs	r1, #4
 8003342:	a202      	add	r2, pc, #8	; (adr r2, 800334c <__clzsi2+0x2c>)
 8003344:	5c10      	ldrb	r0, [r2, r0]
 8003346:	1840      	adds	r0, r0, r1
 8003348:	4770      	bx	lr
 800334a:	46c0      	nop			; (mov r8, r8)
 800334c:	02020304 	.word	0x02020304
 8003350:	01010101 	.word	0x01010101
	...

0800335c <__clzdi2>:
 800335c:	b510      	push	{r4, lr}
 800335e:	2900      	cmp	r1, #0
 8003360:	d103      	bne.n	800336a <__clzdi2+0xe>
 8003362:	f7ff ffdd 	bl	8003320 <__clzsi2>
 8003366:	3020      	adds	r0, #32
 8003368:	e002      	b.n	8003370 <__clzdi2+0x14>
 800336a:	0008      	movs	r0, r1
 800336c:	f7ff ffd8 	bl	8003320 <__clzsi2>
 8003370:	bd10      	pop	{r4, pc}
 8003372:	46c0      	nop			; (mov r8, r8)

08003374 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8003374:	b580      	push	{r7, lr}
 8003376:	af00      	add	r7, sp, #0
     /* MCU
      * Configuration--------------------------------------------------------*/

     /* Reset of all peripherals, Initializes the Flash interface and the
      * Systick. */
     HAL_Init();
 8003378:	f000 ff86 	bl	8004288 <HAL_Init>
     /* USER CODE BEGIN Init */

     /* USER CODE END Init */

     /* Configure the system clock */
     SystemClock_Config();
 800337c:	f000 f820 	bl	80033c0 <SystemClock_Config>
     /* USER CODE BEGIN SysInit */

     /* USER CODE END SysInit */

     /* Initialize all configured peripherals */
     MX_GPIO_Init();
 8003380:	f000 f8bc 	bl	80034fc <MX_GPIO_Init>
     MX_ADC_Init();
 8003384:	f000 f870 	bl	8003468 <MX_ADC_Init>
     /* USER CODE BEGIN 2 */
     start_time_ms = HAL_GetTick();
 8003388:	f000 ffe4 	bl	8004354 <HAL_GetTick>
 800338c:	0002      	movs	r2, r0
 800338e:	4b0b      	ldr	r3, [pc, #44]	; (80033bc <main+0x48>)
 8003390:	601a      	str	r2, [r3, #0]
     HAL_Delay(15);
 8003392:	200f      	movs	r0, #15
 8003394:	f000 ffe8 	bl	8004368 <HAL_Delay>
     setNumber();
 8003398:	f000 face 	bl	8003938 <setNumber>
     /* USER CODE END 2 */

     /* Infinite loop */
     /* USER CODE BEGIN WHILE */
     while (1) {
    	  Button_Debounce_Set();
 800339c:	f000 fcfa 	bl	8003d94 <Button_Debounce_Set>
          setNumber();
 80033a0:	f000 faca 	bl	8003938 <setNumber>
          HAL_Delay(25);
 80033a4:	2019      	movs	r0, #25
 80033a6:	f000 ffdf 	bl	8004368 <HAL_Delay>
          Measurement_of_ADC_Voltage_18650();
 80033aa:	f000 f92d 	bl	8003608 <Measurement_of_ADC_Voltage_18650>
          Measurement_of_ADC_Voltage_CMOS();
 80033ae:	f000 f96d 	bl	800368c <Measurement_of_ADC_Voltage_CMOS>
          Measurement_of_ADC_Current_CMOS();
 80033b2:	f000 f9ef 	bl	8003794 <Measurement_of_ADC_Current_CMOS>
          Measurement_of_ADC_Current_18650();
 80033b6:	f000 f9ab 	bl	8003710 <Measurement_of_ADC_Current_18650>
    	  Button_Debounce_Set();
 80033ba:	e7ef      	b.n	800339c <main+0x28>
 80033bc:	2000025c 	.word	0x2000025c

080033c0 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80033c0:	b590      	push	{r4, r7, lr}
 80033c2:	b093      	sub	sp, #76	; 0x4c
 80033c4:	af00      	add	r7, sp, #0
     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80033c6:	2414      	movs	r4, #20
 80033c8:	193b      	adds	r3, r7, r4
 80033ca:	0018      	movs	r0, r3
 80033cc:	2334      	movs	r3, #52	; 0x34
 80033ce:	001a      	movs	r2, r3
 80033d0:	2100      	movs	r1, #0
 80033d2:	f003 fbcd 	bl	8006b70 <memset>
     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80033d6:	003b      	movs	r3, r7
 80033d8:	0018      	movs	r0, r3
 80033da:	2314      	movs	r3, #20
 80033dc:	001a      	movs	r2, r3
 80033de:	2100      	movs	r1, #0
 80033e0:	f003 fbc6 	bl	8006b70 <memset>

     /** Configure the main internal regulator output voltage
      */
     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80033e4:	4b1e      	ldr	r3, [pc, #120]	; (8003460 <SystemClock_Config+0xa0>)
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	4a1e      	ldr	r2, [pc, #120]	; (8003464 <SystemClock_Config+0xa4>)
 80033ea:	401a      	ands	r2, r3
 80033ec:	4b1c      	ldr	r3, [pc, #112]	; (8003460 <SystemClock_Config+0xa0>)
 80033ee:	2180      	movs	r1, #128	; 0x80
 80033f0:	0109      	lsls	r1, r1, #4
 80033f2:	430a      	orrs	r2, r1
 80033f4:	601a      	str	r2, [r3, #0]

     /** Initializes the RCC Oscillators according to the specified parameters
      * in the RCC_OscInitTypeDef structure.
      */
     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80033f6:	0021      	movs	r1, r4
 80033f8:	187b      	adds	r3, r7, r1
 80033fa:	2210      	movs	r2, #16
 80033fc:	601a      	str	r2, [r3, #0]
     RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80033fe:	187b      	adds	r3, r7, r1
 8003400:	2201      	movs	r2, #1
 8003402:	619a      	str	r2, [r3, #24]
     RCC_OscInitStruct.MSICalibrationValue = 0;
 8003404:	187b      	adds	r3, r7, r1
 8003406:	2200      	movs	r2, #0
 8003408:	61da      	str	r2, [r3, #28]
     RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 800340a:	187b      	adds	r3, r7, r1
 800340c:	22a0      	movs	r2, #160	; 0xa0
 800340e:	0212      	lsls	r2, r2, #8
 8003410:	621a      	str	r2, [r3, #32]
     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8003412:	187b      	adds	r3, r7, r1
 8003414:	2200      	movs	r2, #0
 8003416:	625a      	str	r2, [r3, #36]	; 0x24
     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8003418:	187b      	adds	r3, r7, r1
 800341a:	0018      	movs	r0, r3
 800341c:	f001 fe88 	bl	8005130 <HAL_RCC_OscConfig>
 8003420:	1e03      	subs	r3, r0, #0
 8003422:	d001      	beq.n	8003428 <SystemClock_Config+0x68>
          Error_Handler();
 8003424:	f000 fdbc 	bl	8003fa0 <Error_Handler>
     }

     /** Initializes the CPU, AHB and APB buses clocks
      */
     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 8003428:	003b      	movs	r3, r7
 800342a:	220f      	movs	r2, #15
 800342c:	601a      	str	r2, [r3, #0]
                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 800342e:	003b      	movs	r3, r7
 8003430:	2200      	movs	r2, #0
 8003432:	605a      	str	r2, [r3, #4]
     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003434:	003b      	movs	r3, r7
 8003436:	2200      	movs	r2, #0
 8003438:	609a      	str	r2, [r3, #8]
     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800343a:	003b      	movs	r3, r7
 800343c:	2200      	movs	r2, #0
 800343e:	60da      	str	r2, [r3, #12]
     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003440:	003b      	movs	r3, r7
 8003442:	2200      	movs	r2, #0
 8003444:	611a      	str	r2, [r3, #16]

     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 8003446:	003b      	movs	r3, r7
 8003448:	2100      	movs	r1, #0
 800344a:	0018      	movs	r0, r3
 800344c:	f002 f9ec 	bl	8005828 <HAL_RCC_ClockConfig>
 8003450:	1e03      	subs	r3, r0, #0
 8003452:	d001      	beq.n	8003458 <SystemClock_Config+0x98>
          Error_Handler();
 8003454:	f000 fda4 	bl	8003fa0 <Error_Handler>
     }
}
 8003458:	46c0      	nop			; (mov r8, r8)
 800345a:	46bd      	mov	sp, r7
 800345c:	b013      	add	sp, #76	; 0x4c
 800345e:	bd90      	pop	{r4, r7, pc}
 8003460:	40007000 	.word	0x40007000
 8003464:	ffffe7ff 	.word	0xffffe7ff

08003468 <MX_ADC_Init>:
/**
 * @brief ADC Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC_Init(void) {
 8003468:	b580      	push	{r7, lr}
 800346a:	af00      	add	r7, sp, #0
     /* USER CODE END ADC_Init 1 */

     /** Configure the global features of the ADC (Clock, Resolution, Data
      * Alignment and number of conversion)
      */
     hadc.Instance = ADC1;
 800346c:	4b21      	ldr	r3, [pc, #132]	; (80034f4 <MX_ADC_Init+0x8c>)
 800346e:	4a22      	ldr	r2, [pc, #136]	; (80034f8 <MX_ADC_Init+0x90>)
 8003470:	601a      	str	r2, [r3, #0]
     hadc.Init.OversamplingMode = DISABLE;
 8003472:	4b20      	ldr	r3, [pc, #128]	; (80034f4 <MX_ADC_Init+0x8c>)
 8003474:	2200      	movs	r2, #0
 8003476:	63da      	str	r2, [r3, #60]	; 0x3c
     hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8003478:	4b1e      	ldr	r3, [pc, #120]	; (80034f4 <MX_ADC_Init+0x8c>)
 800347a:	2280      	movs	r2, #128	; 0x80
 800347c:	0612      	lsls	r2, r2, #24
 800347e:	605a      	str	r2, [r3, #4]
     hadc.Init.Resolution = ADC_RESOLUTION_12B;
 8003480:	4b1c      	ldr	r3, [pc, #112]	; (80034f4 <MX_ADC_Init+0x8c>)
 8003482:	2200      	movs	r2, #0
 8003484:	609a      	str	r2, [r3, #8]
     hadc.Init.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8003486:	4b1b      	ldr	r3, [pc, #108]	; (80034f4 <MX_ADC_Init+0x8c>)
 8003488:	2200      	movs	r2, #0
 800348a:	639a      	str	r2, [r3, #56]	; 0x38
     hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 800348c:	4b19      	ldr	r3, [pc, #100]	; (80034f4 <MX_ADC_Init+0x8c>)
 800348e:	2201      	movs	r2, #1
 8003490:	611a      	str	r2, [r3, #16]
     hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8003492:	4b18      	ldr	r3, [pc, #96]	; (80034f4 <MX_ADC_Init+0x8c>)
 8003494:	2200      	movs	r2, #0
 8003496:	60da      	str	r2, [r3, #12]
     hadc.Init.ContinuousConvMode = DISABLE;
 8003498:	4b16      	ldr	r3, [pc, #88]	; (80034f4 <MX_ADC_Init+0x8c>)
 800349a:	2220      	movs	r2, #32
 800349c:	2100      	movs	r1, #0
 800349e:	5499      	strb	r1, [r3, r2]
     hadc.Init.DiscontinuousConvMode = DISABLE;
 80034a0:	4b14      	ldr	r3, [pc, #80]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034a2:	2221      	movs	r2, #33	; 0x21
 80034a4:	2100      	movs	r1, #0
 80034a6:	5499      	strb	r1, [r3, r2]
     hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80034a8:	4b12      	ldr	r3, [pc, #72]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034aa:	2200      	movs	r2, #0
 80034ac:	629a      	str	r2, [r3, #40]	; 0x28
     hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80034ae:	4b11      	ldr	r3, [pc, #68]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034b0:	22c2      	movs	r2, #194	; 0xc2
 80034b2:	32ff      	adds	r2, #255	; 0xff
 80034b4:	625a      	str	r2, [r3, #36]	; 0x24
     hadc.Init.DMAContinuousRequests = DISABLE;
 80034b6:	4b0f      	ldr	r3, [pc, #60]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034b8:	222c      	movs	r2, #44	; 0x2c
 80034ba:	2100      	movs	r1, #0
 80034bc:	5499      	strb	r1, [r3, r2]
     hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80034be:	4b0d      	ldr	r3, [pc, #52]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034c0:	2204      	movs	r2, #4
 80034c2:	615a      	str	r2, [r3, #20]
     hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80034c4:	4b0b      	ldr	r3, [pc, #44]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034c6:	2200      	movs	r2, #0
 80034c8:	631a      	str	r2, [r3, #48]	; 0x30
     hadc.Init.LowPowerAutoWait = DISABLE;
 80034ca:	4b0a      	ldr	r3, [pc, #40]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034cc:	2200      	movs	r2, #0
 80034ce:	619a      	str	r2, [r3, #24]
     hadc.Init.LowPowerFrequencyMode = ENABLE;
 80034d0:	4b08      	ldr	r3, [pc, #32]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034d2:	2201      	movs	r2, #1
 80034d4:	635a      	str	r2, [r3, #52]	; 0x34
     hadc.Init.LowPowerAutoPowerOff = DISABLE;
 80034d6:	4b07      	ldr	r3, [pc, #28]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034d8:	2200      	movs	r2, #0
 80034da:	61da      	str	r2, [r3, #28]
     if (HAL_ADC_Init(&hadc) != HAL_OK) {
 80034dc:	4b05      	ldr	r3, [pc, #20]	; (80034f4 <MX_ADC_Init+0x8c>)
 80034de:	0018      	movs	r0, r3
 80034e0:	f000 ff66 	bl	80043b0 <HAL_ADC_Init>
 80034e4:	1e03      	subs	r3, r0, #0
 80034e6:	d001      	beq.n	80034ec <MX_ADC_Init+0x84>
          Error_Handler();
 80034e8:	f000 fd5a 	bl	8003fa0 <Error_Handler>
          Error_Handler();
     }
      USER CODE BEGIN ADC_Init 2

      USER CODE END ADC_Init 2 */
}
 80034ec:	46c0      	nop			; (mov r8, r8)
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}
 80034f2:	46c0      	nop			; (mov r8, r8)
 80034f4:	200001f0 	.word	0x200001f0
 80034f8:	40012400 	.word	0x40012400

080034fc <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 80034fc:	b590      	push	{r4, r7, lr}
 80034fe:	b089      	sub	sp, #36	; 0x24
 8003500:	af00      	add	r7, sp, #0
     GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003502:	240c      	movs	r4, #12
 8003504:	193b      	adds	r3, r7, r4
 8003506:	0018      	movs	r0, r3
 8003508:	2314      	movs	r3, #20
 800350a:	001a      	movs	r2, r3
 800350c:	2100      	movs	r1, #0
 800350e:	f003 fb2f 	bl	8006b70 <memset>
     /* USER CODE BEGIN MX_GPIO_Init_1 */
     /* USER CODE END MX_GPIO_Init_1 */

     /* GPIO Ports Clock Enable */
     __HAL_RCC_GPIOC_CLK_ENABLE();
 8003512:	4b35      	ldr	r3, [pc, #212]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003514:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003516:	4b34      	ldr	r3, [pc, #208]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003518:	2104      	movs	r1, #4
 800351a:	430a      	orrs	r2, r1
 800351c:	62da      	str	r2, [r3, #44]	; 0x2c
 800351e:	4b32      	ldr	r3, [pc, #200]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003522:	2204      	movs	r2, #4
 8003524:	4013      	ands	r3, r2
 8003526:	60bb      	str	r3, [r7, #8]
 8003528:	68bb      	ldr	r3, [r7, #8]
     __HAL_RCC_GPIOA_CLK_ENABLE();
 800352a:	4b2f      	ldr	r3, [pc, #188]	; (80035e8 <MX_GPIO_Init+0xec>)
 800352c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800352e:	4b2e      	ldr	r3, [pc, #184]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003530:	2101      	movs	r1, #1
 8003532:	430a      	orrs	r2, r1
 8003534:	62da      	str	r2, [r3, #44]	; 0x2c
 8003536:	4b2c      	ldr	r3, [pc, #176]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003538:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800353a:	2201      	movs	r2, #1
 800353c:	4013      	ands	r3, r2
 800353e:	607b      	str	r3, [r7, #4]
 8003540:	687b      	ldr	r3, [r7, #4]
     __HAL_RCC_GPIOB_CLK_ENABLE();
 8003542:	4b29      	ldr	r3, [pc, #164]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003544:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003546:	4b28      	ldr	r3, [pc, #160]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003548:	2102      	movs	r1, #2
 800354a:	430a      	orrs	r2, r1
 800354c:	62da      	str	r2, [r3, #44]	; 0x2c
 800354e:	4b26      	ldr	r3, [pc, #152]	; (80035e8 <MX_GPIO_Init+0xec>)
 8003550:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003552:	2202      	movs	r2, #2
 8003554:	4013      	ands	r3, r2
 8003556:	603b      	str	r3, [r7, #0]
 8003558:	683b      	ldr	r3, [r7, #0]

     /*Configure GPIO pin Output Level */
     HAL_GPIO_WritePin(
 800355a:	23a0      	movs	r3, #160	; 0xa0
 800355c:	05db      	lsls	r3, r3, #23
 800355e:	2200      	movs	r2, #0
 8003560:	2113      	movs	r1, #19
 8003562:	0018      	movs	r0, r3
 8003564:	f001 fdc7 	bl	80050f6 <HAL_GPIO_WritePin>
         GPIOA, Discrete_Bit_0_Pin | Discrete_Bit_1_Pin | Discrete_Bit_2_Pin,
         GPIO_PIN_RESET);

     /*Configure GPIO pin Output Level */
     HAL_GPIO_WritePin(GPIOB,
 8003568:	4b20      	ldr	r3, [pc, #128]	; (80035ec <MX_GPIO_Init+0xf0>)
 800356a:	2200      	movs	r2, #0
 800356c:	2107      	movs	r1, #7
 800356e:	0018      	movs	r0, r3
 8003570:	f001 fdc1 	bl	80050f6 <HAL_GPIO_WritePin>
                           User_Input_Status_Light_Green_Pin |
                           User_Input_Status_Light_Blue_Pin,
                       GPIO_PIN_RESET);

     /*Configure GPIO pins : Minus_Pin Plus_Pin */
     GPIO_InitStruct.Pin = Minus_Pin | Plus_Pin;
 8003574:	193b      	adds	r3, r7, r4
 8003576:	2203      	movs	r2, #3
 8003578:	601a      	str	r2, [r3, #0]
     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800357a:	193b      	adds	r3, r7, r4
 800357c:	2200      	movs	r2, #0
 800357e:	605a      	str	r2, [r3, #4]
     GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003580:	193b      	adds	r3, r7, r4
 8003582:	2200      	movs	r2, #0
 8003584:	609a      	str	r2, [r3, #8]
     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003586:	193b      	adds	r3, r7, r4
 8003588:	4a19      	ldr	r2, [pc, #100]	; (80035f0 <MX_GPIO_Init+0xf4>)
 800358a:	0019      	movs	r1, r3
 800358c:	0010      	movs	r0, r2
 800358e:	f001 fc17 	bl	8004dc0 <HAL_GPIO_Init>

     /*Configure GPIO pins : Discrete_Bit_0_Pin Discrete_Bit_1_Pin
      * Discrete_Bit_2_Pin */
     GPIO_InitStruct.Pin =
 8003592:	193b      	adds	r3, r7, r4
 8003594:	2213      	movs	r2, #19
 8003596:	601a      	str	r2, [r3, #0]
         Discrete_Bit_0_Pin | Discrete_Bit_1_Pin | Discrete_Bit_2_Pin;
     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003598:	193b      	adds	r3, r7, r4
 800359a:	2201      	movs	r2, #1
 800359c:	605a      	str	r2, [r3, #4]
     GPIO_InitStruct.Pull = GPIO_NOPULL;
 800359e:	193b      	adds	r3, r7, r4
 80035a0:	2200      	movs	r2, #0
 80035a2:	609a      	str	r2, [r3, #8]
     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80035a4:	193b      	adds	r3, r7, r4
 80035a6:	2200      	movs	r2, #0
 80035a8:	60da      	str	r2, [r3, #12]
     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80035aa:	193a      	adds	r2, r7, r4
 80035ac:	23a0      	movs	r3, #160	; 0xa0
 80035ae:	05db      	lsls	r3, r3, #23
 80035b0:	0011      	movs	r1, r2
 80035b2:	0018      	movs	r0, r3
 80035b4:	f001 fc04 	bl	8004dc0 <HAL_GPIO_Init>

     /*Configure GPIO pins : User_Input_Status_Light_Pin
      * User_Input_Status_Light_Green_Pin User_Input_Status_Light_Blue_Pin */
     GPIO_InitStruct.Pin = User_Input_Status_Light_Pin |
 80035b8:	0021      	movs	r1, r4
 80035ba:	187b      	adds	r3, r7, r1
 80035bc:	2207      	movs	r2, #7
 80035be:	601a      	str	r2, [r3, #0]
                           User_Input_Status_Light_Green_Pin |
                           User_Input_Status_Light_Blue_Pin;
     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80035c0:	187b      	adds	r3, r7, r1
 80035c2:	2201      	movs	r2, #1
 80035c4:	605a      	str	r2, [r3, #4]
     GPIO_InitStruct.Pull = GPIO_NOPULL;
 80035c6:	187b      	adds	r3, r7, r1
 80035c8:	2200      	movs	r2, #0
 80035ca:	609a      	str	r2, [r3, #8]
     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80035cc:	187b      	adds	r3, r7, r1
 80035ce:	2200      	movs	r2, #0
 80035d0:	60da      	str	r2, [r3, #12]
     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80035d2:	187b      	adds	r3, r7, r1
 80035d4:	4a05      	ldr	r2, [pc, #20]	; (80035ec <MX_GPIO_Init+0xf0>)
 80035d6:	0019      	movs	r1, r3
 80035d8:	0010      	movs	r0, r2
 80035da:	f001 fbf1 	bl	8004dc0 <HAL_GPIO_Init>

     /* USER CODE BEGIN MX_GPIO_Init_2 */
     /* USER CODE END MX_GPIO_Init_2 */
}
 80035de:	46c0      	nop			; (mov r8, r8)
 80035e0:	46bd      	mov	sp, r7
 80035e2:	b009      	add	sp, #36	; 0x24
 80035e4:	bd90      	pop	{r4, r7, pc}
 80035e6:	46c0      	nop			; (mov r8, r8)
 80035e8:	40021000 	.word	0x40021000
 80035ec:	50000400 	.word	0x50000400
 80035f0:	50000800 	.word	0x50000800

080035f4 <__io_putchar>:
   set to 'Yes') calls __io_putchar() */
int __io_putchar(int ch)
#else
int fputc(int ch, FILE *f)
#endif /* __GNUC__ */
{
 80035f4:	b580      	push	{r7, lr}
 80035f6:	b082      	sub	sp, #8
 80035f8:	af00      	add	r7, sp, #0
 80035fa:	6078      	str	r0, [r7, #4]
     /* Place your implementation of fputc here */
     /* e.g. write a character to the UART3 and Loop until the end of
      * transmission */
     // HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
     return ch;
 80035fc:	687b      	ldr	r3, [r7, #4]
}
 80035fe:	0018      	movs	r0, r3
 8003600:	46bd      	mov	sp, r7
 8003602:	b002      	add	sp, #8
 8003604:	bd80      	pop	{r7, pc}
	...

08003608 <Measurement_of_ADC_Voltage_18650>:

void Measurement_of_ADC_Voltage_18650() {
 8003608:	b580      	push	{r7, lr}
 800360a:	b084      	sub	sp, #16
 800360c:	af00      	add	r7, sp, #0
     float V_ref = 3.3;  // This is known for each micro controller from data
 800360e:	4b1b      	ldr	r3, [pc, #108]	; (800367c <Measurement_of_ADC_Voltage_18650+0x74>)
 8003610:	60fb      	str	r3, [r7, #12]
     // sheet, V_ref = power supply in
     float ADC_resolution = (4096 - 1);  // 2^12 - 1
 8003612:	4b1b      	ldr	r3, [pc, #108]	; (8003680 <Measurement_of_ADC_Voltage_18650+0x78>)
 8003614:	60bb      	str	r3, [r7, #8]
     float V_stepSize = V_ref / ADC_resolution;
 8003616:	68b9      	ldr	r1, [r7, #8]
 8003618:	68f8      	ldr	r0, [r7, #12]
 800361a:	f7fd faa9 	bl	8000b70 <__aeabi_fdiv>
 800361e:	1c03      	adds	r3, r0, #0
 8003620:	607b      	str	r3, [r7, #4]
     // ADC
     /* Start ADC Conversion for ADC1 */
     ADC_Select_Voltage18650();
 8003622:	f000 f8f9 	bl	8003818 <ADC_Select_Voltage18650>
     HAL_ADC_Start(&hadc);
 8003626:	4b17      	ldr	r3, [pc, #92]	; (8003684 <Measurement_of_ADC_Voltage_18650+0x7c>)
 8003628:	0018      	movs	r0, r3
 800362a:	f001 f835 	bl	8004698 <HAL_ADC_Start>
     uint16_t rawValue1;
     if (HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY) == HAL_OK) {
 800362e:	2301      	movs	r3, #1
 8003630:	425a      	negs	r2, r3
 8003632:	4b14      	ldr	r3, [pc, #80]	; (8003684 <Measurement_of_ADC_Voltage_18650+0x7c>)
 8003634:	0011      	movs	r1, r2
 8003636:	0018      	movs	r0, r3
 8003638:	f001 f8c2 	bl	80047c0 <HAL_ADC_PollForConversion>
 800363c:	1e03      	subs	r3, r0, #0
 800363e:	d114      	bne.n	800366a <Measurement_of_ADC_Voltage_18650+0x62>
          /* Read the ADC1 value */
          rawValue1 = HAL_ADC_GetValue(&hadc);
 8003640:	4b10      	ldr	r3, [pc, #64]	; (8003684 <Measurement_of_ADC_Voltage_18650+0x7c>)
 8003642:	0018      	movs	r0, r3
 8003644:	f001 f958 	bl	80048f8 <HAL_ADC_GetValue>
 8003648:	0002      	movs	r2, r0
 800364a:	1cbb      	adds	r3, r7, #2
 800364c:	801a      	strh	r2, [r3, #0]
          V_18650 = rawValue1 * V_stepSize;
 800364e:	1cbb      	adds	r3, r7, #2
 8003650:	881b      	ldrh	r3, [r3, #0]
 8003652:	0018      	movs	r0, r3
 8003654:	f7fd ff44 	bl	80014e0 <__aeabi_i2f>
 8003658:	1c03      	adds	r3, r0, #0
 800365a:	6879      	ldr	r1, [r7, #4]
 800365c:	1c18      	adds	r0, r3, #0
 800365e:	f7fd fc51 	bl	8000f04 <__aeabi_fmul>
 8003662:	1c03      	adds	r3, r0, #0
 8003664:	1c1a      	adds	r2, r3, #0
 8003666:	4b08      	ldr	r3, [pc, #32]	; (8003688 <Measurement_of_ADC_Voltage_18650+0x80>)
 8003668:	601a      	str	r2, [r3, #0]
     }
     HAL_ADC_Stop(&hadc);
 800366a:	4b06      	ldr	r3, [pc, #24]	; (8003684 <Measurement_of_ADC_Voltage_18650+0x7c>)
 800366c:	0018      	movs	r0, r3
 800366e:	f001 f867 	bl	8004740 <HAL_ADC_Stop>
}
 8003672:	46c0      	nop			; (mov r8, r8)
 8003674:	46bd      	mov	sp, r7
 8003676:	b004      	add	sp, #16
 8003678:	bd80      	pop	{r7, pc}
 800367a:	46c0      	nop			; (mov r8, r8)
 800367c:	40533333 	.word	0x40533333
 8003680:	457ff000 	.word	0x457ff000
 8003684:	200001f0 	.word	0x200001f0
 8003688:	2000024c 	.word	0x2000024c

0800368c <Measurement_of_ADC_Voltage_CMOS>:
void Measurement_of_ADC_Voltage_CMOS() {
 800368c:	b580      	push	{r7, lr}
 800368e:	b084      	sub	sp, #16
 8003690:	af00      	add	r7, sp, #0
     float V_ref = 3.3;  // This is known for each micro controller from data
 8003692:	4b1b      	ldr	r3, [pc, #108]	; (8003700 <Measurement_of_ADC_Voltage_CMOS+0x74>)
 8003694:	60fb      	str	r3, [r7, #12]
     // sheet, V_ref = power supply in
     float ADC_resolution = (4096 - 1);  // 2^12 - 1
 8003696:	4b1b      	ldr	r3, [pc, #108]	; (8003704 <Measurement_of_ADC_Voltage_CMOS+0x78>)
 8003698:	60bb      	str	r3, [r7, #8]
     float V_stepSize = V_ref / ADC_resolution;
 800369a:	68b9      	ldr	r1, [r7, #8]
 800369c:	68f8      	ldr	r0, [r7, #12]
 800369e:	f7fd fa67 	bl	8000b70 <__aeabi_fdiv>
 80036a2:	1c03      	adds	r3, r0, #0
 80036a4:	607b      	str	r3, [r7, #4]
     // ADC
     /* Start ADC Conversion for ADC1 */
     ADC_Select_VoltageCMOS();
 80036a6:	f000 f8db 	bl	8003860 <ADC_Select_VoltageCMOS>
     HAL_ADC_Start(&hadc);
 80036aa:	4b17      	ldr	r3, [pc, #92]	; (8003708 <Measurement_of_ADC_Voltage_CMOS+0x7c>)
 80036ac:	0018      	movs	r0, r3
 80036ae:	f000 fff3 	bl	8004698 <HAL_ADC_Start>
     uint16_t rawValue1;
     if (HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY) == HAL_OK) {
 80036b2:	2301      	movs	r3, #1
 80036b4:	425a      	negs	r2, r3
 80036b6:	4b14      	ldr	r3, [pc, #80]	; (8003708 <Measurement_of_ADC_Voltage_CMOS+0x7c>)
 80036b8:	0011      	movs	r1, r2
 80036ba:	0018      	movs	r0, r3
 80036bc:	f001 f880 	bl	80047c0 <HAL_ADC_PollForConversion>
 80036c0:	1e03      	subs	r3, r0, #0
 80036c2:	d114      	bne.n	80036ee <Measurement_of_ADC_Voltage_CMOS+0x62>
          /* Read the ADC1 value */
          rawValue1 = HAL_ADC_GetValue(&hadc);
 80036c4:	4b10      	ldr	r3, [pc, #64]	; (8003708 <Measurement_of_ADC_Voltage_CMOS+0x7c>)
 80036c6:	0018      	movs	r0, r3
 80036c8:	f001 f916 	bl	80048f8 <HAL_ADC_GetValue>
 80036cc:	0002      	movs	r2, r0
 80036ce:	1cbb      	adds	r3, r7, #2
 80036d0:	801a      	strh	r2, [r3, #0]
          V_CMOS = rawValue1 * V_stepSize;
 80036d2:	1cbb      	adds	r3, r7, #2
 80036d4:	881b      	ldrh	r3, [r3, #0]
 80036d6:	0018      	movs	r0, r3
 80036d8:	f7fd ff02 	bl	80014e0 <__aeabi_i2f>
 80036dc:	1c03      	adds	r3, r0, #0
 80036de:	6879      	ldr	r1, [r7, #4]
 80036e0:	1c18      	adds	r0, r3, #0
 80036e2:	f7fd fc0f 	bl	8000f04 <__aeabi_fmul>
 80036e6:	1c03      	adds	r3, r0, #0
 80036e8:	1c1a      	adds	r2, r3, #0
 80036ea:	4b08      	ldr	r3, [pc, #32]	; (800370c <Measurement_of_ADC_Voltage_CMOS+0x80>)
 80036ec:	601a      	str	r2, [r3, #0]
     }
     HAL_ADC_Stop(&hadc);
 80036ee:	4b06      	ldr	r3, [pc, #24]	; (8003708 <Measurement_of_ADC_Voltage_CMOS+0x7c>)
 80036f0:	0018      	movs	r0, r3
 80036f2:	f001 f825 	bl	8004740 <HAL_ADC_Stop>
}
 80036f6:	46c0      	nop			; (mov r8, r8)
 80036f8:	46bd      	mov	sp, r7
 80036fa:	b004      	add	sp, #16
 80036fc:	bd80      	pop	{r7, pc}
 80036fe:	46c0      	nop			; (mov r8, r8)
 8003700:	40533333 	.word	0x40533333
 8003704:	457ff000 	.word	0x457ff000
 8003708:	200001f0 	.word	0x200001f0
 800370c:	20000250 	.word	0x20000250

08003710 <Measurement_of_ADC_Current_18650>:

void Measurement_of_ADC_Current_18650() {
 8003710:	b580      	push	{r7, lr}
 8003712:	b084      	sub	sp, #16
 8003714:	af00      	add	r7, sp, #0
     float V_ref = 3.3;  // This is known for each micro controller from data
 8003716:	4b1b      	ldr	r3, [pc, #108]	; (8003784 <Measurement_of_ADC_Current_18650+0x74>)
 8003718:	60fb      	str	r3, [r7, #12]
     // sheet, V_ref = power supply in
     float ADC_resolution = (4096 - 1);  // 2^12 - 1
 800371a:	4b1b      	ldr	r3, [pc, #108]	; (8003788 <Measurement_of_ADC_Current_18650+0x78>)
 800371c:	60bb      	str	r3, [r7, #8]
     float V_stepSize = V_ref / ADC_resolution;
 800371e:	68b9      	ldr	r1, [r7, #8]
 8003720:	68f8      	ldr	r0, [r7, #12]
 8003722:	f7fd fa25 	bl	8000b70 <__aeabi_fdiv>
 8003726:	1c03      	adds	r3, r0, #0
 8003728:	607b      	str	r3, [r7, #4]
     // ADC
     /* Start ADC Conversion for ADC1 */
     ADC_Select_Current18650();
 800372a:	f000 f8bd 	bl	80038a8 <ADC_Select_Current18650>
     HAL_ADC_Start(&hadc);
 800372e:	4b17      	ldr	r3, [pc, #92]	; (800378c <Measurement_of_ADC_Current_18650+0x7c>)
 8003730:	0018      	movs	r0, r3
 8003732:	f000 ffb1 	bl	8004698 <HAL_ADC_Start>
     uint16_t rawValue1;
     if (HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY) == HAL_OK) {
 8003736:	2301      	movs	r3, #1
 8003738:	425a      	negs	r2, r3
 800373a:	4b14      	ldr	r3, [pc, #80]	; (800378c <Measurement_of_ADC_Current_18650+0x7c>)
 800373c:	0011      	movs	r1, r2
 800373e:	0018      	movs	r0, r3
 8003740:	f001 f83e 	bl	80047c0 <HAL_ADC_PollForConversion>
 8003744:	1e03      	subs	r3, r0, #0
 8003746:	d114      	bne.n	8003772 <Measurement_of_ADC_Current_18650+0x62>
          /* Read the ADC1 value */
          rawValue1 = HAL_ADC_GetValue(&hadc);
 8003748:	4b10      	ldr	r3, [pc, #64]	; (800378c <Measurement_of_ADC_Current_18650+0x7c>)
 800374a:	0018      	movs	r0, r3
 800374c:	f001 f8d4 	bl	80048f8 <HAL_ADC_GetValue>
 8003750:	0002      	movs	r2, r0
 8003752:	1cbb      	adds	r3, r7, #2
 8003754:	801a      	strh	r2, [r3, #0]
          C_18650 = ((rawValue1 * V_stepSize));
 8003756:	1cbb      	adds	r3, r7, #2
 8003758:	881b      	ldrh	r3, [r3, #0]
 800375a:	0018      	movs	r0, r3
 800375c:	f7fd fec0 	bl	80014e0 <__aeabi_i2f>
 8003760:	1c03      	adds	r3, r0, #0
 8003762:	6879      	ldr	r1, [r7, #4]
 8003764:	1c18      	adds	r0, r3, #0
 8003766:	f7fd fbcd 	bl	8000f04 <__aeabi_fmul>
 800376a:	1c03      	adds	r3, r0, #0
 800376c:	1c1a      	adds	r2, r3, #0
 800376e:	4b08      	ldr	r3, [pc, #32]	; (8003790 <Measurement_of_ADC_Current_18650+0x80>)
 8003770:	601a      	str	r2, [r3, #0]

        /// 50) /
        //.0299562) // I_load = ((V_ADC / 50 gain) / .03 calibrated
                                 // shunt)
     }
     HAL_ADC_Stop(&hadc);
 8003772:	4b06      	ldr	r3, [pc, #24]	; (800378c <Measurement_of_ADC_Current_18650+0x7c>)
 8003774:	0018      	movs	r0, r3
 8003776:	f000 ffe3 	bl	8004740 <HAL_ADC_Stop>
}
 800377a:	46c0      	nop			; (mov r8, r8)
 800377c:	46bd      	mov	sp, r7
 800377e:	b004      	add	sp, #16
 8003780:	bd80      	pop	{r7, pc}
 8003782:	46c0      	nop			; (mov r8, r8)
 8003784:	40533333 	.word	0x40533333
 8003788:	457ff000 	.word	0x457ff000
 800378c:	200001f0 	.word	0x200001f0
 8003790:	20000258 	.word	0x20000258

08003794 <Measurement_of_ADC_Current_CMOS>:

void Measurement_of_ADC_Current_CMOS() {
 8003794:	b580      	push	{r7, lr}
 8003796:	b084      	sub	sp, #16
 8003798:	af00      	add	r7, sp, #0
     float V_ref = 3.3;  // This is known for each micro controller from data
 800379a:	4b1b      	ldr	r3, [pc, #108]	; (8003808 <Measurement_of_ADC_Current_CMOS+0x74>)
 800379c:	60fb      	str	r3, [r7, #12]
     // sheet, V_ref = power supply in
     float ADC_resolution = (4096 - 1);  // 2^12 - 1
 800379e:	4b1b      	ldr	r3, [pc, #108]	; (800380c <Measurement_of_ADC_Current_CMOS+0x78>)
 80037a0:	60bb      	str	r3, [r7, #8]
     float V_stepSize = V_ref / ADC_resolution;
 80037a2:	68b9      	ldr	r1, [r7, #8]
 80037a4:	68f8      	ldr	r0, [r7, #12]
 80037a6:	f7fd f9e3 	bl	8000b70 <__aeabi_fdiv>
 80037aa:	1c03      	adds	r3, r0, #0
 80037ac:	607b      	str	r3, [r7, #4]
     // ADC
     /* Start ADC Conversion for ADC1 */
     ADC_Select_CurrentCMOS();
 80037ae:	f000 f89f 	bl	80038f0 <ADC_Select_CurrentCMOS>
     HAL_ADC_Start(&hadc);
 80037b2:	4b17      	ldr	r3, [pc, #92]	; (8003810 <Measurement_of_ADC_Current_CMOS+0x7c>)
 80037b4:	0018      	movs	r0, r3
 80037b6:	f000 ff6f 	bl	8004698 <HAL_ADC_Start>
     uint16_t rawValue1;
     if (HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY) == HAL_OK) {
 80037ba:	2301      	movs	r3, #1
 80037bc:	425a      	negs	r2, r3
 80037be:	4b14      	ldr	r3, [pc, #80]	; (8003810 <Measurement_of_ADC_Current_CMOS+0x7c>)
 80037c0:	0011      	movs	r1, r2
 80037c2:	0018      	movs	r0, r3
 80037c4:	f000 fffc 	bl	80047c0 <HAL_ADC_PollForConversion>
 80037c8:	1e03      	subs	r3, r0, #0
 80037ca:	d114      	bne.n	80037f6 <Measurement_of_ADC_Current_CMOS+0x62>
          /* Read the ADC1 value */
          rawValue1 = HAL_ADC_GetValue(&hadc);
 80037cc:	4b10      	ldr	r3, [pc, #64]	; (8003810 <Measurement_of_ADC_Current_CMOS+0x7c>)
 80037ce:	0018      	movs	r0, r3
 80037d0:	f001 f892 	bl	80048f8 <HAL_ADC_GetValue>
 80037d4:	0002      	movs	r2, r0
 80037d6:	1cbb      	adds	r3, r7, #2
 80037d8:	801a      	strh	r2, [r3, #0]
          C_CMOS = ((rawValue1 * V_stepSize));
 80037da:	1cbb      	adds	r3, r7, #2
 80037dc:	881b      	ldrh	r3, [r3, #0]
 80037de:	0018      	movs	r0, r3
 80037e0:	f7fd fe7e 	bl	80014e0 <__aeabi_i2f>
 80037e4:	1c03      	adds	r3, r0, #0
 80037e6:	6879      	ldr	r1, [r7, #4]
 80037e8:	1c18      	adds	r0, r3, #0
 80037ea:	f7fd fb8b 	bl	8000f04 <__aeabi_fmul>
 80037ee:	1c03      	adds	r3, r0, #0
 80037f0:	1c1a      	adds	r2, r3, #0
 80037f2:	4b08      	ldr	r3, [pc, #32]	; (8003814 <Measurement_of_ADC_Current_CMOS+0x80>)
 80037f4:	601a      	str	r2, [r3, #0]
        		  /// 20) /
                   // 4.713492);  // I_load = (( V_ADC / 20 Gain ) / 4.71
                                // calibrated shunt )
     }
     HAL_ADC_Stop(&hadc);
 80037f6:	4b06      	ldr	r3, [pc, #24]	; (8003810 <Measurement_of_ADC_Current_CMOS+0x7c>)
 80037f8:	0018      	movs	r0, r3
 80037fa:	f000 ffa1 	bl	8004740 <HAL_ADC_Stop>
}
 80037fe:	46c0      	nop			; (mov r8, r8)
 8003800:	46bd      	mov	sp, r7
 8003802:	b004      	add	sp, #16
 8003804:	bd80      	pop	{r7, pc}
 8003806:	46c0      	nop			; (mov r8, r8)
 8003808:	40533333 	.word	0x40533333
 800380c:	457ff000 	.word	0x457ff000
 8003810:	200001f0 	.word	0x200001f0
 8003814:	20000254 	.word	0x20000254

08003818 <ADC_Select_Voltage18650>:

void ADC_Select_Voltage18650(void) {
 8003818:	b580      	push	{r7, lr}
 800381a:	b082      	sub	sp, #8
 800381c:	af00      	add	r7, sp, #0
     ADC_ChannelConfTypeDef sConfig = {0};
 800381e:	003b      	movs	r3, r7
 8003820:	0018      	movs	r0, r3
 8003822:	2308      	movs	r3, #8
 8003824:	001a      	movs	r2, r3
 8003826:	2100      	movs	r1, #0
 8003828:	f003 f9a2 	bl	8006b70 <memset>
     sConfig.Channel = ADC_CHANNEL_15;
 800382c:	003b      	movs	r3, r7
 800382e:	4a0a      	ldr	r2, [pc, #40]	; (8003858 <ADC_Select_Voltage18650+0x40>)
 8003830:	601a      	str	r2, [r3, #0]
     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 8003832:	003b      	movs	r3, r7
 8003834:	2280      	movs	r2, #128	; 0x80
 8003836:	0152      	lsls	r2, r2, #5
 8003838:	605a      	str	r2, [r3, #4]
     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK) {
 800383a:	003a      	movs	r2, r7
 800383c:	4b07      	ldr	r3, [pc, #28]	; (800385c <ADC_Select_Voltage18650+0x44>)
 800383e:	0011      	movs	r1, r2
 8003840:	0018      	movs	r0, r3
 8003842:	f001 f865 	bl	8004910 <HAL_ADC_ConfigChannel>
 8003846:	1e03      	subs	r3, r0, #0
 8003848:	d001      	beq.n	800384e <ADC_Select_Voltage18650+0x36>
          Error_Handler();
 800384a:	f000 fba9 	bl	8003fa0 <Error_Handler>
     }
}
 800384e:	46c0      	nop			; (mov r8, r8)
 8003850:	46bd      	mov	sp, r7
 8003852:	b002      	add	sp, #8
 8003854:	bd80      	pop	{r7, pc}
 8003856:	46c0      	nop			; (mov r8, r8)
 8003858:	3c008000 	.word	0x3c008000
 800385c:	200001f0 	.word	0x200001f0

08003860 <ADC_Select_VoltageCMOS>:

void ADC_Select_VoltageCMOS(void) {
 8003860:	b580      	push	{r7, lr}
 8003862:	b082      	sub	sp, #8
 8003864:	af00      	add	r7, sp, #0
     ADC_ChannelConfTypeDef sConfig = {0};
 8003866:	003b      	movs	r3, r7
 8003868:	0018      	movs	r0, r3
 800386a:	2308      	movs	r3, #8
 800386c:	001a      	movs	r2, r3
 800386e:	2100      	movs	r1, #0
 8003870:	f003 f97e 	bl	8006b70 <memset>
     sConfig.Channel = ADC_CHANNEL_13;
 8003874:	003b      	movs	r3, r7
 8003876:	4a0a      	ldr	r2, [pc, #40]	; (80038a0 <ADC_Select_VoltageCMOS+0x40>)
 8003878:	601a      	str	r2, [r3, #0]
     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 800387a:	003b      	movs	r3, r7
 800387c:	2280      	movs	r2, #128	; 0x80
 800387e:	0152      	lsls	r2, r2, #5
 8003880:	605a      	str	r2, [r3, #4]
     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK) {
 8003882:	003a      	movs	r2, r7
 8003884:	4b07      	ldr	r3, [pc, #28]	; (80038a4 <ADC_Select_VoltageCMOS+0x44>)
 8003886:	0011      	movs	r1, r2
 8003888:	0018      	movs	r0, r3
 800388a:	f001 f841 	bl	8004910 <HAL_ADC_ConfigChannel>
 800388e:	1e03      	subs	r3, r0, #0
 8003890:	d001      	beq.n	8003896 <ADC_Select_VoltageCMOS+0x36>
          Error_Handler();
 8003892:	f000 fb85 	bl	8003fa0 <Error_Handler>
     }
}
 8003896:	46c0      	nop			; (mov r8, r8)
 8003898:	46bd      	mov	sp, r7
 800389a:	b002      	add	sp, #8
 800389c:	bd80      	pop	{r7, pc}
 800389e:	46c0      	nop			; (mov r8, r8)
 80038a0:	34002000 	.word	0x34002000
 80038a4:	200001f0 	.word	0x200001f0

080038a8 <ADC_Select_Current18650>:

void ADC_Select_Current18650(void) {
 80038a8:	b580      	push	{r7, lr}
 80038aa:	b082      	sub	sp, #8
 80038ac:	af00      	add	r7, sp, #0
     ADC_ChannelConfTypeDef sConfig = {0};
 80038ae:	003b      	movs	r3, r7
 80038b0:	0018      	movs	r0, r3
 80038b2:	2308      	movs	r3, #8
 80038b4:	001a      	movs	r2, r3
 80038b6:	2100      	movs	r1, #0
 80038b8:	f003 f95a 	bl	8006b70 <memset>
     sConfig.Channel = ADC_CHANNEL_14;
 80038bc:	003b      	movs	r3, r7
 80038be:	4a0a      	ldr	r2, [pc, #40]	; (80038e8 <ADC_Select_Current18650+0x40>)
 80038c0:	601a      	str	r2, [r3, #0]
     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 80038c2:	003b      	movs	r3, r7
 80038c4:	2280      	movs	r2, #128	; 0x80
 80038c6:	0152      	lsls	r2, r2, #5
 80038c8:	605a      	str	r2, [r3, #4]
     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK) {
 80038ca:	003a      	movs	r2, r7
 80038cc:	4b07      	ldr	r3, [pc, #28]	; (80038ec <ADC_Select_Current18650+0x44>)
 80038ce:	0011      	movs	r1, r2
 80038d0:	0018      	movs	r0, r3
 80038d2:	f001 f81d 	bl	8004910 <HAL_ADC_ConfigChannel>
 80038d6:	1e03      	subs	r3, r0, #0
 80038d8:	d001      	beq.n	80038de <ADC_Select_Current18650+0x36>
          Error_Handler();
 80038da:	f000 fb61 	bl	8003fa0 <Error_Handler>
     }
}
 80038de:	46c0      	nop			; (mov r8, r8)
 80038e0:	46bd      	mov	sp, r7
 80038e2:	b002      	add	sp, #8
 80038e4:	bd80      	pop	{r7, pc}
 80038e6:	46c0      	nop			; (mov r8, r8)
 80038e8:	38004000 	.word	0x38004000
 80038ec:	200001f0 	.word	0x200001f0

080038f0 <ADC_Select_CurrentCMOS>:

void ADC_Select_CurrentCMOS(void) {
 80038f0:	b580      	push	{r7, lr}
 80038f2:	b082      	sub	sp, #8
 80038f4:	af00      	add	r7, sp, #0
     ADC_ChannelConfTypeDef sConfig = {0};
 80038f6:	003b      	movs	r3, r7
 80038f8:	0018      	movs	r0, r3
 80038fa:	2308      	movs	r3, #8
 80038fc:	001a      	movs	r2, r3
 80038fe:	2100      	movs	r1, #0
 8003900:	f003 f936 	bl	8006b70 <memset>
     sConfig.Channel = ADC_CHANNEL_12;
 8003904:	003b      	movs	r3, r7
 8003906:	4a0a      	ldr	r2, [pc, #40]	; (8003930 <ADC_Select_CurrentCMOS+0x40>)
 8003908:	601a      	str	r2, [r3, #0]
     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 800390a:	003b      	movs	r3, r7
 800390c:	2280      	movs	r2, #128	; 0x80
 800390e:	0152      	lsls	r2, r2, #5
 8003910:	605a      	str	r2, [r3, #4]
     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK) {
 8003912:	003a      	movs	r2, r7
 8003914:	4b07      	ldr	r3, [pc, #28]	; (8003934 <ADC_Select_CurrentCMOS+0x44>)
 8003916:	0011      	movs	r1, r2
 8003918:	0018      	movs	r0, r3
 800391a:	f000 fff9 	bl	8004910 <HAL_ADC_ConfigChannel>
 800391e:	1e03      	subs	r3, r0, #0
 8003920:	d001      	beq.n	8003926 <ADC_Select_CurrentCMOS+0x36>
          Error_Handler();
 8003922:	f000 fb3d 	bl	8003fa0 <Error_Handler>
     }
}
 8003926:	46c0      	nop			; (mov r8, r8)
 8003928:	46bd      	mov	sp, r7
 800392a:	b002      	add	sp, #8
 800392c:	bd80      	pop	{r7, pc}
 800392e:	46c0      	nop			; (mov r8, r8)
 8003930:	30001000 	.word	0x30001000
 8003934:	200001f0 	.word	0x200001f0

08003938 <setNumber>:

void setNumber() {
 8003938:	b580      	push	{r7, lr}
 800393a:	af00      	add	r7, sp, #0
     // Check each value and set the pins accordingly
     if (valueToAdjust == 1) {
 800393c:	4bc2      	ldr	r3, [pc, #776]	; (8003c48 <setNumber+0x310>)
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	21fe      	movs	r1, #254	; 0xfe
 8003942:	0589      	lsls	r1, r1, #22
 8003944:	1c18      	adds	r0, r3, #0
 8003946:	f7fc fdbb 	bl	80004c0 <__aeabi_fcmpeq>
 800394a:	1e03      	subs	r3, r0, #0
 800394c:	d027      	beq.n	800399e <setNumber+0x66>
          // value 1 = 001
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_SET);
 800394e:	23a0      	movs	r3, #160	; 0xa0
 8003950:	05db      	lsls	r3, r3, #23
 8003952:	2201      	movs	r2, #1
 8003954:	2101      	movs	r1, #1
 8003956:	0018      	movs	r0, r3
 8003958:	f001 fbcd 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_RESET);
 800395c:	23a0      	movs	r3, #160	; 0xa0
 800395e:	05db      	lsls	r3, r3, #23
 8003960:	2200      	movs	r2, #0
 8003962:	2102      	movs	r1, #2
 8003964:	0018      	movs	r0, r3
 8003966:	f001 fbc6 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_RESET);
 800396a:	23a0      	movs	r3, #160	; 0xa0
 800396c:	05db      	lsls	r3, r3, #23
 800396e:	2200      	movs	r2, #0
 8003970:	2110      	movs	r1, #16
 8003972:	0018      	movs	r0, r3
 8003974:	f001 fbbf 	bl	80050f6 <HAL_GPIO_WritePin>

          // Set Red
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003978:	4bb4      	ldr	r3, [pc, #720]	; (8003c4c <setNumber+0x314>)
 800397a:	2201      	movs	r2, #1
 800397c:	2101      	movs	r1, #1
 800397e:	0018      	movs	r0, r3
 8003980:	f001 fbb9 	bl	80050f6 <HAL_GPIO_WritePin>
                            User_Input_Status_Light_Pin, GPIO_PIN_SET);
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003984:	4bb1      	ldr	r3, [pc, #708]	; (8003c4c <setNumber+0x314>)
 8003986:	2200      	movs	r2, #0
 8003988:	2102      	movs	r1, #2
 800398a:	0018      	movs	r0, r3
 800398c:	f001 fbb3 	bl	80050f6 <HAL_GPIO_WritePin>
                            User_Input_Status_Light_Green_Pin, GPIO_PIN_RESET);
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003990:	4bae      	ldr	r3, [pc, #696]	; (8003c4c <setNumber+0x314>)
 8003992:	2200      	movs	r2, #0
 8003994:	2104      	movs	r1, #4
 8003996:	0018      	movs	r0, r3
 8003998:	f001 fbad 	bl	80050f6 <HAL_GPIO_WritePin>
               HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
                                 User_Input_Status_Light_Blue_Pin, GPIO_PIN_RESET);
          }
     /*may need to implement state for numbers entered over 7 and numbers
     under zero */
}
 800399c:	e151      	b.n	8003c42 <setNumber+0x30a>
     } else if (valueToAdjust == 2) {
 800399e:	4baa      	ldr	r3, [pc, #680]	; (8003c48 <setNumber+0x310>)
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	2180      	movs	r1, #128	; 0x80
 80039a4:	05c9      	lsls	r1, r1, #23
 80039a6:	1c18      	adds	r0, r3, #0
 80039a8:	f7fc fd8a 	bl	80004c0 <__aeabi_fcmpeq>
 80039ac:	1e03      	subs	r3, r0, #0
 80039ae:	d027      	beq.n	8003a00 <setNumber+0xc8>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_RESET);
 80039b0:	23a0      	movs	r3, #160	; 0xa0
 80039b2:	05db      	lsls	r3, r3, #23
 80039b4:	2200      	movs	r2, #0
 80039b6:	2101      	movs	r1, #1
 80039b8:	0018      	movs	r0, r3
 80039ba:	f001 fb9c 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_SET);
 80039be:	23a0      	movs	r3, #160	; 0xa0
 80039c0:	05db      	lsls	r3, r3, #23
 80039c2:	2201      	movs	r2, #1
 80039c4:	2102      	movs	r1, #2
 80039c6:	0018      	movs	r0, r3
 80039c8:	f001 fb95 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_RESET);
 80039cc:	23a0      	movs	r3, #160	; 0xa0
 80039ce:	05db      	lsls	r3, r3, #23
 80039d0:	2200      	movs	r2, #0
 80039d2:	2110      	movs	r1, #16
 80039d4:	0018      	movs	r0, r3
 80039d6:	f001 fb8e 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 80039da:	4b9c      	ldr	r3, [pc, #624]	; (8003c4c <setNumber+0x314>)
 80039dc:	2201      	movs	r2, #1
 80039de:	2101      	movs	r1, #1
 80039e0:	0018      	movs	r0, r3
 80039e2:	f001 fb88 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 80039e6:	4b99      	ldr	r3, [pc, #612]	; (8003c4c <setNumber+0x314>)
 80039e8:	2201      	movs	r2, #1
 80039ea:	2102      	movs	r1, #2
 80039ec:	0018      	movs	r0, r3
 80039ee:	f001 fb82 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 80039f2:	4b96      	ldr	r3, [pc, #600]	; (8003c4c <setNumber+0x314>)
 80039f4:	2200      	movs	r2, #0
 80039f6:	2104      	movs	r1, #4
 80039f8:	0018      	movs	r0, r3
 80039fa:	f001 fb7c 	bl	80050f6 <HAL_GPIO_WritePin>
}
 80039fe:	e120      	b.n	8003c42 <setNumber+0x30a>
     } else if (valueToAdjust == 3) {
 8003a00:	4b91      	ldr	r3, [pc, #580]	; (8003c48 <setNumber+0x310>)
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	4992      	ldr	r1, [pc, #584]	; (8003c50 <setNumber+0x318>)
 8003a06:	1c18      	adds	r0, r3, #0
 8003a08:	f7fc fd5a 	bl	80004c0 <__aeabi_fcmpeq>
 8003a0c:	1e03      	subs	r3, r0, #0
 8003a0e:	d027      	beq.n	8003a60 <setNumber+0x128>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_SET);
 8003a10:	23a0      	movs	r3, #160	; 0xa0
 8003a12:	05db      	lsls	r3, r3, #23
 8003a14:	2201      	movs	r2, #1
 8003a16:	2101      	movs	r1, #1
 8003a18:	0018      	movs	r0, r3
 8003a1a:	f001 fb6c 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_SET);
 8003a1e:	23a0      	movs	r3, #160	; 0xa0
 8003a20:	05db      	lsls	r3, r3, #23
 8003a22:	2201      	movs	r2, #1
 8003a24:	2102      	movs	r1, #2
 8003a26:	0018      	movs	r0, r3
 8003a28:	f001 fb65 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_RESET);
 8003a2c:	23a0      	movs	r3, #160	; 0xa0
 8003a2e:	05db      	lsls	r3, r3, #23
 8003a30:	2200      	movs	r2, #0
 8003a32:	2110      	movs	r1, #16
 8003a34:	0018      	movs	r0, r3
 8003a36:	f001 fb5e 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003a3a:	4b84      	ldr	r3, [pc, #528]	; (8003c4c <setNumber+0x314>)
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	2101      	movs	r1, #1
 8003a40:	0018      	movs	r0, r3
 8003a42:	f001 fb58 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003a46:	4b81      	ldr	r3, [pc, #516]	; (8003c4c <setNumber+0x314>)
 8003a48:	2201      	movs	r2, #1
 8003a4a:	2102      	movs	r1, #2
 8003a4c:	0018      	movs	r0, r3
 8003a4e:	f001 fb52 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003a52:	4b7e      	ldr	r3, [pc, #504]	; (8003c4c <setNumber+0x314>)
 8003a54:	2200      	movs	r2, #0
 8003a56:	2104      	movs	r1, #4
 8003a58:	0018      	movs	r0, r3
 8003a5a:	f001 fb4c 	bl	80050f6 <HAL_GPIO_WritePin>
}
 8003a5e:	e0f0      	b.n	8003c42 <setNumber+0x30a>
     } else if (valueToAdjust == 4) {
 8003a60:	4b79      	ldr	r3, [pc, #484]	; (8003c48 <setNumber+0x310>)
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	2181      	movs	r1, #129	; 0x81
 8003a66:	05c9      	lsls	r1, r1, #23
 8003a68:	1c18      	adds	r0, r3, #0
 8003a6a:	f7fc fd29 	bl	80004c0 <__aeabi_fcmpeq>
 8003a6e:	1e03      	subs	r3, r0, #0
 8003a70:	d027      	beq.n	8003ac2 <setNumber+0x18a>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_RESET);
 8003a72:	23a0      	movs	r3, #160	; 0xa0
 8003a74:	05db      	lsls	r3, r3, #23
 8003a76:	2200      	movs	r2, #0
 8003a78:	2101      	movs	r1, #1
 8003a7a:	0018      	movs	r0, r3
 8003a7c:	f001 fb3b 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_RESET);
 8003a80:	23a0      	movs	r3, #160	; 0xa0
 8003a82:	05db      	lsls	r3, r3, #23
 8003a84:	2200      	movs	r2, #0
 8003a86:	2102      	movs	r1, #2
 8003a88:	0018      	movs	r0, r3
 8003a8a:	f001 fb34 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_SET);
 8003a8e:	23a0      	movs	r3, #160	; 0xa0
 8003a90:	05db      	lsls	r3, r3, #23
 8003a92:	2201      	movs	r2, #1
 8003a94:	2110      	movs	r1, #16
 8003a96:	0018      	movs	r0, r3
 8003a98:	f001 fb2d 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003a9c:	4b6b      	ldr	r3, [pc, #428]	; (8003c4c <setNumber+0x314>)
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	2101      	movs	r1, #1
 8003aa2:	0018      	movs	r0, r3
 8003aa4:	f001 fb27 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003aa8:	4b68      	ldr	r3, [pc, #416]	; (8003c4c <setNumber+0x314>)
 8003aaa:	2201      	movs	r2, #1
 8003aac:	2102      	movs	r1, #2
 8003aae:	0018      	movs	r0, r3
 8003ab0:	f001 fb21 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003ab4:	4b65      	ldr	r3, [pc, #404]	; (8003c4c <setNumber+0x314>)
 8003ab6:	2201      	movs	r2, #1
 8003ab8:	2104      	movs	r1, #4
 8003aba:	0018      	movs	r0, r3
 8003abc:	f001 fb1b 	bl	80050f6 <HAL_GPIO_WritePin>
}
 8003ac0:	e0bf      	b.n	8003c42 <setNumber+0x30a>
     } else if (valueToAdjust == 5) {
 8003ac2:	4b61      	ldr	r3, [pc, #388]	; (8003c48 <setNumber+0x310>)
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	4963      	ldr	r1, [pc, #396]	; (8003c54 <setNumber+0x31c>)
 8003ac8:	1c18      	adds	r0, r3, #0
 8003aca:	f7fc fcf9 	bl	80004c0 <__aeabi_fcmpeq>
 8003ace:	1e03      	subs	r3, r0, #0
 8003ad0:	d027      	beq.n	8003b22 <setNumber+0x1ea>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_SET);
 8003ad2:	23a0      	movs	r3, #160	; 0xa0
 8003ad4:	05db      	lsls	r3, r3, #23
 8003ad6:	2201      	movs	r2, #1
 8003ad8:	2101      	movs	r1, #1
 8003ada:	0018      	movs	r0, r3
 8003adc:	f001 fb0b 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_RESET);
 8003ae0:	23a0      	movs	r3, #160	; 0xa0
 8003ae2:	05db      	lsls	r3, r3, #23
 8003ae4:	2200      	movs	r2, #0
 8003ae6:	2102      	movs	r1, #2
 8003ae8:	0018      	movs	r0, r3
 8003aea:	f001 fb04 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_SET);
 8003aee:	23a0      	movs	r3, #160	; 0xa0
 8003af0:	05db      	lsls	r3, r3, #23
 8003af2:	2201      	movs	r2, #1
 8003af4:	2110      	movs	r1, #16
 8003af6:	0018      	movs	r0, r3
 8003af8:	f001 fafd 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003afc:	4b53      	ldr	r3, [pc, #332]	; (8003c4c <setNumber+0x314>)
 8003afe:	2200      	movs	r2, #0
 8003b00:	2101      	movs	r1, #1
 8003b02:	0018      	movs	r0, r3
 8003b04:	f001 faf7 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003b08:	4b50      	ldr	r3, [pc, #320]	; (8003c4c <setNumber+0x314>)
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	2102      	movs	r1, #2
 8003b0e:	0018      	movs	r0, r3
 8003b10:	f001 faf1 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003b14:	4b4d      	ldr	r3, [pc, #308]	; (8003c4c <setNumber+0x314>)
 8003b16:	2201      	movs	r2, #1
 8003b18:	2104      	movs	r1, #4
 8003b1a:	0018      	movs	r0, r3
 8003b1c:	f001 faeb 	bl	80050f6 <HAL_GPIO_WritePin>
}
 8003b20:	e08f      	b.n	8003c42 <setNumber+0x30a>
     } else if (valueToAdjust == 6) {
 8003b22:	4b49      	ldr	r3, [pc, #292]	; (8003c48 <setNumber+0x310>)
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	494c      	ldr	r1, [pc, #304]	; (8003c58 <setNumber+0x320>)
 8003b28:	1c18      	adds	r0, r3, #0
 8003b2a:	f7fc fcc9 	bl	80004c0 <__aeabi_fcmpeq>
 8003b2e:	1e03      	subs	r3, r0, #0
 8003b30:	d027      	beq.n	8003b82 <setNumber+0x24a>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_RESET);
 8003b32:	23a0      	movs	r3, #160	; 0xa0
 8003b34:	05db      	lsls	r3, r3, #23
 8003b36:	2200      	movs	r2, #0
 8003b38:	2101      	movs	r1, #1
 8003b3a:	0018      	movs	r0, r3
 8003b3c:	f001 fadb 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_SET);
 8003b40:	23a0      	movs	r3, #160	; 0xa0
 8003b42:	05db      	lsls	r3, r3, #23
 8003b44:	2201      	movs	r2, #1
 8003b46:	2102      	movs	r1, #2
 8003b48:	0018      	movs	r0, r3
 8003b4a:	f001 fad4 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_SET);
 8003b4e:	23a0      	movs	r3, #160	; 0xa0
 8003b50:	05db      	lsls	r3, r3, #23
 8003b52:	2201      	movs	r2, #1
 8003b54:	2110      	movs	r1, #16
 8003b56:	0018      	movs	r0, r3
 8003b58:	f001 facd 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003b5c:	4b3b      	ldr	r3, [pc, #236]	; (8003c4c <setNumber+0x314>)
 8003b5e:	2201      	movs	r2, #1
 8003b60:	2101      	movs	r1, #1
 8003b62:	0018      	movs	r0, r3
 8003b64:	f001 fac7 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003b68:	4b38      	ldr	r3, [pc, #224]	; (8003c4c <setNumber+0x314>)
 8003b6a:	2200      	movs	r2, #0
 8003b6c:	2102      	movs	r1, #2
 8003b6e:	0018      	movs	r0, r3
 8003b70:	f001 fac1 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003b74:	4b35      	ldr	r3, [pc, #212]	; (8003c4c <setNumber+0x314>)
 8003b76:	2201      	movs	r2, #1
 8003b78:	2104      	movs	r1, #4
 8003b7a:	0018      	movs	r0, r3
 8003b7c:	f001 fabb 	bl	80050f6 <HAL_GPIO_WritePin>
}
 8003b80:	e05f      	b.n	8003c42 <setNumber+0x30a>
     } else if (valueToAdjust == 7) {
 8003b82:	4b31      	ldr	r3, [pc, #196]	; (8003c48 <setNumber+0x310>)
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	4935      	ldr	r1, [pc, #212]	; (8003c5c <setNumber+0x324>)
 8003b88:	1c18      	adds	r0, r3, #0
 8003b8a:	f7fc fc99 	bl	80004c0 <__aeabi_fcmpeq>
 8003b8e:	1e03      	subs	r3, r0, #0
 8003b90:	d027      	beq.n	8003be2 <setNumber+0x2aa>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_SET);
 8003b92:	23a0      	movs	r3, #160	; 0xa0
 8003b94:	05db      	lsls	r3, r3, #23
 8003b96:	2201      	movs	r2, #1
 8003b98:	2101      	movs	r1, #1
 8003b9a:	0018      	movs	r0, r3
 8003b9c:	f001 faab 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_SET);
 8003ba0:	23a0      	movs	r3, #160	; 0xa0
 8003ba2:	05db      	lsls	r3, r3, #23
 8003ba4:	2201      	movs	r2, #1
 8003ba6:	2102      	movs	r1, #2
 8003ba8:	0018      	movs	r0, r3
 8003baa:	f001 faa4 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_SET);
 8003bae:	23a0      	movs	r3, #160	; 0xa0
 8003bb0:	05db      	lsls	r3, r3, #23
 8003bb2:	2201      	movs	r2, #1
 8003bb4:	2110      	movs	r1, #16
 8003bb6:	0018      	movs	r0, r3
 8003bb8:	f001 fa9d 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003bbc:	4b23      	ldr	r3, [pc, #140]	; (8003c4c <setNumber+0x314>)
 8003bbe:	2201      	movs	r2, #1
 8003bc0:	2101      	movs	r1, #1
 8003bc2:	0018      	movs	r0, r3
 8003bc4:	f001 fa97 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003bc8:	4b20      	ldr	r3, [pc, #128]	; (8003c4c <setNumber+0x314>)
 8003bca:	2201      	movs	r2, #1
 8003bcc:	2102      	movs	r1, #2
 8003bce:	0018      	movs	r0, r3
 8003bd0:	f001 fa91 	bl	80050f6 <HAL_GPIO_WritePin>
          HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003bd4:	4b1d      	ldr	r3, [pc, #116]	; (8003c4c <setNumber+0x314>)
 8003bd6:	2201      	movs	r2, #1
 8003bd8:	2104      	movs	r1, #4
 8003bda:	0018      	movs	r0, r3
 8003bdc:	f001 fa8b 	bl	80050f6 <HAL_GPIO_WritePin>
}
 8003be0:	e02f      	b.n	8003c42 <setNumber+0x30a>
     else if (valueToAdjust == 0) {
 8003be2:	4b19      	ldr	r3, [pc, #100]	; (8003c48 <setNumber+0x310>)
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	2100      	movs	r1, #0
 8003be8:	1c18      	adds	r0, r3, #0
 8003bea:	f7fc fc69 	bl	80004c0 <__aeabi_fcmpeq>
 8003bee:	1e03      	subs	r3, r0, #0
 8003bf0:	d100      	bne.n	8003bf4 <setNumber+0x2bc>
}
 8003bf2:	e026      	b.n	8003c42 <setNumber+0x30a>
               HAL_GPIO_WritePin(GPIOA, Discrete_Bit_0_Pin, GPIO_PIN_RESET);
 8003bf4:	23a0      	movs	r3, #160	; 0xa0
 8003bf6:	05db      	lsls	r3, r3, #23
 8003bf8:	2200      	movs	r2, #0
 8003bfa:	2101      	movs	r1, #1
 8003bfc:	0018      	movs	r0, r3
 8003bfe:	f001 fa7a 	bl	80050f6 <HAL_GPIO_WritePin>
               HAL_GPIO_WritePin(GPIOA, Discrete_Bit_1_Pin, GPIO_PIN_RESET);
 8003c02:	23a0      	movs	r3, #160	; 0xa0
 8003c04:	05db      	lsls	r3, r3, #23
 8003c06:	2200      	movs	r2, #0
 8003c08:	2102      	movs	r1, #2
 8003c0a:	0018      	movs	r0, r3
 8003c0c:	f001 fa73 	bl	80050f6 <HAL_GPIO_WritePin>
               HAL_GPIO_WritePin(GPIOA, Discrete_Bit_2_Pin, GPIO_PIN_RESET);
 8003c10:	23a0      	movs	r3, #160	; 0xa0
 8003c12:	05db      	lsls	r3, r3, #23
 8003c14:	2200      	movs	r2, #0
 8003c16:	2110      	movs	r1, #16
 8003c18:	0018      	movs	r0, r3
 8003c1a:	f001 fa6c 	bl	80050f6 <HAL_GPIO_WritePin>
               HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003c1e:	4b0b      	ldr	r3, [pc, #44]	; (8003c4c <setNumber+0x314>)
 8003c20:	2200      	movs	r2, #0
 8003c22:	2101      	movs	r1, #1
 8003c24:	0018      	movs	r0, r3
 8003c26:	f001 fa66 	bl	80050f6 <HAL_GPIO_WritePin>
               HAL_GPIO_WritePin(User_Input_Status_Light_Green_GPIO_Port,
 8003c2a:	4b08      	ldr	r3, [pc, #32]	; (8003c4c <setNumber+0x314>)
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	2102      	movs	r1, #2
 8003c30:	0018      	movs	r0, r3
 8003c32:	f001 fa60 	bl	80050f6 <HAL_GPIO_WritePin>
               HAL_GPIO_WritePin(User_Input_Status_Light_Blue_GPIO_Port,
 8003c36:	4b05      	ldr	r3, [pc, #20]	; (8003c4c <setNumber+0x314>)
 8003c38:	2200      	movs	r2, #0
 8003c3a:	2104      	movs	r1, #4
 8003c3c:	0018      	movs	r0, r3
 8003c3e:	f001 fa5a 	bl	80050f6 <HAL_GPIO_WritePin>
}
 8003c42:	46c0      	nop			; (mov r8, r8)
 8003c44:	46bd      	mov	sp, r7
 8003c46:	bd80      	pop	{r7, pc}
 8003c48:	20000268 	.word	0x20000268
 8003c4c:	50000400 	.word	0x50000400
 8003c50:	40400000 	.word	0x40400000
 8003c54:	40a00000 	.word	0x40a00000
 8003c58:	40c00000 	.word	0x40c00000
 8003c5c:	40e00000 	.word	0x40e00000

08003c60 <User_Input_Light_Cycel>:
     // testing

void User_Input_Light_Cycel(){
 8003c60:	b580      	push	{r7, lr}
 8003c62:	af00      	add	r7, sp, #0
	// 1. Set Red
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003c64:	4b4a      	ldr	r3, [pc, #296]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003c66:	2201      	movs	r2, #1
 8003c68:	2101      	movs	r1, #1
 8003c6a:	0018      	movs	r0, r3
 8003c6c:	f001 fa43 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003c70:	4b47      	ldr	r3, [pc, #284]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003c72:	2200      	movs	r2, #0
 8003c74:	2102      	movs	r1, #2
 8003c76:	0018      	movs	r0, r3
 8003c78:	f001 fa3d 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_RESET);
	                         HAL_GPIO_WritePin(
 8003c7c:	4b44      	ldr	r3, [pc, #272]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003c7e:	2200      	movs	r2, #0
 8003c80:	2104      	movs	r1, #4
 8003c82:	0018      	movs	r0, r3
 8003c84:	f001 fa37 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_RESET);
	                         HAL_Delay(14);
 8003c88:	200e      	movs	r0, #14
 8003c8a:	f000 fb6d 	bl	8004368 <HAL_Delay>

	                         // 2. Set Yellow (Red + Green)
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003c8e:	4b40      	ldr	r3, [pc, #256]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003c90:	2201      	movs	r2, #1
 8003c92:	2101      	movs	r1, #1
 8003c94:	0018      	movs	r0, r3
 8003c96:	f001 fa2e 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003c9a:	4b3d      	ldr	r3, [pc, #244]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003c9c:	2201      	movs	r2, #1
 8003c9e:	2102      	movs	r1, #2
 8003ca0:	0018      	movs	r0, r3
 8003ca2:	f001 fa28 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003ca6:	4b3a      	ldr	r3, [pc, #232]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003ca8:	2200      	movs	r2, #0
 8003caa:	2104      	movs	r1, #4
 8003cac:	0018      	movs	r0, r3
 8003cae:	f001 fa22 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_RESET);
	                         HAL_Delay(14);
 8003cb2:	200e      	movs	r0, #14
 8003cb4:	f000 fb58 	bl	8004368 <HAL_Delay>

	                         // 3. Set Green
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003cb8:	4b35      	ldr	r3, [pc, #212]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003cba:	2200      	movs	r2, #0
 8003cbc:	2101      	movs	r1, #1
 8003cbe:	0018      	movs	r0, r3
 8003cc0:	f001 fa19 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_RESET);
	                         HAL_GPIO_WritePin(
 8003cc4:	4b32      	ldr	r3, [pc, #200]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003cc6:	2201      	movs	r2, #1
 8003cc8:	2102      	movs	r1, #2
 8003cca:	0018      	movs	r0, r3
 8003ccc:	f001 fa13 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003cd0:	4b2f      	ldr	r3, [pc, #188]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003cd2:	2200      	movs	r2, #0
 8003cd4:	2104      	movs	r1, #4
 8003cd6:	0018      	movs	r0, r3
 8003cd8:	f001 fa0d 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_RESET);
	                         HAL_Delay(14);
 8003cdc:	200e      	movs	r0, #14
 8003cde:	f000 fb43 	bl	8004368 <HAL_Delay>

	                         // 4. Set Cyan (Green + Blue)
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003ce2:	4b2b      	ldr	r3, [pc, #172]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003ce4:	2200      	movs	r2, #0
 8003ce6:	2101      	movs	r1, #1
 8003ce8:	0018      	movs	r0, r3
 8003cea:	f001 fa04 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_RESET);
	                         HAL_GPIO_WritePin(
 8003cee:	4b28      	ldr	r3, [pc, #160]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003cf0:	2201      	movs	r2, #1
 8003cf2:	2102      	movs	r1, #2
 8003cf4:	0018      	movs	r0, r3
 8003cf6:	f001 f9fe 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003cfa:	4b25      	ldr	r3, [pc, #148]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003cfc:	2201      	movs	r2, #1
 8003cfe:	2104      	movs	r1, #4
 8003d00:	0018      	movs	r0, r3
 8003d02:	f001 f9f8 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_SET);
	                         HAL_Delay(14);
 8003d06:	200e      	movs	r0, #14
 8003d08:	f000 fb2e 	bl	8004368 <HAL_Delay>

	                         // 5. Set Blue
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003d0c:	4b20      	ldr	r3, [pc, #128]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d0e:	2200      	movs	r2, #0
 8003d10:	2101      	movs	r1, #1
 8003d12:	0018      	movs	r0, r3
 8003d14:	f001 f9ef 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_RESET);
	                         HAL_GPIO_WritePin(
 8003d18:	4b1d      	ldr	r3, [pc, #116]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d1a:	2200      	movs	r2, #0
 8003d1c:	2102      	movs	r1, #2
 8003d1e:	0018      	movs	r0, r3
 8003d20:	f001 f9e9 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_RESET);
	                         HAL_GPIO_WritePin(
 8003d24:	4b1a      	ldr	r3, [pc, #104]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d26:	2201      	movs	r2, #1
 8003d28:	2104      	movs	r1, #4
 8003d2a:	0018      	movs	r0, r3
 8003d2c:	f001 f9e3 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_SET);
	                         HAL_Delay(14);
 8003d30:	200e      	movs	r0, #14
 8003d32:	f000 fb19 	bl	8004368 <HAL_Delay>

	                         // 6. Set Magenta (Red + Blue)
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003d36:	4b16      	ldr	r3, [pc, #88]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d38:	2201      	movs	r2, #1
 8003d3a:	2101      	movs	r1, #1
 8003d3c:	0018      	movs	r0, r3
 8003d3e:	f001 f9da 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003d42:	4b13      	ldr	r3, [pc, #76]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d44:	2200      	movs	r2, #0
 8003d46:	2102      	movs	r1, #2
 8003d48:	0018      	movs	r0, r3
 8003d4a:	f001 f9d4 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_RESET);
	                         HAL_GPIO_WritePin(
 8003d4e:	4b10      	ldr	r3, [pc, #64]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d50:	2201      	movs	r2, #1
 8003d52:	2104      	movs	r1, #4
 8003d54:	0018      	movs	r0, r3
 8003d56:	f001 f9ce 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_SET);
	                         HAL_Delay(14);
 8003d5a:	200e      	movs	r0, #14
 8003d5c:	f000 fb04 	bl	8004368 <HAL_Delay>

	                         // 7. Set White (Red + Green + Blue)
	                         HAL_GPIO_WritePin(User_Input_Status_Light_GPIO_Port,
 8003d60:	4b0b      	ldr	r3, [pc, #44]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d62:	2201      	movs	r2, #1
 8003d64:	2101      	movs	r1, #1
 8003d66:	0018      	movs	r0, r3
 8003d68:	f001 f9c5 	bl	80050f6 <HAL_GPIO_WritePin>
	                                           User_Input_Status_Light_Pin,
	                                           GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003d6c:	4b08      	ldr	r3, [pc, #32]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d6e:	2201      	movs	r2, #1
 8003d70:	2102      	movs	r1, #2
 8003d72:	0018      	movs	r0, r3
 8003d74:	f001 f9bf 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Green_GPIO_Port,
	                             User_Input_Status_Light_Green_Pin, GPIO_PIN_SET);
	                         HAL_GPIO_WritePin(
 8003d78:	4b05      	ldr	r3, [pc, #20]	; (8003d90 <User_Input_Light_Cycel+0x130>)
 8003d7a:	2201      	movs	r2, #1
 8003d7c:	2104      	movs	r1, #4
 8003d7e:	0018      	movs	r0, r3
 8003d80:	f001 f9b9 	bl	80050f6 <HAL_GPIO_WritePin>
	                             User_Input_Status_Light_Blue_GPIO_Port,
	                             User_Input_Status_Light_Blue_Pin, GPIO_PIN_SET);
	                         HAL_Delay(14);
 8003d84:	200e      	movs	r0, #14
 8003d86:	f000 faef 	bl	8004368 <HAL_Delay>
}
 8003d8a:	46c0      	nop			; (mov r8, r8)
 8003d8c:	46bd      	mov	sp, r7
 8003d8e:	bd80      	pop	{r7, pc}
 8003d90:	50000400 	.word	0x50000400

08003d94 <Button_Debounce_Set>:

void Button_Debounce_Set(){
 8003d94:	b590      	push	{r4, r7, lr}
 8003d96:	b083      	sub	sp, #12
 8003d98:	af00      	add	r7, sp, #0
	uint8_t currentPlusState = HAL_GPIO_ReadPin(GPIOC, Plus_Pin);
 8003d9a:	1dfc      	adds	r4, r7, #7
 8003d9c:	4b79      	ldr	r3, [pc, #484]	; (8003f84 <Button_Debounce_Set+0x1f0>)
 8003d9e:	2102      	movs	r1, #2
 8003da0:	0018      	movs	r0, r3
 8003da2:	f001 f98b 	bl	80050bc <HAL_GPIO_ReadPin>
 8003da6:	0003      	movs	r3, r0
 8003da8:	7023      	strb	r3, [r4, #0]
	          uint8_t currentMinusState = HAL_GPIO_ReadPin(GPIOC, Minus_Pin);
 8003daa:	1dbc      	adds	r4, r7, #6
 8003dac:	4b75      	ldr	r3, [pc, #468]	; (8003f84 <Button_Debounce_Set+0x1f0>)
 8003dae:	2101      	movs	r1, #1
 8003db0:	0018      	movs	r0, r3
 8003db2:	f001 f983 	bl	80050bc <HAL_GPIO_ReadPin>
 8003db6:	0003      	movs	r3, r0
 8003db8:	7023      	strb	r3, [r4, #0]

	          if (currentPlusState == GPIO_PIN_SET ||
 8003dba:	1dfb      	adds	r3, r7, #7
 8003dbc:	781b      	ldrb	r3, [r3, #0]
 8003dbe:	2b01      	cmp	r3, #1
 8003dc0:	d004      	beq.n	8003dcc <Button_Debounce_Set+0x38>
 8003dc2:	1dbb      	adds	r3, r7, #6
 8003dc4:	781b      	ldrb	r3, [r3, #0]
 8003dc6:	2b01      	cmp	r3, #1
 8003dc8:	d000      	beq.n	8003dcc <Button_Debounce_Set+0x38>
 8003dca:	e0d6      	b.n	8003f7a <Button_Debounce_Set+0x1e6>
	              currentMinusState == GPIO_PIN_SET) {
	               // set to high state
	               if ((HAL_GetTick() - lastDebounceTime) > debounceDelay) {
 8003dcc:	f000 fac2 	bl	8004354 <HAL_GetTick>
 8003dd0:	0002      	movs	r2, r0
 8003dd2:	4b6d      	ldr	r3, [pc, #436]	; (8003f88 <Button_Debounce_Set+0x1f4>)
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	1ad3      	subs	r3, r2, r3
 8003dd8:	2232      	movs	r2, #50	; 0x32
 8003dda:	4293      	cmp	r3, r2
 8003ddc:	d800      	bhi.n	8003de0 <Button_Debounce_Set+0x4c>
 8003dde:	e0c4      	b.n	8003f6a <Button_Debounce_Set+0x1d6>
	                    // Only update the value if the state has changed
	                    if ((currentPlusState == GPIO_PIN_SET &&
 8003de0:	1dfb      	adds	r3, r7, #7
 8003de2:	781b      	ldrb	r3, [r3, #0]
 8003de4:	2b01      	cmp	r3, #1
 8003de6:	d103      	bne.n	8003df0 <Button_Debounce_Set+0x5c>
	                         lastPlusState != GPIO_PIN_SET) ||
 8003de8:	4b68      	ldr	r3, [pc, #416]	; (8003f8c <Button_Debounce_Set+0x1f8>)
 8003dea:	781b      	ldrb	r3, [r3, #0]
	                    if ((currentPlusState == GPIO_PIN_SET &&
 8003dec:	2b01      	cmp	r3, #1
 8003dee:	d107      	bne.n	8003e00 <Button_Debounce_Set+0x6c>
	                         lastPlusState != GPIO_PIN_SET) ||
 8003df0:	1dbb      	adds	r3, r7, #6
 8003df2:	781b      	ldrb	r3, [r3, #0]
 8003df4:	2b01      	cmp	r3, #1
 8003df6:	d138      	bne.n	8003e6a <Button_Debounce_Set+0xd6>
	                        (currentMinusState == GPIO_PIN_SET &&
	                         lastMinusState != GPIO_PIN_SET)) {
 8003df8:	4b65      	ldr	r3, [pc, #404]	; (8003f90 <Button_Debounce_Set+0x1fc>)
 8003dfa:	781b      	ldrb	r3, [r3, #0]
	                        (currentMinusState == GPIO_PIN_SET &&
 8003dfc:	2b01      	cmp	r3, #1
 8003dfe:	d034      	beq.n	8003e6a <Button_Debounce_Set+0xd6>
	                         if (currentPlusState == GPIO_PIN_SET) {
 8003e00:	1dfb      	adds	r3, r7, #7
 8003e02:	781b      	ldrb	r3, [r3, #0]
 8003e04:	2b01      	cmp	r3, #1
 8003e06:	d116      	bne.n	8003e36 <Button_Debounce_Set+0xa2>
	                              valueToAdjust++;
 8003e08:	4b62      	ldr	r3, [pc, #392]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	21fe      	movs	r1, #254	; 0xfe
 8003e0e:	0589      	lsls	r1, r1, #22
 8003e10:	1c18      	adds	r0, r3, #0
 8003e12:	f7fc fd0d 	bl	8000830 <__aeabi_fadd>
 8003e16:	1c03      	adds	r3, r0, #0
 8003e18:	1c1a      	adds	r2, r3, #0
 8003e1a:	4b5e      	ldr	r3, [pc, #376]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e1c:	601a      	str	r2, [r3, #0]
	                              if (valueToAdjust >= 7) {
 8003e1e:	4b5d      	ldr	r3, [pc, #372]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	495d      	ldr	r1, [pc, #372]	; (8003f98 <Button_Debounce_Set+0x204>)
 8003e24:	1c18      	adds	r0, r3, #0
 8003e26:	f7fc fb6f 	bl	8000508 <__aeabi_fcmpge>
 8003e2a:	1e03      	subs	r3, r0, #0
 8003e2c:	d01d      	beq.n	8003e6a <Button_Debounce_Set+0xd6>
	                                   valueToAdjust = 7;
 8003e2e:	4b59      	ldr	r3, [pc, #356]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e30:	4a59      	ldr	r2, [pc, #356]	; (8003f98 <Button_Debounce_Set+0x204>)
 8003e32:	601a      	str	r2, [r3, #0]
 8003e34:	e019      	b.n	8003e6a <Button_Debounce_Set+0xd6>
	                              }
	                         }

	                         else if (currentMinusState == GPIO_PIN_SET) {
 8003e36:	1dbb      	adds	r3, r7, #6
 8003e38:	781b      	ldrb	r3, [r3, #0]
 8003e3a:	2b01      	cmp	r3, #1
 8003e3c:	d115      	bne.n	8003e6a <Button_Debounce_Set+0xd6>
	                              valueToAdjust--;
 8003e3e:	4b55      	ldr	r3, [pc, #340]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	21fe      	movs	r1, #254	; 0xfe
 8003e44:	0589      	lsls	r1, r1, #22
 8003e46:	1c18      	adds	r0, r3, #0
 8003e48:	f7fd f9aa 	bl	80011a0 <__aeabi_fsub>
 8003e4c:	1c03      	adds	r3, r0, #0
 8003e4e:	1c1a      	adds	r2, r3, #0
 8003e50:	4b50      	ldr	r3, [pc, #320]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e52:	601a      	str	r2, [r3, #0]
	                              if (valueToAdjust < 0) {
 8003e54:	4b4f      	ldr	r3, [pc, #316]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	2100      	movs	r1, #0
 8003e5a:	1c18      	adds	r0, r3, #0
 8003e5c:	f7fc fb36 	bl	80004cc <__aeabi_fcmplt>
 8003e60:	1e03      	subs	r3, r0, #0
 8003e62:	d002      	beq.n	8003e6a <Button_Debounce_Set+0xd6>
	                                   valueToAdjust = 0;
 8003e64:	4b4b      	ldr	r3, [pc, #300]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003e66:	2200      	movs	r2, #0
 8003e68:	601a      	str	r2, [r3, #0]
	                              }
	                         }
	                    }

	                    flashingStartTime = HAL_GetTick();
 8003e6a:	f000 fa73 	bl	8004354 <HAL_GetTick>
 8003e6e:	0002      	movs	r2, r0
 8003e70:	4b4a      	ldr	r3, [pc, #296]	; (8003f9c <Button_Debounce_Set+0x208>)
 8003e72:	601a      	str	r2, [r3, #0]
	                    while ((HAL_GetTick() - flashingStartTime) <
 8003e74:	e06b      	b.n	8003f4e <Button_Debounce_Set+0x1ba>
	                           flashingDuration) {
	                         // Save the last state before reading the current state
	                         lastPlusState = currentPlusState;
 8003e76:	4b45      	ldr	r3, [pc, #276]	; (8003f8c <Button_Debounce_Set+0x1f8>)
 8003e78:	1dfa      	adds	r2, r7, #7
 8003e7a:	7812      	ldrb	r2, [r2, #0]
 8003e7c:	701a      	strb	r2, [r3, #0]
	                         lastMinusState = currentMinusState;
 8003e7e:	4b44      	ldr	r3, [pc, #272]	; (8003f90 <Button_Debounce_Set+0x1fc>)
 8003e80:	1dba      	adds	r2, r7, #6
 8003e82:	7812      	ldrb	r2, [r2, #0]
 8003e84:	701a      	strb	r2, [r3, #0]

	                         currentPlusState = HAL_GPIO_ReadPin(GPIOC, Plus_Pin);
 8003e86:	1dfc      	adds	r4, r7, #7
 8003e88:	4b3e      	ldr	r3, [pc, #248]	; (8003f84 <Button_Debounce_Set+0x1f0>)
 8003e8a:	2102      	movs	r1, #2
 8003e8c:	0018      	movs	r0, r3
 8003e8e:	f001 f915 	bl	80050bc <HAL_GPIO_ReadPin>
 8003e92:	0003      	movs	r3, r0
 8003e94:	7023      	strb	r3, [r4, #0]
	                         currentMinusState = HAL_GPIO_ReadPin(GPIOC, Minus_Pin);
 8003e96:	1dbc      	adds	r4, r7, #6
 8003e98:	4b3a      	ldr	r3, [pc, #232]	; (8003f84 <Button_Debounce_Set+0x1f0>)
 8003e9a:	2101      	movs	r1, #1
 8003e9c:	0018      	movs	r0, r3
 8003e9e:	f001 f90d 	bl	80050bc <HAL_GPIO_ReadPin>
 8003ea2:	0003      	movs	r3, r0
 8003ea4:	7023      	strb	r3, [r4, #0]

	                         // Check for subsequent button presses to restart the
	                         // timer
	                         if (currentPlusState == GPIO_PIN_SET ||
 8003ea6:	1dfb      	adds	r3, r7, #7
 8003ea8:	781b      	ldrb	r3, [r3, #0]
 8003eaa:	2b01      	cmp	r3, #1
 8003eac:	d003      	beq.n	8003eb6 <Button_Debounce_Set+0x122>
 8003eae:	1dbb      	adds	r3, r7, #6
 8003eb0:	781b      	ldrb	r3, [r3, #0]
 8003eb2:	2b01      	cmp	r3, #1
 8003eb4:	d149      	bne.n	8003f4a <Button_Debounce_Set+0x1b6>
	                             currentMinusState == GPIO_PIN_SET) {
	                              flashingStartTime =
	                                  HAL_GetTick();  // Restart the 5-second
 8003eb6:	f000 fa4d 	bl	8004354 <HAL_GetTick>
 8003eba:	0002      	movs	r2, r0
	                              flashingStartTime =
 8003ebc:	4b37      	ldr	r3, [pc, #220]	; (8003f9c <Button_Debounce_Set+0x208>)
 8003ebe:	601a      	str	r2, [r3, #0]
	                                                  // interval

	                              // Only update the value if the state has changed
	                              if ((currentPlusState == GPIO_PIN_SET &&
 8003ec0:	1dfb      	adds	r3, r7, #7
 8003ec2:	781b      	ldrb	r3, [r3, #0]
 8003ec4:	2b01      	cmp	r3, #1
 8003ec6:	d103      	bne.n	8003ed0 <Button_Debounce_Set+0x13c>
	                                   lastPlusState != GPIO_PIN_SET) ||
 8003ec8:	4b30      	ldr	r3, [pc, #192]	; (8003f8c <Button_Debounce_Set+0x1f8>)
 8003eca:	781b      	ldrb	r3, [r3, #0]
	                              if ((currentPlusState == GPIO_PIN_SET &&
 8003ecc:	2b01      	cmp	r3, #1
 8003ece:	d107      	bne.n	8003ee0 <Button_Debounce_Set+0x14c>
	                                   lastPlusState != GPIO_PIN_SET) ||
 8003ed0:	1dbb      	adds	r3, r7, #6
 8003ed2:	781b      	ldrb	r3, [r3, #0]
 8003ed4:	2b01      	cmp	r3, #1
 8003ed6:	d138      	bne.n	8003f4a <Button_Debounce_Set+0x1b6>
	                                  (currentMinusState == GPIO_PIN_SET &&
	                                   lastMinusState != GPIO_PIN_SET)) {
 8003ed8:	4b2d      	ldr	r3, [pc, #180]	; (8003f90 <Button_Debounce_Set+0x1fc>)
 8003eda:	781b      	ldrb	r3, [r3, #0]
	                                  (currentMinusState == GPIO_PIN_SET &&
 8003edc:	2b01      	cmp	r3, #1
 8003ede:	d034      	beq.n	8003f4a <Button_Debounce_Set+0x1b6>
	                                   if (currentPlusState == GPIO_PIN_SET) {
 8003ee0:	1dfb      	adds	r3, r7, #7
 8003ee2:	781b      	ldrb	r3, [r3, #0]
 8003ee4:	2b01      	cmp	r3, #1
 8003ee6:	d116      	bne.n	8003f16 <Button_Debounce_Set+0x182>
	                                        valueToAdjust++;
 8003ee8:	4b2a      	ldr	r3, [pc, #168]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	21fe      	movs	r1, #254	; 0xfe
 8003eee:	0589      	lsls	r1, r1, #22
 8003ef0:	1c18      	adds	r0, r3, #0
 8003ef2:	f7fc fc9d 	bl	8000830 <__aeabi_fadd>
 8003ef6:	1c03      	adds	r3, r0, #0
 8003ef8:	1c1a      	adds	r2, r3, #0
 8003efa:	4b26      	ldr	r3, [pc, #152]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003efc:	601a      	str	r2, [r3, #0]
	                                        if (valueToAdjust >= 7) {
 8003efe:	4b25      	ldr	r3, [pc, #148]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	4925      	ldr	r1, [pc, #148]	; (8003f98 <Button_Debounce_Set+0x204>)
 8003f04:	1c18      	adds	r0, r3, #0
 8003f06:	f7fc faff 	bl	8000508 <__aeabi_fcmpge>
 8003f0a:	1e03      	subs	r3, r0, #0
 8003f0c:	d01d      	beq.n	8003f4a <Button_Debounce_Set+0x1b6>
	                                             valueToAdjust = 7;
 8003f0e:	4b21      	ldr	r3, [pc, #132]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003f10:	4a21      	ldr	r2, [pc, #132]	; (8003f98 <Button_Debounce_Set+0x204>)
 8003f12:	601a      	str	r2, [r3, #0]
 8003f14:	e019      	b.n	8003f4a <Button_Debounce_Set+0x1b6>
	                                        }
	                                   }

	                                   else if (currentMinusState == GPIO_PIN_SET) {
 8003f16:	1dbb      	adds	r3, r7, #6
 8003f18:	781b      	ldrb	r3, [r3, #0]
 8003f1a:	2b01      	cmp	r3, #1
 8003f1c:	d115      	bne.n	8003f4a <Button_Debounce_Set+0x1b6>
	                                        valueToAdjust--;
 8003f1e:	4b1d      	ldr	r3, [pc, #116]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	21fe      	movs	r1, #254	; 0xfe
 8003f24:	0589      	lsls	r1, r1, #22
 8003f26:	1c18      	adds	r0, r3, #0
 8003f28:	f7fd f93a 	bl	80011a0 <__aeabi_fsub>
 8003f2c:	1c03      	adds	r3, r0, #0
 8003f2e:	1c1a      	adds	r2, r3, #0
 8003f30:	4b18      	ldr	r3, [pc, #96]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003f32:	601a      	str	r2, [r3, #0]
	                                        if (valueToAdjust < 0) {
 8003f34:	4b17      	ldr	r3, [pc, #92]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	2100      	movs	r1, #0
 8003f3a:	1c18      	adds	r0, r3, #0
 8003f3c:	f7fc fac6 	bl	80004cc <__aeabi_fcmplt>
 8003f40:	1e03      	subs	r3, r0, #0
 8003f42:	d002      	beq.n	8003f4a <Button_Debounce_Set+0x1b6>
	                                             valueToAdjust = 0;
 8003f44:	4b13      	ldr	r3, [pc, #76]	; (8003f94 <Button_Debounce_Set+0x200>)
 8003f46:	2200      	movs	r2, #0
 8003f48:	601a      	str	r2, [r3, #0]

	                              // HAL_GPIO_TogglePin(User_Input_Status_Light_GPIO_Port,
	                              // User_Input_Status_Light_Pin); HAL_Delay(100);
	                         }
	                         // 1. Set Red
	                         User_Input_Light_Cycel();
 8003f4a:	f7ff fe89 	bl	8003c60 <User_Input_Light_Cycel>
	                    while ((HAL_GetTick() - flashingStartTime) <
 8003f4e:	f000 fa01 	bl	8004354 <HAL_GetTick>
 8003f52:	0002      	movs	r2, r0
 8003f54:	4b11      	ldr	r3, [pc, #68]	; (8003f9c <Button_Debounce_Set+0x208>)
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	1ad3      	subs	r3, r2, r3
 8003f5a:	2296      	movs	r2, #150	; 0x96
 8003f5c:	4293      	cmp	r3, r2
 8003f5e:	d38a      	bcc.n	8003e76 <Button_Debounce_Set+0xe2>
	                    }
	                    lastDebounceTime = HAL_GetTick();
 8003f60:	f000 f9f8 	bl	8004354 <HAL_GetTick>
 8003f64:	0002      	movs	r2, r0
 8003f66:	4b08      	ldr	r3, [pc, #32]	; (8003f88 <Button_Debounce_Set+0x1f4>)
 8003f68:	601a      	str	r2, [r3, #0]
	               }

	               // Save the last state at the end of the loop
	               lastPlusState = currentPlusState;
 8003f6a:	4b08      	ldr	r3, [pc, #32]	; (8003f8c <Button_Debounce_Set+0x1f8>)
 8003f6c:	1dfa      	adds	r2, r7, #7
 8003f6e:	7812      	ldrb	r2, [r2, #0]
 8003f70:	701a      	strb	r2, [r3, #0]
	               lastMinusState = currentMinusState;
 8003f72:	4b07      	ldr	r3, [pc, #28]	; (8003f90 <Button_Debounce_Set+0x1fc>)
 8003f74:	1dba      	adds	r2, r7, #6
 8003f76:	7812      	ldrb	r2, [r2, #0]
 8003f78:	701a      	strb	r2, [r3, #0]

	               /* USER CODE END WHILE */

	               /* USER CODE BEGIN 3 */
	          }
}
 8003f7a:	46c0      	nop			; (mov r8, r8)
 8003f7c:	46bd      	mov	sp, r7
 8003f7e:	b003      	add	sp, #12
 8003f80:	bd90      	pop	{r4, r7, pc}
 8003f82:	46c0      	nop			; (mov r8, r8)
 8003f84:	50000800 	.word	0x50000800
 8003f88:	20000260 	.word	0x20000260
 8003f8c:	2000026c 	.word	0x2000026c
 8003f90:	2000026d 	.word	0x2000026d
 8003f94:	20000268 	.word	0x20000268
 8003f98:	40e00000 	.word	0x40e00000
 8003f9c:	20000264 	.word	0x20000264

08003fa0 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8003fa0:	b580      	push	{r7, lr}
 8003fa2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003fa4:	b672      	cpsid	i
}
 8003fa6:	46c0      	nop			; (mov r8, r8)
     /* USER CODE BEGIN Error_Handler_Debug */
     /* User can add his own implementation to report the HAL error return state
      */
     __disable_irq();
     while (1) {
 8003fa8:	e7fe      	b.n	8003fa8 <Error_Handler+0x8>
	...

08003fac <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003fac:	b580      	push	{r7, lr}
 8003fae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003fb0:	4b07      	ldr	r3, [pc, #28]	; (8003fd0 <HAL_MspInit+0x24>)
 8003fb2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003fb4:	4b06      	ldr	r3, [pc, #24]	; (8003fd0 <HAL_MspInit+0x24>)
 8003fb6:	2101      	movs	r1, #1
 8003fb8:	430a      	orrs	r2, r1
 8003fba:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8003fbc:	4b04      	ldr	r3, [pc, #16]	; (8003fd0 <HAL_MspInit+0x24>)
 8003fbe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003fc0:	4b03      	ldr	r3, [pc, #12]	; (8003fd0 <HAL_MspInit+0x24>)
 8003fc2:	2180      	movs	r1, #128	; 0x80
 8003fc4:	0549      	lsls	r1, r1, #21
 8003fc6:	430a      	orrs	r2, r1
 8003fc8:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003fca:	46c0      	nop			; (mov r8, r8)
 8003fcc:	46bd      	mov	sp, r7
 8003fce:	bd80      	pop	{r7, pc}
 8003fd0:	40021000 	.word	0x40021000

08003fd4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8003fd4:	b590      	push	{r4, r7, lr}
 8003fd6:	b089      	sub	sp, #36	; 0x24
 8003fd8:	af00      	add	r7, sp, #0
 8003fda:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003fdc:	240c      	movs	r4, #12
 8003fde:	193b      	adds	r3, r7, r4
 8003fe0:	0018      	movs	r0, r3
 8003fe2:	2314      	movs	r3, #20
 8003fe4:	001a      	movs	r2, r3
 8003fe6:	2100      	movs	r1, #0
 8003fe8:	f002 fdc2 	bl	8006b70 <memset>
  if(hadc->Instance==ADC1)
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	4a14      	ldr	r2, [pc, #80]	; (8004044 <HAL_ADC_MspInit+0x70>)
 8003ff2:	4293      	cmp	r3, r2
 8003ff4:	d121      	bne.n	800403a <HAL_ADC_MspInit+0x66>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8003ff6:	4b14      	ldr	r3, [pc, #80]	; (8004048 <HAL_ADC_MspInit+0x74>)
 8003ff8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003ffa:	4b13      	ldr	r3, [pc, #76]	; (8004048 <HAL_ADC_MspInit+0x74>)
 8003ffc:	2180      	movs	r1, #128	; 0x80
 8003ffe:	0089      	lsls	r1, r1, #2
 8004000:	430a      	orrs	r2, r1
 8004002:	635a      	str	r2, [r3, #52]	; 0x34

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004004:	4b10      	ldr	r3, [pc, #64]	; (8004048 <HAL_ADC_MspInit+0x74>)
 8004006:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004008:	4b0f      	ldr	r3, [pc, #60]	; (8004048 <HAL_ADC_MspInit+0x74>)
 800400a:	2104      	movs	r1, #4
 800400c:	430a      	orrs	r2, r1
 800400e:	62da      	str	r2, [r3, #44]	; 0x2c
 8004010:	4b0d      	ldr	r3, [pc, #52]	; (8004048 <HAL_ADC_MspInit+0x74>)
 8004012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004014:	2204      	movs	r2, #4
 8004016:	4013      	ands	r3, r2
 8004018:	60bb      	str	r3, [r7, #8]
 800401a:	68bb      	ldr	r3, [r7, #8]
    PC2     ------> ADC_IN12
    PC3     ------> ADC_IN13
    PC4     ------> ADC_IN14
    PC5     ------> ADC_IN15
    */
    GPIO_InitStruct.Pin = Current_ADC_CMOS_Pin|Voltage_ADC_CMOS_Pin|Current_ADC_18650_Pin|Voltage_ADC_18650_Pin;
 800401c:	193b      	adds	r3, r7, r4
 800401e:	223c      	movs	r2, #60	; 0x3c
 8004020:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8004022:	193b      	adds	r3, r7, r4
 8004024:	2203      	movs	r2, #3
 8004026:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004028:	193b      	adds	r3, r7, r4
 800402a:	2200      	movs	r2, #0
 800402c:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800402e:	193b      	adds	r3, r7, r4
 8004030:	4a06      	ldr	r2, [pc, #24]	; (800404c <HAL_ADC_MspInit+0x78>)
 8004032:	0019      	movs	r1, r3
 8004034:	0010      	movs	r0, r2
 8004036:	f000 fec3 	bl	8004dc0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800403a:	46c0      	nop			; (mov r8, r8)
 800403c:	46bd      	mov	sp, r7
 800403e:	b009      	add	sp, #36	; 0x24
 8004040:	bd90      	pop	{r4, r7, pc}
 8004042:	46c0      	nop			; (mov r8, r8)
 8004044:	40012400 	.word	0x40012400
 8004048:	40021000 	.word	0x40021000
 800404c:	50000800 	.word	0x50000800

08004050 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 8004050:	b580      	push	{r7, lr}
 8004052:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004054:	e7fe      	b.n	8004054 <NMI_Handler+0x4>

08004056 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004056:	b580      	push	{r7, lr}
 8004058:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800405a:	e7fe      	b.n	800405a <HardFault_Handler+0x4>

0800405c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800405c:	b580      	push	{r7, lr}
 800405e:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8004060:	46c0      	nop			; (mov r8, r8)
 8004062:	46bd      	mov	sp, r7
 8004064:	bd80      	pop	{r7, pc}

08004066 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004066:	b580      	push	{r7, lr}
 8004068:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN PendSV_IRQn 0 */
  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800406a:	46c0      	nop			; (mov r8, r8)
 800406c:	46bd      	mov	sp, r7
 800406e:	bd80      	pop	{r7, pc}

08004070 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004070:	b580      	push	{r7, lr}
 8004072:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */


  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004074:	f000 f95c 	bl	8004330 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004078:	46c0      	nop			; (mov r8, r8)
 800407a:	46bd      	mov	sp, r7
 800407c:	bd80      	pop	{r7, pc}

0800407e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800407e:	b580      	push	{r7, lr}
 8004080:	af00      	add	r7, sp, #0
  return 1;
 8004082:	2301      	movs	r3, #1
}
 8004084:	0018      	movs	r0, r3
 8004086:	46bd      	mov	sp, r7
 8004088:	bd80      	pop	{r7, pc}

0800408a <_kill>:

int _kill(int pid, int sig)
{
 800408a:	b580      	push	{r7, lr}
 800408c:	b082      	sub	sp, #8
 800408e:	af00      	add	r7, sp, #0
 8004090:	6078      	str	r0, [r7, #4]
 8004092:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8004094:	f002 fdc6 	bl	8006c24 <__errno>
 8004098:	0003      	movs	r3, r0
 800409a:	2216      	movs	r2, #22
 800409c:	601a      	str	r2, [r3, #0]
  return -1;
 800409e:	2301      	movs	r3, #1
 80040a0:	425b      	negs	r3, r3
}
 80040a2:	0018      	movs	r0, r3
 80040a4:	46bd      	mov	sp, r7
 80040a6:	b002      	add	sp, #8
 80040a8:	bd80      	pop	{r7, pc}

080040aa <_exit>:

void _exit (int status)
{
 80040aa:	b580      	push	{r7, lr}
 80040ac:	b082      	sub	sp, #8
 80040ae:	af00      	add	r7, sp, #0
 80040b0:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80040b2:	2301      	movs	r3, #1
 80040b4:	425a      	negs	r2, r3
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	0011      	movs	r1, r2
 80040ba:	0018      	movs	r0, r3
 80040bc:	f7ff ffe5 	bl	800408a <_kill>
  while (1) {}    /* Make sure we hang here */
 80040c0:	e7fe      	b.n	80040c0 <_exit+0x16>

080040c2 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80040c2:	b580      	push	{r7, lr}
 80040c4:	b086      	sub	sp, #24
 80040c6:	af00      	add	r7, sp, #0
 80040c8:	60f8      	str	r0, [r7, #12]
 80040ca:	60b9      	str	r1, [r7, #8]
 80040cc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80040ce:	2300      	movs	r3, #0
 80040d0:	617b      	str	r3, [r7, #20]
 80040d2:	e00a      	b.n	80040ea <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80040d4:	e000      	b.n	80040d8 <_read+0x16>
 80040d6:	bf00      	nop
 80040d8:	0001      	movs	r1, r0
 80040da:	68bb      	ldr	r3, [r7, #8]
 80040dc:	1c5a      	adds	r2, r3, #1
 80040de:	60ba      	str	r2, [r7, #8]
 80040e0:	b2ca      	uxtb	r2, r1
 80040e2:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80040e4:	697b      	ldr	r3, [r7, #20]
 80040e6:	3301      	adds	r3, #1
 80040e8:	617b      	str	r3, [r7, #20]
 80040ea:	697a      	ldr	r2, [r7, #20]
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	429a      	cmp	r2, r3
 80040f0:	dbf0      	blt.n	80040d4 <_read+0x12>
  }

  return len;
 80040f2:	687b      	ldr	r3, [r7, #4]
}
 80040f4:	0018      	movs	r0, r3
 80040f6:	46bd      	mov	sp, r7
 80040f8:	b006      	add	sp, #24
 80040fa:	bd80      	pop	{r7, pc}

080040fc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80040fc:	b580      	push	{r7, lr}
 80040fe:	b086      	sub	sp, #24
 8004100:	af00      	add	r7, sp, #0
 8004102:	60f8      	str	r0, [r7, #12]
 8004104:	60b9      	str	r1, [r7, #8]
 8004106:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004108:	2300      	movs	r3, #0
 800410a:	617b      	str	r3, [r7, #20]
 800410c:	e009      	b.n	8004122 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800410e:	68bb      	ldr	r3, [r7, #8]
 8004110:	1c5a      	adds	r2, r3, #1
 8004112:	60ba      	str	r2, [r7, #8]
 8004114:	781b      	ldrb	r3, [r3, #0]
 8004116:	0018      	movs	r0, r3
 8004118:	f7ff fa6c 	bl	80035f4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800411c:	697b      	ldr	r3, [r7, #20]
 800411e:	3301      	adds	r3, #1
 8004120:	617b      	str	r3, [r7, #20]
 8004122:	697a      	ldr	r2, [r7, #20]
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	429a      	cmp	r2, r3
 8004128:	dbf1      	blt.n	800410e <_write+0x12>
  }
  return len;
 800412a:	687b      	ldr	r3, [r7, #4]
}
 800412c:	0018      	movs	r0, r3
 800412e:	46bd      	mov	sp, r7
 8004130:	b006      	add	sp, #24
 8004132:	bd80      	pop	{r7, pc}

08004134 <_close>:

int _close(int file)
{
 8004134:	b580      	push	{r7, lr}
 8004136:	b082      	sub	sp, #8
 8004138:	af00      	add	r7, sp, #0
 800413a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800413c:	2301      	movs	r3, #1
 800413e:	425b      	negs	r3, r3
}
 8004140:	0018      	movs	r0, r3
 8004142:	46bd      	mov	sp, r7
 8004144:	b002      	add	sp, #8
 8004146:	bd80      	pop	{r7, pc}

08004148 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004148:	b580      	push	{r7, lr}
 800414a:	b082      	sub	sp, #8
 800414c:	af00      	add	r7, sp, #0
 800414e:	6078      	str	r0, [r7, #4]
 8004150:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8004152:	683b      	ldr	r3, [r7, #0]
 8004154:	2280      	movs	r2, #128	; 0x80
 8004156:	0192      	lsls	r2, r2, #6
 8004158:	605a      	str	r2, [r3, #4]
  return 0;
 800415a:	2300      	movs	r3, #0
}
 800415c:	0018      	movs	r0, r3
 800415e:	46bd      	mov	sp, r7
 8004160:	b002      	add	sp, #8
 8004162:	bd80      	pop	{r7, pc}

08004164 <_isatty>:

int _isatty(int file)
{
 8004164:	b580      	push	{r7, lr}
 8004166:	b082      	sub	sp, #8
 8004168:	af00      	add	r7, sp, #0
 800416a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800416c:	2301      	movs	r3, #1
}
 800416e:	0018      	movs	r0, r3
 8004170:	46bd      	mov	sp, r7
 8004172:	b002      	add	sp, #8
 8004174:	bd80      	pop	{r7, pc}

08004176 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8004176:	b580      	push	{r7, lr}
 8004178:	b084      	sub	sp, #16
 800417a:	af00      	add	r7, sp, #0
 800417c:	60f8      	str	r0, [r7, #12]
 800417e:	60b9      	str	r1, [r7, #8]
 8004180:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8004182:	2300      	movs	r3, #0
}
 8004184:	0018      	movs	r0, r3
 8004186:	46bd      	mov	sp, r7
 8004188:	b004      	add	sp, #16
 800418a:	bd80      	pop	{r7, pc}

0800418c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800418c:	b580      	push	{r7, lr}
 800418e:	b086      	sub	sp, #24
 8004190:	af00      	add	r7, sp, #0
 8004192:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004194:	4a14      	ldr	r2, [pc, #80]	; (80041e8 <_sbrk+0x5c>)
 8004196:	4b15      	ldr	r3, [pc, #84]	; (80041ec <_sbrk+0x60>)
 8004198:	1ad3      	subs	r3, r2, r3
 800419a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800419c:	697b      	ldr	r3, [r7, #20]
 800419e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80041a0:	4b13      	ldr	r3, [pc, #76]	; (80041f0 <_sbrk+0x64>)
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	2b00      	cmp	r3, #0
 80041a6:	d102      	bne.n	80041ae <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80041a8:	4b11      	ldr	r3, [pc, #68]	; (80041f0 <_sbrk+0x64>)
 80041aa:	4a12      	ldr	r2, [pc, #72]	; (80041f4 <_sbrk+0x68>)
 80041ac:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80041ae:	4b10      	ldr	r3, [pc, #64]	; (80041f0 <_sbrk+0x64>)
 80041b0:	681a      	ldr	r2, [r3, #0]
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	18d3      	adds	r3, r2, r3
 80041b6:	693a      	ldr	r2, [r7, #16]
 80041b8:	429a      	cmp	r2, r3
 80041ba:	d207      	bcs.n	80041cc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80041bc:	f002 fd32 	bl	8006c24 <__errno>
 80041c0:	0003      	movs	r3, r0
 80041c2:	220c      	movs	r2, #12
 80041c4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80041c6:	2301      	movs	r3, #1
 80041c8:	425b      	negs	r3, r3
 80041ca:	e009      	b.n	80041e0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80041cc:	4b08      	ldr	r3, [pc, #32]	; (80041f0 <_sbrk+0x64>)
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80041d2:	4b07      	ldr	r3, [pc, #28]	; (80041f0 <_sbrk+0x64>)
 80041d4:	681a      	ldr	r2, [r3, #0]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	18d2      	adds	r2, r2, r3
 80041da:	4b05      	ldr	r3, [pc, #20]	; (80041f0 <_sbrk+0x64>)
 80041dc:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80041de:	68fb      	ldr	r3, [r7, #12]
}
 80041e0:	0018      	movs	r0, r3
 80041e2:	46bd      	mov	sp, r7
 80041e4:	b006      	add	sp, #24
 80041e6:	bd80      	pop	{r7, pc}
 80041e8:	20005000 	.word	0x20005000
 80041ec:	00000400 	.word	0x00000400
 80041f0:	20000270 	.word	0x20000270
 80041f4:	200003c8 	.word	0x200003c8

080041f8 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80041f8:	b580      	push	{r7, lr}
 80041fa:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80041fc:	46c0      	nop			; (mov r8, r8)
 80041fe:	46bd      	mov	sp, r7
 8004200:	bd80      	pop	{r7, pc}
	...

08004204 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8004204:	4813      	ldr	r0, [pc, #76]	; (8004254 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 8004206:	4685      	mov	sp, r0
   
/* Call the clock system initialization function.*/
  bl  SystemInit
 8004208:	f7ff fff6 	bl	80041f8 <SystemInit>

/*Check if boot space corresponds to system memory*/

    LDR R0,=0x00000004
 800420c:	4812      	ldr	r0, [pc, #72]	; (8004258 <LoopForever+0x6>)
    LDR R1, [R0]
 800420e:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 8004210:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 8004212:	4a12      	ldr	r2, [pc, #72]	; (800425c <LoopForever+0xa>)
    CMP R1, R2
 8004214:	4291      	cmp	r1, r2
    BNE ApplicationStart
 8004216:	d105      	bne.n	8004224 <ApplicationStart>

 /*SYSCFG clock enable*/
    LDR R0,=0x40021034
 8004218:	4811      	ldr	r0, [pc, #68]	; (8004260 <LoopForever+0xe>)
    LDR R1,=0x00000001
 800421a:	4912      	ldr	r1, [pc, #72]	; (8004264 <LoopForever+0x12>)
    STR R1, [R0]
 800421c:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 800421e:	4812      	ldr	r0, [pc, #72]	; (8004268 <LoopForever+0x16>)
    LDR R1,=0x00000000
 8004220:	4912      	ldr	r1, [pc, #72]	; (800426c <LoopForever+0x1a>)
    STR R1, [R0]
 8004222:	6001      	str	r1, [r0, #0]

08004224 <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8004224:	4812      	ldr	r0, [pc, #72]	; (8004270 <LoopForever+0x1e>)
  ldr r1, =_edata
 8004226:	4913      	ldr	r1, [pc, #76]	; (8004274 <LoopForever+0x22>)
  ldr r2, =_sidata
 8004228:	4a13      	ldr	r2, [pc, #76]	; (8004278 <LoopForever+0x26>)
  movs r3, #0
 800422a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800422c:	e002      	b.n	8004234 <LoopCopyDataInit>

0800422e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800422e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8004230:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8004232:	3304      	adds	r3, #4

08004234 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8004234:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8004236:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8004238:	d3f9      	bcc.n	800422e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800423a:	4a10      	ldr	r2, [pc, #64]	; (800427c <LoopForever+0x2a>)
  ldr r4, =_ebss
 800423c:	4c10      	ldr	r4, [pc, #64]	; (8004280 <LoopForever+0x2e>)
  movs r3, #0
 800423e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8004240:	e001      	b.n	8004246 <LoopFillZerobss>

08004242 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8004242:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8004244:	3204      	adds	r2, #4

08004246 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8004246:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8004248:	d3fb      	bcc.n	8004242 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800424a:	f002 fcf1 	bl	8006c30 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800424e:	f7ff f891 	bl	8003374 <main>

08004252 <LoopForever>:

LoopForever:
    b LoopForever
 8004252:	e7fe      	b.n	8004252 <LoopForever>
   ldr   r0, =_estack
 8004254:	20005000 	.word	0x20005000
    LDR R0,=0x00000004
 8004258:	00000004 	.word	0x00000004
    LDR R2,=0x1F
 800425c:	0000001f 	.word	0x0000001f
    LDR R0,=0x40021034
 8004260:	40021034 	.word	0x40021034
    LDR R1,=0x00000001
 8004264:	00000001 	.word	0x00000001
    LDR R0,=0x40010000
 8004268:	40010000 	.word	0x40010000
    LDR R1,=0x00000000
 800426c:	00000000 	.word	0x00000000
  ldr r0, =_sdata
 8004270:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8004274:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8004278:	0800aa50 	.word	0x0800aa50
  ldr r2, =_sbss
 800427c:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8004280:	200003c4 	.word	0x200003c4

08004284 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8004284:	e7fe      	b.n	8004284 <ADC1_IRQHandler>
	...

08004288 <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004288:	b580      	push	{r7, lr}
 800428a:	b082      	sub	sp, #8
 800428c:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 800428e:	1dfb      	adds	r3, r7, #7
 8004290:	2200      	movs	r2, #0
 8004292:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8004294:	4b0b      	ldr	r3, [pc, #44]	; (80042c4 <HAL_Init+0x3c>)
 8004296:	681a      	ldr	r2, [r3, #0]
 8004298:	4b0a      	ldr	r3, [pc, #40]	; (80042c4 <HAL_Init+0x3c>)
 800429a:	2140      	movs	r1, #64	; 0x40
 800429c:	430a      	orrs	r2, r1
 800429e:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80042a0:	2003      	movs	r0, #3
 80042a2:	f000 f811 	bl	80042c8 <HAL_InitTick>
 80042a6:	1e03      	subs	r3, r0, #0
 80042a8:	d003      	beq.n	80042b2 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 80042aa:	1dfb      	adds	r3, r7, #7
 80042ac:	2201      	movs	r2, #1
 80042ae:	701a      	strb	r2, [r3, #0]
 80042b0:	e001      	b.n	80042b6 <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 80042b2:	f7ff fe7b 	bl	8003fac <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80042b6:	1dfb      	adds	r3, r7, #7
 80042b8:	781b      	ldrb	r3, [r3, #0]
}
 80042ba:	0018      	movs	r0, r3
 80042bc:	46bd      	mov	sp, r7
 80042be:	b002      	add	sp, #8
 80042c0:	bd80      	pop	{r7, pc}
 80042c2:	46c0      	nop			; (mov r8, r8)
 80042c4:	40022000 	.word	0x40022000

080042c8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80042c8:	b590      	push	{r4, r7, lr}
 80042ca:	b083      	sub	sp, #12
 80042cc:	af00      	add	r7, sp, #0
 80042ce:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80042d0:	4b14      	ldr	r3, [pc, #80]	; (8004324 <HAL_InitTick+0x5c>)
 80042d2:	681c      	ldr	r4, [r3, #0]
 80042d4:	4b14      	ldr	r3, [pc, #80]	; (8004328 <HAL_InitTick+0x60>)
 80042d6:	781b      	ldrb	r3, [r3, #0]
 80042d8:	0019      	movs	r1, r3
 80042da:	23fa      	movs	r3, #250	; 0xfa
 80042dc:	0098      	lsls	r0, r3, #2
 80042de:	f7fb ff2f 	bl	8000140 <__udivsi3>
 80042e2:	0003      	movs	r3, r0
 80042e4:	0019      	movs	r1, r3
 80042e6:	0020      	movs	r0, r4
 80042e8:	f7fb ff2a 	bl	8000140 <__udivsi3>
 80042ec:	0003      	movs	r3, r0
 80042ee:	0018      	movs	r0, r3
 80042f0:	f000 fd59 	bl	8004da6 <HAL_SYSTICK_Config>
 80042f4:	1e03      	subs	r3, r0, #0
 80042f6:	d001      	beq.n	80042fc <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80042f8:	2301      	movs	r3, #1
 80042fa:	e00f      	b.n	800431c <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	2b03      	cmp	r3, #3
 8004300:	d80b      	bhi.n	800431a <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8004302:	6879      	ldr	r1, [r7, #4]
 8004304:	2301      	movs	r3, #1
 8004306:	425b      	negs	r3, r3
 8004308:	2200      	movs	r2, #0
 800430a:	0018      	movs	r0, r3
 800430c:	f000 fd36 	bl	8004d7c <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8004310:	4b06      	ldr	r3, [pc, #24]	; (800432c <HAL_InitTick+0x64>)
 8004312:	687a      	ldr	r2, [r7, #4]
 8004314:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8004316:	2300      	movs	r3, #0
 8004318:	e000      	b.n	800431c <HAL_InitTick+0x54>
    return HAL_ERROR;
 800431a:	2301      	movs	r3, #1
}
 800431c:	0018      	movs	r0, r3
 800431e:	46bd      	mov	sp, r7
 8004320:	b003      	add	sp, #12
 8004322:	bd90      	pop	{r4, r7, pc}
 8004324:	20000000 	.word	0x20000000
 8004328:	20000008 	.word	0x20000008
 800432c:	20000004 	.word	0x20000004

08004330 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8004330:	b580      	push	{r7, lr}
 8004332:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8004334:	4b05      	ldr	r3, [pc, #20]	; (800434c <HAL_IncTick+0x1c>)
 8004336:	781b      	ldrb	r3, [r3, #0]
 8004338:	001a      	movs	r2, r3
 800433a:	4b05      	ldr	r3, [pc, #20]	; (8004350 <HAL_IncTick+0x20>)
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	18d2      	adds	r2, r2, r3
 8004340:	4b03      	ldr	r3, [pc, #12]	; (8004350 <HAL_IncTick+0x20>)
 8004342:	601a      	str	r2, [r3, #0]
}
 8004344:	46c0      	nop			; (mov r8, r8)
 8004346:	46bd      	mov	sp, r7
 8004348:	bd80      	pop	{r7, pc}
 800434a:	46c0      	nop			; (mov r8, r8)
 800434c:	20000008 	.word	0x20000008
 8004350:	20000274 	.word	0x20000274

08004354 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8004354:	b580      	push	{r7, lr}
 8004356:	af00      	add	r7, sp, #0
  return uwTick;
 8004358:	4b02      	ldr	r3, [pc, #8]	; (8004364 <HAL_GetTick+0x10>)
 800435a:	681b      	ldr	r3, [r3, #0]
}
 800435c:	0018      	movs	r0, r3
 800435e:	46bd      	mov	sp, r7
 8004360:	bd80      	pop	{r7, pc}
 8004362:	46c0      	nop			; (mov r8, r8)
 8004364:	20000274 	.word	0x20000274

08004368 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004368:	b580      	push	{r7, lr}
 800436a:	b084      	sub	sp, #16
 800436c:	af00      	add	r7, sp, #0
 800436e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8004370:	f7ff fff0 	bl	8004354 <HAL_GetTick>
 8004374:	0003      	movs	r3, r0
 8004376:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	3301      	adds	r3, #1
 8004380:	d005      	beq.n	800438e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8004382:	4b0a      	ldr	r3, [pc, #40]	; (80043ac <HAL_Delay+0x44>)
 8004384:	781b      	ldrb	r3, [r3, #0]
 8004386:	001a      	movs	r2, r3
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	189b      	adds	r3, r3, r2
 800438c:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 800438e:	46c0      	nop			; (mov r8, r8)
 8004390:	f7ff ffe0 	bl	8004354 <HAL_GetTick>
 8004394:	0002      	movs	r2, r0
 8004396:	68bb      	ldr	r3, [r7, #8]
 8004398:	1ad3      	subs	r3, r2, r3
 800439a:	68fa      	ldr	r2, [r7, #12]
 800439c:	429a      	cmp	r2, r3
 800439e:	d8f7      	bhi.n	8004390 <HAL_Delay+0x28>
  {
  }
}
 80043a0:	46c0      	nop			; (mov r8, r8)
 80043a2:	46c0      	nop			; (mov r8, r8)
 80043a4:	46bd      	mov	sp, r7
 80043a6:	b004      	add	sp, #16
 80043a8:	bd80      	pop	{r7, pc}
 80043aa:	46c0      	nop			; (mov r8, r8)
 80043ac:	20000008 	.word	0x20000008

080043b0 <HAL_ADC_Init>:
  *         function "HAL_ADCEx_EnableVREFINTTempSensor()" must be called similarilly.
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 80043b0:	b580      	push	{r7, lr}
 80043b2:	b082      	sub	sp, #8
 80043b4:	af00      	add	r7, sp, #0
 80043b6:	6078      	str	r0, [r7, #4]

  /* Check ADC handle */
  if (hadc == NULL)
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	d101      	bne.n	80043c2 <HAL_ADC_Init+0x12>
  {
    return HAL_ERROR;
 80043be:	2301      	movs	r3, #1
 80043c0:	e159      	b.n	8004676 <HAL_ADC_Init+0x2c6>
  /* Refer to header of this file for more details on clock enabling procedure*/

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  /* - ADC voltage regulator enable                                           */
  if (hadc->State == HAL_ADC_STATE_RESET)
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d10a      	bne.n	80043e0 <HAL_ADC_Init+0x30>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	2200      	movs	r2, #0
 80043ce:	659a      	str	r2, [r3, #88]	; 0x58

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	2250      	movs	r2, #80	; 0x50
 80043d4:	2100      	movs	r1, #0
 80043d6:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	0018      	movs	r0, r3
 80043dc:	f7ff fdfa 	bl	8003fd4 <HAL_ADC_MspInit>
  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  /* and if there is no conversion on going on regular group (ADC can be      */
  /* enabled anyway, in case of call of this function to update a parameter   */
  /* on the fly).                                                             */
  if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) ||
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043e4:	2210      	movs	r2, #16
 80043e6:	4013      	ands	r3, r2
 80043e8:	2b10      	cmp	r3, #16
 80043ea:	d005      	beq.n	80043f8 <HAL_ADC_Init+0x48>
      (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) != RESET))
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	689b      	ldr	r3, [r3, #8]
 80043f2:	2204      	movs	r2, #4
 80043f4:	4013      	ands	r3, r2
  if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) ||
 80043f6:	d00b      	beq.n	8004410 <HAL_ADC_Init+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043fc:	2210      	movs	r2, #16
 80043fe:	431a      	orrs	r2, r3
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	2250      	movs	r2, #80	; 0x50
 8004408:	2100      	movs	r1, #0
 800440a:	5499      	strb	r1, [r3, r2]
    return HAL_ERROR;
 800440c:	2301      	movs	r3, #1
 800440e:	e132      	b.n	8004676 <HAL_ADC_Init+0x2c6>
  }

  /* Set ADC state */
  ADC_STATE_CLR_SET(hadc->State,
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004414:	4a9a      	ldr	r2, [pc, #616]	; (8004680 <HAL_ADC_Init+0x2d0>)
 8004416:	4013      	ands	r3, r2
 8004418:	2202      	movs	r2, #2
 800441a:	431a      	orrs	r2, r3
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	655a      	str	r2, [r3, #84]	; 0x54
  /* Parameters update conditioned to ADC state:                            */
  /* Parameters that can be updated only when ADC is disabled:              */
  /*  - ADC clock mode                                                      */
  /*  - ADC clock prescaler                                                 */
  /*  - ADC Resolution                                                      */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	689b      	ldr	r3, [r3, #8]
 8004426:	2203      	movs	r2, #3
 8004428:	4013      	ands	r3, r2
 800442a:	2b01      	cmp	r3, #1
 800442c:	d108      	bne.n	8004440 <HAL_ADC_Init+0x90>
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	2201      	movs	r2, #1
 8004436:	4013      	ands	r3, r2
 8004438:	2b01      	cmp	r3, #1
 800443a:	d101      	bne.n	8004440 <HAL_ADC_Init+0x90>
 800443c:	2301      	movs	r3, #1
 800443e:	e000      	b.n	8004442 <HAL_ADC_Init+0x92>
 8004440:	2300      	movs	r3, #0
 8004442:	2b00      	cmp	r3, #0
 8004444:	d149      	bne.n	80044da <HAL_ADC_Init+0x12a>
    /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
    /*     (set into HAL_ADC_ConfigChannel() )                              */

    /* Configuration of ADC clock: clock source PCLK or asynchronous with
    selectable prescaler */
    __HAL_ADC_CLOCK_PRESCALER(hadc);
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	685a      	ldr	r2, [r3, #4]
 800444a:	23c0      	movs	r3, #192	; 0xc0
 800444c:	061b      	lsls	r3, r3, #24
 800444e:	429a      	cmp	r2, r3
 8004450:	d00b      	beq.n	800446a <HAL_ADC_Init+0xba>
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	685a      	ldr	r2, [r3, #4]
 8004456:	2380      	movs	r3, #128	; 0x80
 8004458:	05db      	lsls	r3, r3, #23
 800445a:	429a      	cmp	r2, r3
 800445c:	d005      	beq.n	800446a <HAL_ADC_Init+0xba>
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	685a      	ldr	r2, [r3, #4]
 8004462:	2380      	movs	r3, #128	; 0x80
 8004464:	061b      	lsls	r3, r3, #24
 8004466:	429a      	cmp	r2, r3
 8004468:	d111      	bne.n	800448e <HAL_ADC_Init+0xde>
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	691a      	ldr	r2, [r3, #16]
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	681b      	ldr	r3, [r3, #0]
 8004474:	0092      	lsls	r2, r2, #2
 8004476:	0892      	lsrs	r2, r2, #2
 8004478:	611a      	str	r2, [r3, #16]
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	6919      	ldr	r1, [r3, #16]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	685a      	ldr	r2, [r3, #4]
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	430a      	orrs	r2, r1
 800448a:	611a      	str	r2, [r3, #16]
 800448c:	e014      	b.n	80044b8 <HAL_ADC_Init+0x108>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	691a      	ldr	r2, [r3, #16]
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	0092      	lsls	r2, r2, #2
 800449a:	0892      	lsrs	r2, r2, #2
 800449c:	611a      	str	r2, [r3, #16]
 800449e:	4b79      	ldr	r3, [pc, #484]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044a0:	681a      	ldr	r2, [r3, #0]
 80044a2:	4b78      	ldr	r3, [pc, #480]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044a4:	4978      	ldr	r1, [pc, #480]	; (8004688 <HAL_ADC_Init+0x2d8>)
 80044a6:	400a      	ands	r2, r1
 80044a8:	601a      	str	r2, [r3, #0]
 80044aa:	4b76      	ldr	r3, [pc, #472]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044ac:	6819      	ldr	r1, [r3, #0]
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	685a      	ldr	r2, [r3, #4]
 80044b2:	4b74      	ldr	r3, [pc, #464]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044b4:	430a      	orrs	r2, r1
 80044b6:	601a      	str	r2, [r3, #0]

    /* Configuration of ADC:                                                */
    /*  - Resolution                                                        */
    hadc->Instance->CFGR1 &= ~(ADC_CFGR1_RES);
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	68da      	ldr	r2, [r3, #12]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	2118      	movs	r1, #24
 80044c4:	438a      	bics	r2, r1
 80044c6:	60da      	str	r2, [r3, #12]
    hadc->Instance->CFGR1 |= hadc->Init.Resolution;
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	681b      	ldr	r3, [r3, #0]
 80044cc:	68d9      	ldr	r1, [r3, #12]
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	689a      	ldr	r2, [r3, #8]
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	430a      	orrs	r2, r1
 80044d8:	60da      	str	r2, [r3, #12]
  }

  /* Set the Low Frequency mode */
  ADC->CCR &= (uint32_t)~ADC_CCR_LFMEN;
 80044da:	4b6a      	ldr	r3, [pc, #424]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044dc:	681a      	ldr	r2, [r3, #0]
 80044de:	4b69      	ldr	r3, [pc, #420]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044e0:	496a      	ldr	r1, [pc, #424]	; (800468c <HAL_ADC_Init+0x2dc>)
 80044e2:	400a      	ands	r2, r1
 80044e4:	601a      	str	r2, [r3, #0]
  ADC->CCR |= __HAL_ADC_CCR_LOWFREQUENCY(hadc->Init.LowPowerFrequencyMode);
 80044e6:	4b67      	ldr	r3, [pc, #412]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044e8:	6819      	ldr	r1, [r3, #0]
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80044ee:	065a      	lsls	r2, r3, #25
 80044f0:	4b64      	ldr	r3, [pc, #400]	; (8004684 <HAL_ADC_Init+0x2d4>)
 80044f2:	430a      	orrs	r2, r1
 80044f4:	601a      	str	r2, [r3, #0]

  /* Enable voltage regulator (if disabled at this step) */
  if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	689a      	ldr	r2, [r3, #8]
 80044fc:	2380      	movs	r3, #128	; 0x80
 80044fe:	055b      	lsls	r3, r3, #21
 8004500:	4013      	ands	r3, r2
 8004502:	d108      	bne.n	8004516 <HAL_ADC_Init+0x166>
  {
    /* Set ADVREGEN bit */
    hadc->Instance->CR |= ADC_CR_ADVREGEN;
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	689a      	ldr	r2, [r3, #8]
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	2180      	movs	r1, #128	; 0x80
 8004510:	0549      	lsls	r1, r1, #21
 8004512:	430a      	orrs	r2, r1
 8004514:	609a      	str	r2, [r3, #8]
  /*  - Continuous conversion mode                                            */
  /*  - DMA continuous request                                                */
  /*  - Overrun                                                               */
  /*  - AutoDelay feature                                                     */
  /*  - Discontinuous mode                                                    */
  hadc->Instance->CFGR1 &= ~(ADC_CFGR1_ALIGN   |
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	68da      	ldr	r2, [r3, #12]
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	495b      	ldr	r1, [pc, #364]	; (8004690 <HAL_ADC_Init+0x2e0>)
 8004522:	400a      	ands	r2, r1
 8004524:	60da      	str	r2, [r3, #12]
                             ADC_CFGR1_OVRMOD  |
                             ADC_CFGR1_AUTDLY  |
                             ADC_CFGR1_AUTOFF  |
                             ADC_CFGR1_DISCEN);

  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	68d9      	ldr	r1, [r3, #12]
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	68da      	ldr	r2, [r3, #12]
                            ADC_SCANDIR(hadc->Init.ScanConvMode)             |
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	691b      	ldr	r3, [r3, #16]
 8004534:	2b02      	cmp	r3, #2
 8004536:	d101      	bne.n	800453c <HAL_ADC_Init+0x18c>
 8004538:	2304      	movs	r3, #4
 800453a:	e000      	b.n	800453e <HAL_ADC_Init+0x18e>
 800453c:	2300      	movs	r3, #0
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 800453e:	431a      	orrs	r2, r3
                            ADC_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	2020      	movs	r0, #32
 8004544:	5c1b      	ldrb	r3, [r3, r0]
 8004546:	035b      	lsls	r3, r3, #13
                            ADC_SCANDIR(hadc->Init.ScanConvMode)             |
 8004548:	431a      	orrs	r2, r3
                            ADC_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	202c      	movs	r0, #44	; 0x2c
 800454e:	5c1b      	ldrb	r3, [r3, r0]
 8004550:	005b      	lsls	r3, r3, #1
                            ADC_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8004552:	431a      	orrs	r2, r3
                            hadc->Init.Overrun                               |
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	6b1b      	ldr	r3, [r3, #48]	; 0x30
                            ADC_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 8004558:	431a      	orrs	r2, r3
                            __HAL_ADC_CFGR1_AutoDelay(hadc->Init.LowPowerAutoWait) |
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	699b      	ldr	r3, [r3, #24]
 800455e:	039b      	lsls	r3, r3, #14
                            hadc->Init.Overrun                               |
 8004560:	431a      	orrs	r2, r3
                            __HAL_ADC_CFGR1_AUTOFF(hadc->Init.LowPowerAutoPowerOff));
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	69db      	ldr	r3, [r3, #28]
 8004566:	03db      	lsls	r3, r3, #15
                            __HAL_ADC_CFGR1_AutoDelay(hadc->Init.LowPowerAutoWait) |
 8004568:	431a      	orrs	r2, r3
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	430a      	orrs	r2, r1
 8004570:	60da      	str	r2, [r3, #12]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004576:	23c2      	movs	r3, #194	; 0xc2
 8004578:	33ff      	adds	r3, #255	; 0xff
 800457a:	429a      	cmp	r2, r3
 800457c:	d00b      	beq.n	8004596 <HAL_ADC_Init+0x1e6>
  {
    hadc->Instance->CFGR1 |= hadc->Init.ExternalTrigConv |
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	68d9      	ldr	r1, [r3, #12]
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                             hadc->Init.ExternalTrigConvEdge;
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    hadc->Instance->CFGR1 |= hadc->Init.ExternalTrigConv |
 800458c:	431a      	orrs	r2, r3
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	430a      	orrs	r2, r1
 8004594:	60da      	str	r2, [r3, #12]
  }

  /* Enable discontinuous mode only if continuous mode is disabled */
  if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	2221      	movs	r2, #33	; 0x21
 800459a:	5c9b      	ldrb	r3, [r3, r2]
 800459c:	2b01      	cmp	r3, #1
 800459e:	d11a      	bne.n	80045d6 <HAL_ADC_Init+0x226>
  {
    if (hadc->Init.ContinuousConvMode == DISABLE)
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	2220      	movs	r2, #32
 80045a4:	5c9b      	ldrb	r3, [r3, r2]
 80045a6:	2b00      	cmp	r3, #0
 80045a8:	d109      	bne.n	80045be <HAL_ADC_Init+0x20e>
    {
      /* Enable the selected ADC group regular discontinuous mode */
      hadc->Instance->CFGR1 |= (ADC_CFGR1_DISCEN);
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	68da      	ldr	r2, [r3, #12]
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	2180      	movs	r1, #128	; 0x80
 80045b6:	0249      	lsls	r1, r1, #9
 80045b8:	430a      	orrs	r2, r1
 80045ba:	60da      	str	r2, [r3, #12]
 80045bc:	e00b      	b.n	80045d6 <HAL_ADC_Init+0x226>
      /* ADC regular group discontinuous was intended to be enabled,        */
      /* but ADC regular group modes continuous and sequencer discontinuous */
      /* cannot be enabled simultaneously.                                  */

      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045c2:	2220      	movs	r2, #32
 80045c4:	431a      	orrs	r2, r3
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	655a      	str	r2, [r3, #84]	; 0x54

      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80045ce:	2201      	movs	r2, #1
 80045d0:	431a      	orrs	r2, r3
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	659a      	str	r2, [r3, #88]	; 0x58
    }
  }

  if (hadc->Init.OversamplingMode == ENABLE)
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045da:	2b01      	cmp	r3, #1
 80045dc:	d11f      	bne.n	800461e <HAL_ADC_Init+0x26e>
    /* Configuration of Oversampler:                                          */
    /*  - Oversampling Ratio                                                  */
    /*  - Right bit shift                                                     */
    /*  - Triggered mode                                                      */

    hadc->Instance->CFGR2 &= ~(ADC_CFGR2_OVSR |
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	691a      	ldr	r2, [r3, #16]
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	492a      	ldr	r1, [pc, #168]	; (8004694 <HAL_ADC_Init+0x2e4>)
 80045ea:	400a      	ands	r2, r1
 80045ec:	611a      	str	r2, [r3, #16]
                               ADC_CFGR2_OVSS |
                               ADC_CFGR2_TOVS);

    hadc->Instance->CFGR2 |= (hadc->Init.Oversample.Ratio         |
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	6919      	ldr	r1, [r3, #16]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
                              hadc->Init.Oversample.RightBitShift             |
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    hadc->Instance->CFGR2 |= (hadc->Init.Oversample.Ratio         |
 80045fc:	431a      	orrs	r2, r3
                              hadc->Init.Oversample.TriggeredMode);
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	6c9b      	ldr	r3, [r3, #72]	; 0x48
                              hadc->Init.Oversample.RightBitShift             |
 8004602:	431a      	orrs	r2, r3
    hadc->Instance->CFGR2 |= (hadc->Init.Oversample.Ratio         |
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	430a      	orrs	r2, r1
 800460a:	611a      	str	r2, [r3, #16]

    /* Enable OverSampling mode */
    hadc->Instance->CFGR2 |= ADC_CFGR2_OVSE;
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	691a      	ldr	r2, [r3, #16]
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	2101      	movs	r1, #1
 8004618:	430a      	orrs	r2, r1
 800461a:	611a      	str	r2, [r3, #16]
 800461c:	e00e      	b.n	800463c <HAL_ADC_Init+0x28c>
  }
  else
  {
    if (HAL_IS_BIT_SET(hadc->Instance->CFGR2, ADC_CFGR2_OVSE))
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	691b      	ldr	r3, [r3, #16]
 8004624:	2201      	movs	r2, #1
 8004626:	4013      	ands	r3, r2
 8004628:	2b01      	cmp	r3, #1
 800462a:	d107      	bne.n	800463c <HAL_ADC_Init+0x28c>
    {
      /* Disable OverSampling mode if needed */
      hadc->Instance->CFGR2 &= ~ADC_CFGR2_OVSE;
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	691a      	ldr	r2, [r3, #16]
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	2101      	movs	r1, #1
 8004638:	438a      	bics	r2, r1
 800463a:	611a      	str	r2, [r3, #16]
    }
  }

  /* Clear the old sampling time */
  hadc->Instance->SMPR &= (uint32_t)(~ADC_SMPR_SMPR);
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	695a      	ldr	r2, [r3, #20]
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	2107      	movs	r1, #7
 8004648:	438a      	bics	r2, r1
 800464a:	615a      	str	r2, [r3, #20]

  /* Set the new sample time */
  hadc->Instance->SMPR |= hadc->Init.SamplingTime;
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	6959      	ldr	r1, [r3, #20]
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	430a      	orrs	r2, r1
 800465c:	615a      	str	r2, [r3, #20]

  /* Clear ADC error code */
  ADC_CLEAR_ERRORCODE(hadc);
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	2200      	movs	r2, #0
 8004662:	659a      	str	r2, [r3, #88]	; 0x58

  /* Set the ADC state */
  ADC_STATE_CLR_SET(hadc->State,
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004668:	2203      	movs	r2, #3
 800466a:	4393      	bics	r3, r2
 800466c:	2201      	movs	r2, #1
 800466e:	431a      	orrs	r2, r3
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	655a      	str	r2, [r3, #84]	; 0x54
                    HAL_ADC_STATE_BUSY_INTERNAL,
                    HAL_ADC_STATE_READY);


  /* Return function status */
  return HAL_OK;
 8004674:	2300      	movs	r3, #0
}
 8004676:	0018      	movs	r0, r3
 8004678:	46bd      	mov	sp, r7
 800467a:	b002      	add	sp, #8
 800467c:	bd80      	pop	{r7, pc}
 800467e:	46c0      	nop			; (mov r8, r8)
 8004680:	fffffefd 	.word	0xfffffefd
 8004684:	40012708 	.word	0x40012708
 8004688:	ffc3ffff 	.word	0xffc3ffff
 800468c:	fdffffff 	.word	0xfdffffff
 8004690:	fffe0219 	.word	0xfffe0219
 8004694:	fffffc03 	.word	0xfffffc03

08004698 <HAL_ADC_Start>:
  * @note   Interruptions enabled in this function: None.
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
{
 8004698:	b590      	push	{r4, r7, lr}
 800469a:	b085      	sub	sp, #20
 800469c:	af00      	add	r7, sp, #0
 800469e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 80046a0:	230f      	movs	r3, #15
 80046a2:	18fb      	adds	r3, r7, r3
 80046a4:	2200      	movs	r2, #0
 80046a6:	701a      	strb	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* Perform ADC enable and conversion start if no conversion is on going */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	689b      	ldr	r3, [r3, #8]
 80046ae:	2204      	movs	r2, #4
 80046b0:	4013      	ands	r3, r2
 80046b2:	d138      	bne.n	8004726 <HAL_ADC_Start+0x8e>
  {
    /* Process locked */
    __HAL_LOCK(hadc);
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	2250      	movs	r2, #80	; 0x50
 80046b8:	5c9b      	ldrb	r3, [r3, r2]
 80046ba:	2b01      	cmp	r3, #1
 80046bc:	d101      	bne.n	80046c2 <HAL_ADC_Start+0x2a>
 80046be:	2302      	movs	r3, #2
 80046c0:	e038      	b.n	8004734 <HAL_ADC_Start+0x9c>
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	2250      	movs	r2, #80	; 0x50
 80046c6:	2101      	movs	r1, #1
 80046c8:	5499      	strb	r1, [r3, r2]

    /* Enable the ADC peripheral */
    /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
    /* performed automatically by hardware.                                   */
    if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	69db      	ldr	r3, [r3, #28]
 80046ce:	2b01      	cmp	r3, #1
 80046d0:	d007      	beq.n	80046e2 <HAL_ADC_Start+0x4a>
    {
      tmp_hal_status = ADC_Enable(hadc);
 80046d2:	230f      	movs	r3, #15
 80046d4:	18fc      	adds	r4, r7, r3
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	0018      	movs	r0, r3
 80046da:	f000 f981 	bl	80049e0 <ADC_Enable>
 80046de:	0003      	movs	r3, r0
 80046e0:	7023      	strb	r3, [r4, #0]
    }

    /* Start conversion if ADC is effectively enabled */
    if (tmp_hal_status == HAL_OK)
 80046e2:	230f      	movs	r3, #15
 80046e4:	18fb      	adds	r3, r7, r3
 80046e6:	781b      	ldrb	r3, [r3, #0]
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d120      	bne.n	800472e <HAL_ADC_Start+0x96>
    {
      /* Set ADC state                                                        */
      /* - Clear state bitfield related to regular group conversion results   */
      /* - Set state bitfield related to regular operation                    */
      ADC_STATE_CLR_SET(hadc->State,
 80046ec:	687b      	ldr	r3, [r7, #4]
 80046ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80046f0:	4a12      	ldr	r2, [pc, #72]	; (800473c <HAL_ADC_Start+0xa4>)
 80046f2:	4013      	ands	r3, r2
 80046f4:	2280      	movs	r2, #128	; 0x80
 80046f6:	0052      	lsls	r2, r2, #1
 80046f8:	431a      	orrs	r2, r3
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	655a      	str	r2, [r3, #84]	; 0x54
                        HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC_STATE_REG_EOSMP,
                        HAL_ADC_STATE_REG_BUSY);

      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	2200      	movs	r2, #0
 8004702:	659a      	str	r2, [r3, #88]	; 0x58

      /* Process unlocked */
      /* Unlock before starting ADC conversions: in case of potential         */
      /* interruption, to let the process to ADC IRQ Handler.                 */
      __HAL_UNLOCK(hadc);
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	2250      	movs	r2, #80	; 0x50
 8004708:	2100      	movs	r1, #0
 800470a:	5499      	strb	r1, [r3, r2]

      /* Clear regular group conversion flag and overrun flag */
      /* (To ensure of no unknown state from potential previous ADC           */
      /* operations)                                                          */
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	221c      	movs	r2, #28
 8004712:	601a      	str	r2, [r3, #0]

      /* Enable conversion of regular group.                                  */
      /* If software start has been selected, conversion starts immediately.  */
      /* If external trigger has been selected, conversion will start at next */
      /* trigger event.                                                       */
      hadc->Instance->CR |= ADC_CR_ADSTART;
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	689a      	ldr	r2, [r3, #8]
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	2104      	movs	r1, #4
 8004720:	430a      	orrs	r2, r1
 8004722:	609a      	str	r2, [r3, #8]
 8004724:	e003      	b.n	800472e <HAL_ADC_Start+0x96>
    }
  }
  else
  {
    tmp_hal_status = HAL_BUSY;
 8004726:	230f      	movs	r3, #15
 8004728:	18fb      	adds	r3, r7, r3
 800472a:	2202      	movs	r2, #2
 800472c:	701a      	strb	r2, [r3, #0]
  }

  /* Return function status */
  return tmp_hal_status;
 800472e:	230f      	movs	r3, #15
 8004730:	18fb      	adds	r3, r7, r3
 8004732:	781b      	ldrb	r3, [r3, #0]
}
 8004734:	0018      	movs	r0, r3
 8004736:	46bd      	mov	sp, r7
 8004738:	b005      	add	sp, #20
 800473a:	bd90      	pop	{r4, r7, pc}
 800473c:	fffff0fe 	.word	0xfffff0fe

08004740 <HAL_ADC_Stop>:
  *         case of auto_injection mode), disable ADC peripheral.
  * @param  hadc ADC handle
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
{
 8004740:	b5b0      	push	{r4, r5, r7, lr}
 8004742:	b084      	sub	sp, #16
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8004748:	230f      	movs	r3, #15
 800474a:	18fb      	adds	r3, r7, r3
 800474c:	2200      	movs	r2, #0
 800474e:	701a      	strb	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* Process locked */
  __HAL_LOCK(hadc);
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	2250      	movs	r2, #80	; 0x50
 8004754:	5c9b      	ldrb	r3, [r3, r2]
 8004756:	2b01      	cmp	r3, #1
 8004758:	d101      	bne.n	800475e <HAL_ADC_Stop+0x1e>
 800475a:	2302      	movs	r3, #2
 800475c:	e029      	b.n	80047b2 <HAL_ADC_Stop+0x72>
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	2250      	movs	r2, #80	; 0x50
 8004762:	2101      	movs	r1, #1
 8004764:	5499      	strb	r1, [r3, r2]

  /* 1. Stop potential conversion on going, on ADC group regular */
  tmp_hal_status = ADC_ConversionStop(hadc);
 8004766:	250f      	movs	r5, #15
 8004768:	197c      	adds	r4, r7, r5
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	0018      	movs	r0, r3
 800476e:	f000 fa06 	bl	8004b7e <ADC_ConversionStop>
 8004772:	0003      	movs	r3, r0
 8004774:	7023      	strb	r3, [r4, #0]

  /* Disable ADC peripheral if conversions are effectively stopped */
  if (tmp_hal_status == HAL_OK)
 8004776:	197b      	adds	r3, r7, r5
 8004778:	781b      	ldrb	r3, [r3, #0]
 800477a:	2b00      	cmp	r3, #0
 800477c:	d112      	bne.n	80047a4 <HAL_ADC_Stop+0x64>
  {
    /* 2. Disable the ADC peripheral */
    tmp_hal_status = ADC_Disable(hadc);
 800477e:	197c      	adds	r4, r7, r5
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	0018      	movs	r0, r3
 8004784:	f000 f994 	bl	8004ab0 <ADC_Disable>
 8004788:	0003      	movs	r3, r0
 800478a:	7023      	strb	r3, [r4, #0]

    /* Check if ADC is effectively disabled */
    if (tmp_hal_status == HAL_OK)
 800478c:	197b      	adds	r3, r7, r5
 800478e:	781b      	ldrb	r3, [r3, #0]
 8004790:	2b00      	cmp	r3, #0
 8004792:	d107      	bne.n	80047a4 <HAL_ADC_Stop+0x64>
    {
      /* Set ADC state */
      ADC_STATE_CLR_SET(hadc->State,
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004798:	4a08      	ldr	r2, [pc, #32]	; (80047bc <HAL_ADC_Stop+0x7c>)
 800479a:	4013      	ands	r3, r2
 800479c:	2201      	movs	r2, #1
 800479e:	431a      	orrs	r2, r3
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	655a      	str	r2, [r3, #84]	; 0x54
                        HAL_ADC_STATE_READY);
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	2250      	movs	r2, #80	; 0x50
 80047a8:	2100      	movs	r1, #0
 80047aa:	5499      	strb	r1, [r3, r2]

  /* Return function status */
  return tmp_hal_status;
 80047ac:	230f      	movs	r3, #15
 80047ae:	18fb      	adds	r3, r7, r3
 80047b0:	781b      	ldrb	r3, [r3, #0]
}
 80047b2:	0018      	movs	r0, r3
 80047b4:	46bd      	mov	sp, r7
 80047b6:	b004      	add	sp, #16
 80047b8:	bdb0      	pop	{r4, r5, r7, pc}
 80047ba:	46c0      	nop			; (mov r8, r8)
 80047bc:	fffffefe 	.word	0xfffffefe

080047c0 <HAL_ADC_PollForConversion>:
  * @param  hadc ADC handle
  * @param  Timeout Timeout value in millisecond.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
{
 80047c0:	b580      	push	{r7, lr}
 80047c2:	b084      	sub	sp, #16
 80047c4:	af00      	add	r7, sp, #0
 80047c6:	6078      	str	r0, [r7, #4]
 80047c8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 80047ca:	2300      	movs	r3, #0
 80047cc:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_Flag_EOC   = 0x00;
 80047ce:	2300      	movs	r3, #0
 80047d0:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* If end of conversion selected to end of sequence conversions */
  if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	695b      	ldr	r3, [r3, #20]
 80047d6:	2b08      	cmp	r3, #8
 80047d8:	d102      	bne.n	80047e0 <HAL_ADC_PollForConversion+0x20>
  {
    tmp_Flag_EOC = ADC_FLAG_EOS;
 80047da:	2308      	movs	r3, #8
 80047dc:	60fb      	str	r3, [r7, #12]
 80047de:	e014      	b.n	800480a <HAL_ADC_PollForConversion+0x4a>
    /* each conversion:                                                       */
    /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
    /* several ranks and polling for end of each conversion.                  */
    /* For code simplicity sake, this particular case is generalized to       */
    /* ADC configured in DMA mode and and polling for end of each conversion. */
    if (HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN))
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	68db      	ldr	r3, [r3, #12]
 80047e6:	2201      	movs	r2, #1
 80047e8:	4013      	ands	r3, r2
 80047ea:	2b01      	cmp	r3, #1
 80047ec:	d10b      	bne.n	8004806 <HAL_ADC_PollForConversion+0x46>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80047f2:	2220      	movs	r2, #32
 80047f4:	431a      	orrs	r2, r3
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	655a      	str	r2, [r3, #84]	; 0x54

      /* Process unlocked */
      __HAL_UNLOCK(hadc);
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	2250      	movs	r2, #80	; 0x50
 80047fe:	2100      	movs	r1, #0
 8004800:	5499      	strb	r1, [r3, r2]

      return HAL_ERROR;
 8004802:	2301      	movs	r3, #1
 8004804:	e072      	b.n	80048ec <HAL_ADC_PollForConversion+0x12c>
    }
    else
    {
      tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
 8004806:	230c      	movs	r3, #12
 8004808:	60fb      	str	r3, [r7, #12]
    }
  }

  /* Get tick count */
  tickstart = HAL_GetTick();
 800480a:	f7ff fda3 	bl	8004354 <HAL_GetTick>
 800480e:	0003      	movs	r3, r0
 8004810:	60bb      	str	r3, [r7, #8]

  /* Wait until End of unitary conversion or sequence conversions flag is raised */
  while (HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8004812:	e01f      	b.n	8004854 <HAL_ADC_PollForConversion+0x94>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if (Timeout != HAL_MAX_DELAY)
 8004814:	683b      	ldr	r3, [r7, #0]
 8004816:	3301      	adds	r3, #1
 8004818:	d01c      	beq.n	8004854 <HAL_ADC_PollForConversion+0x94>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	2b00      	cmp	r3, #0
 800481e:	d007      	beq.n	8004830 <HAL_ADC_PollForConversion+0x70>
 8004820:	f7ff fd98 	bl	8004354 <HAL_GetTick>
 8004824:	0002      	movs	r2, r0
 8004826:	68bb      	ldr	r3, [r7, #8]
 8004828:	1ad3      	subs	r3, r2, r3
 800482a:	683a      	ldr	r2, [r7, #0]
 800482c:	429a      	cmp	r2, r3
 800482e:	d211      	bcs.n	8004854 <HAL_ADC_PollForConversion+0x94>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	68fa      	ldr	r2, [r7, #12]
 8004838:	4013      	ands	r3, r2
 800483a:	d10b      	bne.n	8004854 <HAL_ADC_PollForConversion+0x94>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004840:	2204      	movs	r2, #4
 8004842:	431a      	orrs	r2, r3
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	655a      	str	r2, [r3, #84]	; 0x54

          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	2250      	movs	r2, #80	; 0x50
 800484c:	2100      	movs	r1, #0
 800484e:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8004850:	2303      	movs	r3, #3
 8004852:	e04b      	b.n	80048ec <HAL_ADC_PollForConversion+0x12c>
  while (HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	68fa      	ldr	r2, [r7, #12]
 800485c:	4013      	ands	r3, r2
 800485e:	d0d9      	beq.n	8004814 <HAL_ADC_PollForConversion+0x54>
      }
    }
  }

  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004864:	2280      	movs	r2, #128	; 0x80
 8004866:	0092      	lsls	r2, r2, #2
 8004868:	431a      	orrs	r2, r3
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	655a      	str	r2, [r3, #84]	; 0x54

  /* Determine whether any further conversion upcoming on group regular       */
  /* by external trigger, continuous mode or scan sequence on going.          */
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	68da      	ldr	r2, [r3, #12]
 8004874:	23c0      	movs	r3, #192	; 0xc0
 8004876:	011b      	lsls	r3, r3, #4
 8004878:	4013      	ands	r3, r2
 800487a:	d12e      	bne.n	80048da <HAL_ADC_PollForConversion+0x11a>
      (hadc->Init.ContinuousConvMode == DISABLE))
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	2220      	movs	r2, #32
 8004880:	5c9b      	ldrb	r3, [r3, r2]
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 8004882:	2b00      	cmp	r3, #0
 8004884:	d129      	bne.n	80048da <HAL_ADC_PollForConversion+0x11a>
  {
    /* If End of Sequence is reached, disable interrupts */
    if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	2208      	movs	r2, #8
 800488e:	4013      	ands	r3, r2
 8004890:	2b08      	cmp	r3, #8
 8004892:	d122      	bne.n	80048da <HAL_ADC_PollForConversion+0x11a>
    {
      /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
      /* ADSTART==0 (no conversion on going)                                  */
      if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	689b      	ldr	r3, [r3, #8]
 800489a:	2204      	movs	r2, #4
 800489c:	4013      	ands	r3, r2
 800489e:	d110      	bne.n	80048c2 <HAL_ADC_PollForConversion+0x102>
      {
        /* Disable ADC end of single conversion interrupt on group regular */
        /* Note: Overrun interrupt was enabled with EOC interrupt in          */
        /* HAL_Start_IT(), but is not disabled here because can be used       */
        /* by overrun IRQ process below.                                      */
        __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	685a      	ldr	r2, [r3, #4]
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	210c      	movs	r1, #12
 80048ac:	438a      	bics	r2, r1
 80048ae:	605a      	str	r2, [r3, #4]

        /* Set ADC state */
        ADC_STATE_CLR_SET(hadc->State,
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80048b4:	4a0f      	ldr	r2, [pc, #60]	; (80048f4 <HAL_ADC_PollForConversion+0x134>)
 80048b6:	4013      	ands	r3, r2
 80048b8:	2201      	movs	r2, #1
 80048ba:	431a      	orrs	r2, r3
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	655a      	str	r2, [r3, #84]	; 0x54
 80048c0:	e00b      	b.n	80048da <HAL_ADC_PollForConversion+0x11a>
                          HAL_ADC_STATE_READY);
      }
      else
      {
        /* Change ADC state to error state */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80048c6:	2220      	movs	r2, #32
 80048c8:	431a      	orrs	r2, r3
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	655a      	str	r2, [r3, #84]	; 0x54

        /* Set ADC error code to ADC peripheral internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80048d2:	2201      	movs	r2, #1
 80048d4:	431a      	orrs	r2, r3
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	659a      	str	r2, [r3, #88]	; 0x58
  }

  /* Clear end of conversion flag of regular group if low power feature       */
  /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
  /* until data register is read using function HAL_ADC_GetValue().           */
  if (hadc->Init.LowPowerAutoWait == DISABLE)
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	699b      	ldr	r3, [r3, #24]
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d103      	bne.n	80048ea <HAL_ADC_PollForConversion+0x12a>
  {
    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	220c      	movs	r2, #12
 80048e8:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80048ea:	2300      	movs	r3, #0
}
 80048ec:	0018      	movs	r0, r3
 80048ee:	46bd      	mov	sp, r7
 80048f0:	b004      	add	sp, #16
 80048f2:	bd80      	pop	{r7, pc}
 80048f4:	fffffefe 	.word	0xfffffefe

080048f8 <HAL_ADC_GetValue>:
  *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
  * @param  hadc ADC handle
  * @retval ADC group regular conversion data
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
{
 80048f8:	b580      	push	{r7, lr}
 80048fa:	b082      	sub	sp, #8
 80048fc:	af00      	add	r7, sp, #0
 80048fe:	6078      	str	r0, [r7, #4]

  /* Note: EOC flag is not cleared here by software because automatically     */
  /*       cleared by hardware when reading register DR.                      */

  /* Return ADC converted value */
  return hadc->Instance->DR;
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 8004906:	0018      	movs	r0, r3
 8004908:	46bd      	mov	sp, r7
 800490a:	b002      	add	sp, #8
 800490c:	bd80      	pop	{r7, pc}
	...

08004910 <HAL_ADC_ConfigChannel>:
  * @param  hadc ADC handle
  * @param  sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8004910:	b580      	push	{r7, lr}
 8004912:	b082      	sub	sp, #8
 8004914:	af00      	add	r7, sp, #0
 8004916:	6078      	str	r0, [r7, #4]
 8004918:	6039      	str	r1, [r7, #0]
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_RANK(sConfig->Rank));

  /* Process locked */
  __HAL_LOCK(hadc);
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	2250      	movs	r2, #80	; 0x50
 800491e:	5c9b      	ldrb	r3, [r3, r2]
 8004920:	2b01      	cmp	r3, #1
 8004922:	d101      	bne.n	8004928 <HAL_ADC_ConfigChannel+0x18>
 8004924:	2302      	movs	r3, #2
 8004926:	e050      	b.n	80049ca <HAL_ADC_ConfigChannel+0xba>
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	2250      	movs	r2, #80	; 0x50
 800492c:	2101      	movs	r1, #1
 800492e:	5499      	strb	r1, [r3, r2]
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Management of internal measurement channels: Vbat/VrefInt/TempSensor  */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) != RESET)
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	689b      	ldr	r3, [r3, #8]
 8004936:	2204      	movs	r2, #4
 8004938:	4013      	ands	r3, r2
 800493a:	d00b      	beq.n	8004954 <HAL_ADC_ConfigChannel+0x44>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004940:	2220      	movs	r2, #32
 8004942:	431a      	orrs	r2, r3
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	655a      	str	r2, [r3, #84]	; 0x54
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	2250      	movs	r2, #80	; 0x50
 800494c:	2100      	movs	r1, #0
 800494e:	5499      	strb	r1, [r3, r2]
    return HAL_ERROR;
 8004950:	2301      	movs	r3, #1
 8004952:	e03a      	b.n	80049ca <HAL_ADC_ConfigChannel+0xba>
  }

  if (sConfig->Rank != ADC_RANK_NONE)
 8004954:	683b      	ldr	r3, [r7, #0]
 8004956:	685b      	ldr	r3, [r3, #4]
 8004958:	4a1e      	ldr	r2, [pc, #120]	; (80049d4 <HAL_ADC_ConfigChannel+0xc4>)
 800495a:	4293      	cmp	r3, r2
 800495c:	d018      	beq.n	8004990 <HAL_ADC_ConfigChannel+0x80>
  {
    /* Enable selected channels */
    hadc->Instance->CHSELR |= (uint32_t)(sConfig->Channel & ADC_CHANNEL_MASK);
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8004964:	683b      	ldr	r3, [r7, #0]
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	035b      	lsls	r3, r3, #13
 800496a:	0b5a      	lsrs	r2, r3, #13
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	430a      	orrs	r2, r1
 8004972:	629a      	str	r2, [r3, #40]	; 0x28
      ADC_DelayMicroSecond(ADC_TEMPSENSOR_DELAY_US);
    }
#endif

    /* If VRefInt channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VREFINT) == (ADC_CHANNEL_VREFINT & ADC_CHANNEL_MASK))
 8004974:	683b      	ldr	r3, [r7, #0]
 8004976:	681a      	ldr	r2, [r3, #0]
 8004978:	2380      	movs	r3, #128	; 0x80
 800497a:	029b      	lsls	r3, r3, #10
 800497c:	4013      	ands	r3, r2
 800497e:	d01f      	beq.n	80049c0 <HAL_ADC_ConfigChannel+0xb0>
    {
      ADC->CCR |= ADC_CCR_VREFEN;
 8004980:	4b15      	ldr	r3, [pc, #84]	; (80049d8 <HAL_ADC_ConfigChannel+0xc8>)
 8004982:	681a      	ldr	r2, [r3, #0]
 8004984:	4b14      	ldr	r3, [pc, #80]	; (80049d8 <HAL_ADC_ConfigChannel+0xc8>)
 8004986:	2180      	movs	r1, #128	; 0x80
 8004988:	03c9      	lsls	r1, r1, #15
 800498a:	430a      	orrs	r2, r1
 800498c:	601a      	str	r2, [r3, #0]
 800498e:	e017      	b.n	80049c0 <HAL_ADC_ConfigChannel+0xb0>
  }
  else
  {
    /* Regular sequence configuration */
    /* Reset the channel selection register from the selected channel */
    hadc->Instance->CHSELR &= ~((uint32_t)(sConfig->Channel & ADC_CHANNEL_MASK));
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004996:	683b      	ldr	r3, [r7, #0]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	035b      	lsls	r3, r3, #13
 800499c:	0b5b      	lsrs	r3, r3, #13
 800499e:	43d9      	mvns	r1, r3
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	400a      	ands	r2, r1
 80049a6:	629a      	str	r2, [r3, #40]	; 0x28
      ADC->CCR &= ~ADC_CCR_TSEN;
    }
#endif

    /* If VRefInt channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VREFINT) == (ADC_CHANNEL_VREFINT & ADC_CHANNEL_MASK))
 80049a8:	683b      	ldr	r3, [r7, #0]
 80049aa:	681a      	ldr	r2, [r3, #0]
 80049ac:	2380      	movs	r3, #128	; 0x80
 80049ae:	029b      	lsls	r3, r3, #10
 80049b0:	4013      	ands	r3, r2
 80049b2:	d005      	beq.n	80049c0 <HAL_ADC_ConfigChannel+0xb0>
    {
      ADC->CCR &= ~ADC_CCR_VREFEN;
 80049b4:	4b08      	ldr	r3, [pc, #32]	; (80049d8 <HAL_ADC_ConfigChannel+0xc8>)
 80049b6:	681a      	ldr	r2, [r3, #0]
 80049b8:	4b07      	ldr	r3, [pc, #28]	; (80049d8 <HAL_ADC_ConfigChannel+0xc8>)
 80049ba:	4908      	ldr	r1, [pc, #32]	; (80049dc <HAL_ADC_ConfigChannel+0xcc>)
 80049bc:	400a      	ands	r2, r1
 80049be:	601a      	str	r2, [r3, #0]
    }
#endif
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	2250      	movs	r2, #80	; 0x50
 80049c4:	2100      	movs	r1, #0
 80049c6:	5499      	strb	r1, [r3, r2]

  /* Return function status */
  return HAL_OK;
 80049c8:	2300      	movs	r3, #0
}
 80049ca:	0018      	movs	r0, r3
 80049cc:	46bd      	mov	sp, r7
 80049ce:	b002      	add	sp, #8
 80049d0:	bd80      	pop	{r7, pc}
 80049d2:	46c0      	nop			; (mov r8, r8)
 80049d4:	00001001 	.word	0x00001001
 80049d8:	40012708 	.word	0x40012708
 80049dc:	ffbfffff 	.word	0xffbfffff

080049e0 <ADC_Enable>:
  *         "if (hadc->Init.LowPowerAutoPowerOff != ENABLE)".
  * @param  hadc ADC handle
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
{
 80049e0:	b580      	push	{r7, lr}
 80049e2:	b084      	sub	sp, #16
 80049e4:	af00      	add	r7, sp, #0
 80049e6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80049e8:	2300      	movs	r3, #0
 80049ea:	60fb      	str	r3, [r7, #12]

  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (ADC_IS_ENABLE(hadc) == RESET)
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	689b      	ldr	r3, [r3, #8]
 80049f2:	2203      	movs	r2, #3
 80049f4:	4013      	ands	r3, r2
 80049f6:	2b01      	cmp	r3, #1
 80049f8:	d108      	bne.n	8004a0c <ADC_Enable+0x2c>
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	2201      	movs	r2, #1
 8004a02:	4013      	ands	r3, r2
 8004a04:	2b01      	cmp	r3, #1
 8004a06:	d101      	bne.n	8004a0c <ADC_Enable+0x2c>
 8004a08:	2301      	movs	r3, #1
 8004a0a:	e000      	b.n	8004a0e <ADC_Enable+0x2e>
 8004a0c:	2300      	movs	r3, #0
 8004a0e:	2b00      	cmp	r3, #0
 8004a10:	d146      	bne.n	8004aa0 <ADC_Enable+0xc0>
  {
    /* Check if conditions to enable the ADC are fulfilled */
    if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	689b      	ldr	r3, [r3, #8]
 8004a18:	4a24      	ldr	r2, [pc, #144]	; (8004aac <ADC_Enable+0xcc>)
 8004a1a:	4013      	ands	r3, r2
 8004a1c:	d00d      	beq.n	8004a3a <ADC_Enable+0x5a>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a22:	2210      	movs	r2, #16
 8004a24:	431a      	orrs	r2, r3
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	655a      	str	r2, [r3, #84]	; 0x54

      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004a2e:	2201      	movs	r2, #1
 8004a30:	431a      	orrs	r2, r3
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	659a      	str	r2, [r3, #88]	; 0x58

      return HAL_ERROR;
 8004a36:	2301      	movs	r3, #1
 8004a38:	e033      	b.n	8004aa2 <ADC_Enable+0xc2>
    }

    /* Enable the ADC peripheral */
    __HAL_ADC_ENABLE(hadc);
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	689a      	ldr	r2, [r3, #8]
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	2101      	movs	r1, #1
 8004a46:	430a      	orrs	r2, r1
 8004a48:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time. */
    ADC_DelayMicroSecond(ADC_STAB_DELAY_US);
 8004a4a:	2001      	movs	r0, #1
 8004a4c:	f000 f8e4 	bl	8004c18 <ADC_DelayMicroSecond>

    /* Get tick count */
    tickstart = HAL_GetTick();
 8004a50:	f7ff fc80 	bl	8004354 <HAL_GetTick>
 8004a54:	0003      	movs	r3, r0
 8004a56:	60fb      	str	r3, [r7, #12]

    /* Wait for ADC effectively enabled */
    while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8004a58:	e01b      	b.n	8004a92 <ADC_Enable+0xb2>
    {
      if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 8004a5a:	f7ff fc7b 	bl	8004354 <HAL_GetTick>
 8004a5e:	0002      	movs	r2, r0
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	1ad3      	subs	r3, r2, r3
 8004a64:	2b0a      	cmp	r3, #10
 8004a66:	d914      	bls.n	8004a92 <ADC_Enable+0xb2>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	2201      	movs	r2, #1
 8004a70:	4013      	ands	r3, r2
 8004a72:	2b01      	cmp	r3, #1
 8004a74:	d00d      	beq.n	8004a92 <ADC_Enable+0xb2>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a7a:	2210      	movs	r2, #16
 8004a7c:	431a      	orrs	r2, r3
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	655a      	str	r2, [r3, #84]	; 0x54

          /* Set ADC error code to ADC peripheral internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004a86:	2201      	movs	r2, #1
 8004a88:	431a      	orrs	r2, r3
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	659a      	str	r2, [r3, #88]	; 0x58

          return HAL_ERROR;
 8004a8e:	2301      	movs	r3, #1
 8004a90:	e007      	b.n	8004aa2 <ADC_Enable+0xc2>
    while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	2201      	movs	r2, #1
 8004a9a:	4013      	ands	r3, r2
 8004a9c:	2b01      	cmp	r3, #1
 8004a9e:	d1dc      	bne.n	8004a5a <ADC_Enable+0x7a>
      }
    }
  }

  /* Return HAL status */
  return HAL_OK;
 8004aa0:	2300      	movs	r3, #0
}
 8004aa2:	0018      	movs	r0, r3
 8004aa4:	46bd      	mov	sp, r7
 8004aa6:	b004      	add	sp, #16
 8004aa8:	bd80      	pop	{r7, pc}
 8004aaa:	46c0      	nop			; (mov r8, r8)
 8004aac:	80000017 	.word	0x80000017

08004ab0 <ADC_Disable>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
{
 8004ab0:	b580      	push	{r7, lr}
 8004ab2:	b084      	sub	sp, #16
 8004ab4:	af00      	add	r7, sp, #0
 8004ab6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8004ab8:	2300      	movs	r3, #0
 8004aba:	60fb      	str	r3, [r7, #12]

  /* Verification if ADC is not already disabled:                             */
  /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
  /*       disabled.                                                          */
  if (ADC_IS_ENABLE(hadc) != RESET)
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	689b      	ldr	r3, [r3, #8]
 8004ac2:	2203      	movs	r2, #3
 8004ac4:	4013      	ands	r3, r2
 8004ac6:	2b01      	cmp	r3, #1
 8004ac8:	d108      	bne.n	8004adc <ADC_Disable+0x2c>
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	2201      	movs	r2, #1
 8004ad2:	4013      	ands	r3, r2
 8004ad4:	2b01      	cmp	r3, #1
 8004ad6:	d101      	bne.n	8004adc <ADC_Disable+0x2c>
 8004ad8:	2301      	movs	r3, #1
 8004ada:	e000      	b.n	8004ade <ADC_Disable+0x2e>
 8004adc:	2300      	movs	r3, #0
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d048      	beq.n	8004b74 <ADC_Disable+0xc4>
  {
    /* Check if conditions to disable the ADC are fulfilled */
    if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	689b      	ldr	r3, [r3, #8]
 8004ae8:	2205      	movs	r2, #5
 8004aea:	4013      	ands	r3, r2
 8004aec:	2b01      	cmp	r3, #1
 8004aee:	d110      	bne.n	8004b12 <ADC_Disable+0x62>
    {
      /* Disable the ADC peripheral */
      __HAL_ADC_DISABLE(hadc);
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	689a      	ldr	r2, [r3, #8]
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	2102      	movs	r1, #2
 8004afc:	430a      	orrs	r2, r1
 8004afe:	609a      	str	r2, [r3, #8]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	2203      	movs	r2, #3
 8004b06:	601a      	str	r2, [r3, #0]
      return HAL_ERROR;
    }

    /* Wait for ADC effectively disabled */
    /* Get tick count */
    tickstart = HAL_GetTick();
 8004b08:	f7ff fc24 	bl	8004354 <HAL_GetTick>
 8004b0c:	0003      	movs	r3, r0
 8004b0e:	60fb      	str	r3, [r7, #12]

    while (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
 8004b10:	e029      	b.n	8004b66 <ADC_Disable+0xb6>
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004b16:	2210      	movs	r2, #16
 8004b18:	431a      	orrs	r2, r3
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	655a      	str	r2, [r3, #84]	; 0x54
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b22:	2201      	movs	r2, #1
 8004b24:	431a      	orrs	r2, r3
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	659a      	str	r2, [r3, #88]	; 0x58
      return HAL_ERROR;
 8004b2a:	2301      	movs	r3, #1
 8004b2c:	e023      	b.n	8004b76 <ADC_Disable+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 8004b2e:	f7ff fc11 	bl	8004354 <HAL_GetTick>
 8004b32:	0002      	movs	r2, r0
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	1ad3      	subs	r3, r2, r3
 8004b38:	2b0a      	cmp	r3, #10
 8004b3a:	d914      	bls.n	8004b66 <ADC_Disable+0xb6>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	689b      	ldr	r3, [r3, #8]
 8004b42:	2201      	movs	r2, #1
 8004b44:	4013      	ands	r3, r2
 8004b46:	2b01      	cmp	r3, #1
 8004b48:	d10d      	bne.n	8004b66 <ADC_Disable+0xb6>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004b4e:	2210      	movs	r2, #16
 8004b50:	431a      	orrs	r2, r3
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	655a      	str	r2, [r3, #84]	; 0x54

          /* Set ADC error code to ADC peripheral internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b5a:	2201      	movs	r2, #1
 8004b5c:	431a      	orrs	r2, r3
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	659a      	str	r2, [r3, #88]	; 0x58

          return HAL_ERROR;
 8004b62:	2301      	movs	r3, #1
 8004b64:	e007      	b.n	8004b76 <ADC_Disable+0xc6>
    while (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	681b      	ldr	r3, [r3, #0]
 8004b6a:	689b      	ldr	r3, [r3, #8]
 8004b6c:	2201      	movs	r2, #1
 8004b6e:	4013      	ands	r3, r2
 8004b70:	2b01      	cmp	r3, #1
 8004b72:	d0dc      	beq.n	8004b2e <ADC_Disable+0x7e>
      }
    }
  }

  /* Return HAL status */
  return HAL_OK;
 8004b74:	2300      	movs	r3, #0
}
 8004b76:	0018      	movs	r0, r3
 8004b78:	46bd      	mov	sp, r7
 8004b7a:	b004      	add	sp, #16
 8004b7c:	bd80      	pop	{r7, pc}

08004b7e <ADC_ConversionStop>:
  *         stopped to disable the ADC.
  * @param  hadc ADC handle
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc)
{
 8004b7e:	b580      	push	{r7, lr}
 8004b80:	b084      	sub	sp, #16
 8004b82:	af00      	add	r7, sp, #0
 8004b84:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8004b86:	2300      	movs	r3, #0
 8004b88:	60fb      	str	r3, [r7, #12]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* Verification if ADC is not already stopped on regular group to bypass    */
  /* this function if not needed.                                             */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc))
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	689b      	ldr	r3, [r3, #8]
 8004b90:	2204      	movs	r2, #4
 8004b92:	4013      	ands	r3, r2
 8004b94:	d03a      	beq.n	8004c0c <ADC_ConversionStop+0x8e>
  {

    /* Stop potential conversion on going on regular group */
    /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
    if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) &&
 8004b96:	687b      	ldr	r3, [r7, #4]
 8004b98:	681b      	ldr	r3, [r3, #0]
 8004b9a:	689b      	ldr	r3, [r3, #8]
 8004b9c:	2204      	movs	r2, #4
 8004b9e:	4013      	ands	r3, r2
 8004ba0:	2b04      	cmp	r3, #4
 8004ba2:	d10d      	bne.n	8004bc0 <ADC_ConversionStop+0x42>
        HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS))
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	689b      	ldr	r3, [r3, #8]
 8004baa:	2202      	movs	r2, #2
 8004bac:	4013      	ands	r3, r2
    if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) &&
 8004bae:	d107      	bne.n	8004bc0 <ADC_ConversionStop+0x42>
    {
      /* Stop conversions on regular group */
      hadc->Instance->CR |= ADC_CR_ADSTP;
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	689a      	ldr	r2, [r3, #8]
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	2110      	movs	r1, #16
 8004bbc:	430a      	orrs	r2, r1
 8004bbe:	609a      	str	r2, [r3, #8]
    }

    /* Wait for conversion effectively stopped */
    /* Get tick count */
    tickstart = HAL_GetTick();
 8004bc0:	f7ff fbc8 	bl	8004354 <HAL_GetTick>
 8004bc4:	0003      	movs	r3, r0
 8004bc6:	60fb      	str	r3, [r7, #12]

    while ((hadc->Instance->CR & ADC_CR_ADSTART) != RESET)
 8004bc8:	e01a      	b.n	8004c00 <ADC_ConversionStop+0x82>
    {
      if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 8004bca:	f7ff fbc3 	bl	8004354 <HAL_GetTick>
 8004bce:	0002      	movs	r2, r0
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	1ad3      	subs	r3, r2, r3
 8004bd4:	2b0a      	cmp	r3, #10
 8004bd6:	d913      	bls.n	8004c00 <ADC_ConversionStop+0x82>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if ((hadc->Instance->CR & ADC_CR_ADSTART) != RESET)
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	689b      	ldr	r3, [r3, #8]
 8004bde:	2204      	movs	r2, #4
 8004be0:	4013      	ands	r3, r2
 8004be2:	d00d      	beq.n	8004c00 <ADC_ConversionStop+0x82>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004be8:	2210      	movs	r2, #16
 8004bea:	431a      	orrs	r2, r3
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	655a      	str	r2, [r3, #84]	; 0x54

          /* Set ADC error code to ADC peripheral internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004bf4:	2201      	movs	r2, #1
 8004bf6:	431a      	orrs	r2, r3
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	659a      	str	r2, [r3, #88]	; 0x58

          return HAL_ERROR;
 8004bfc:	2301      	movs	r3, #1
 8004bfe:	e006      	b.n	8004c0e <ADC_ConversionStop+0x90>
    while ((hadc->Instance->CR & ADC_CR_ADSTART) != RESET)
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	689b      	ldr	r3, [r3, #8]
 8004c06:	2204      	movs	r2, #4
 8004c08:	4013      	ands	r3, r2
 8004c0a:	d1de      	bne.n	8004bca <ADC_ConversionStop+0x4c>
      }
    }
  }

  /* Return HAL status */
  return HAL_OK;
 8004c0c:	2300      	movs	r3, #0
}
 8004c0e:	0018      	movs	r0, r3
 8004c10:	46bd      	mov	sp, r7
 8004c12:	b004      	add	sp, #16
 8004c14:	bd80      	pop	{r7, pc}
	...

08004c18 <ADC_DelayMicroSecond>:
  * @brief  Delay micro seconds
  * @param  microSecond  delay
  * @retval None
  */
static void ADC_DelayMicroSecond(uint32_t microSecond)
{
 8004c18:	b580      	push	{r7, lr}
 8004c1a:	b084      	sub	sp, #16
 8004c1c:	af00      	add	r7, sp, #0
 8004c1e:	6078      	str	r0, [r7, #4]
  /* Compute number of CPU cycles to wait for */
  __IO uint32_t waitLoopIndex = (microSecond * (SystemCoreClock / 1000000U));
 8004c20:	4b0b      	ldr	r3, [pc, #44]	; (8004c50 <ADC_DelayMicroSecond+0x38>)
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	490b      	ldr	r1, [pc, #44]	; (8004c54 <ADC_DelayMicroSecond+0x3c>)
 8004c26:	0018      	movs	r0, r3
 8004c28:	f7fb fa8a 	bl	8000140 <__udivsi3>
 8004c2c:	0003      	movs	r3, r0
 8004c2e:	001a      	movs	r2, r3
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	4353      	muls	r3, r2
 8004c34:	60fb      	str	r3, [r7, #12]

  while (waitLoopIndex != 0U)
 8004c36:	e002      	b.n	8004c3e <ADC_DelayMicroSecond+0x26>
  {
    waitLoopIndex--;
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	3b01      	subs	r3, #1
 8004c3c:	60fb      	str	r3, [r7, #12]
  while (waitLoopIndex != 0U)
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	d1f9      	bne.n	8004c38 <ADC_DelayMicroSecond+0x20>
  }
}
 8004c44:	46c0      	nop			; (mov r8, r8)
 8004c46:	46c0      	nop			; (mov r8, r8)
 8004c48:	46bd      	mov	sp, r7
 8004c4a:	b004      	add	sp, #16
 8004c4c:	bd80      	pop	{r7, pc}
 8004c4e:	46c0      	nop			; (mov r8, r8)
 8004c50:	20000000 	.word	0x20000000
 8004c54:	000f4240 	.word	0x000f4240

08004c58 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8004c58:	b590      	push	{r4, r7, lr}
 8004c5a:	b083      	sub	sp, #12
 8004c5c:	af00      	add	r7, sp, #0
 8004c5e:	0002      	movs	r2, r0
 8004c60:	6039      	str	r1, [r7, #0]
 8004c62:	1dfb      	adds	r3, r7, #7
 8004c64:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8004c66:	1dfb      	adds	r3, r7, #7
 8004c68:	781b      	ldrb	r3, [r3, #0]
 8004c6a:	2b7f      	cmp	r3, #127	; 0x7f
 8004c6c:	d828      	bhi.n	8004cc0 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004c6e:	4a2f      	ldr	r2, [pc, #188]	; (8004d2c <__NVIC_SetPriority+0xd4>)
 8004c70:	1dfb      	adds	r3, r7, #7
 8004c72:	781b      	ldrb	r3, [r3, #0]
 8004c74:	b25b      	sxtb	r3, r3
 8004c76:	089b      	lsrs	r3, r3, #2
 8004c78:	33c0      	adds	r3, #192	; 0xc0
 8004c7a:	009b      	lsls	r3, r3, #2
 8004c7c:	589b      	ldr	r3, [r3, r2]
 8004c7e:	1dfa      	adds	r2, r7, #7
 8004c80:	7812      	ldrb	r2, [r2, #0]
 8004c82:	0011      	movs	r1, r2
 8004c84:	2203      	movs	r2, #3
 8004c86:	400a      	ands	r2, r1
 8004c88:	00d2      	lsls	r2, r2, #3
 8004c8a:	21ff      	movs	r1, #255	; 0xff
 8004c8c:	4091      	lsls	r1, r2
 8004c8e:	000a      	movs	r2, r1
 8004c90:	43d2      	mvns	r2, r2
 8004c92:	401a      	ands	r2, r3
 8004c94:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8004c96:	683b      	ldr	r3, [r7, #0]
 8004c98:	019b      	lsls	r3, r3, #6
 8004c9a:	22ff      	movs	r2, #255	; 0xff
 8004c9c:	401a      	ands	r2, r3
 8004c9e:	1dfb      	adds	r3, r7, #7
 8004ca0:	781b      	ldrb	r3, [r3, #0]
 8004ca2:	0018      	movs	r0, r3
 8004ca4:	2303      	movs	r3, #3
 8004ca6:	4003      	ands	r3, r0
 8004ca8:	00db      	lsls	r3, r3, #3
 8004caa:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004cac:	481f      	ldr	r0, [pc, #124]	; (8004d2c <__NVIC_SetPriority+0xd4>)
 8004cae:	1dfb      	adds	r3, r7, #7
 8004cb0:	781b      	ldrb	r3, [r3, #0]
 8004cb2:	b25b      	sxtb	r3, r3
 8004cb4:	089b      	lsrs	r3, r3, #2
 8004cb6:	430a      	orrs	r2, r1
 8004cb8:	33c0      	adds	r3, #192	; 0xc0
 8004cba:	009b      	lsls	r3, r3, #2
 8004cbc:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8004cbe:	e031      	b.n	8004d24 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004cc0:	4a1b      	ldr	r2, [pc, #108]	; (8004d30 <__NVIC_SetPriority+0xd8>)
 8004cc2:	1dfb      	adds	r3, r7, #7
 8004cc4:	781b      	ldrb	r3, [r3, #0]
 8004cc6:	0019      	movs	r1, r3
 8004cc8:	230f      	movs	r3, #15
 8004cca:	400b      	ands	r3, r1
 8004ccc:	3b08      	subs	r3, #8
 8004cce:	089b      	lsrs	r3, r3, #2
 8004cd0:	3306      	adds	r3, #6
 8004cd2:	009b      	lsls	r3, r3, #2
 8004cd4:	18d3      	adds	r3, r2, r3
 8004cd6:	3304      	adds	r3, #4
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	1dfa      	adds	r2, r7, #7
 8004cdc:	7812      	ldrb	r2, [r2, #0]
 8004cde:	0011      	movs	r1, r2
 8004ce0:	2203      	movs	r2, #3
 8004ce2:	400a      	ands	r2, r1
 8004ce4:	00d2      	lsls	r2, r2, #3
 8004ce6:	21ff      	movs	r1, #255	; 0xff
 8004ce8:	4091      	lsls	r1, r2
 8004cea:	000a      	movs	r2, r1
 8004cec:	43d2      	mvns	r2, r2
 8004cee:	401a      	ands	r2, r3
 8004cf0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8004cf2:	683b      	ldr	r3, [r7, #0]
 8004cf4:	019b      	lsls	r3, r3, #6
 8004cf6:	22ff      	movs	r2, #255	; 0xff
 8004cf8:	401a      	ands	r2, r3
 8004cfa:	1dfb      	adds	r3, r7, #7
 8004cfc:	781b      	ldrb	r3, [r3, #0]
 8004cfe:	0018      	movs	r0, r3
 8004d00:	2303      	movs	r3, #3
 8004d02:	4003      	ands	r3, r0
 8004d04:	00db      	lsls	r3, r3, #3
 8004d06:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004d08:	4809      	ldr	r0, [pc, #36]	; (8004d30 <__NVIC_SetPriority+0xd8>)
 8004d0a:	1dfb      	adds	r3, r7, #7
 8004d0c:	781b      	ldrb	r3, [r3, #0]
 8004d0e:	001c      	movs	r4, r3
 8004d10:	230f      	movs	r3, #15
 8004d12:	4023      	ands	r3, r4
 8004d14:	3b08      	subs	r3, #8
 8004d16:	089b      	lsrs	r3, r3, #2
 8004d18:	430a      	orrs	r2, r1
 8004d1a:	3306      	adds	r3, #6
 8004d1c:	009b      	lsls	r3, r3, #2
 8004d1e:	18c3      	adds	r3, r0, r3
 8004d20:	3304      	adds	r3, #4
 8004d22:	601a      	str	r2, [r3, #0]
}
 8004d24:	46c0      	nop			; (mov r8, r8)
 8004d26:	46bd      	mov	sp, r7
 8004d28:	b003      	add	sp, #12
 8004d2a:	bd90      	pop	{r4, r7, pc}
 8004d2c:	e000e100 	.word	0xe000e100
 8004d30:	e000ed00 	.word	0xe000ed00

08004d34 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8004d34:	b580      	push	{r7, lr}
 8004d36:	b082      	sub	sp, #8
 8004d38:	af00      	add	r7, sp, #0
 8004d3a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	1e5a      	subs	r2, r3, #1
 8004d40:	2380      	movs	r3, #128	; 0x80
 8004d42:	045b      	lsls	r3, r3, #17
 8004d44:	429a      	cmp	r2, r3
 8004d46:	d301      	bcc.n	8004d4c <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8004d48:	2301      	movs	r3, #1
 8004d4a:	e010      	b.n	8004d6e <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004d4c:	4b0a      	ldr	r3, [pc, #40]	; (8004d78 <SysTick_Config+0x44>)
 8004d4e:	687a      	ldr	r2, [r7, #4]
 8004d50:	3a01      	subs	r2, #1
 8004d52:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8004d54:	2301      	movs	r3, #1
 8004d56:	425b      	negs	r3, r3
 8004d58:	2103      	movs	r1, #3
 8004d5a:	0018      	movs	r0, r3
 8004d5c:	f7ff ff7c 	bl	8004c58 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004d60:	4b05      	ldr	r3, [pc, #20]	; (8004d78 <SysTick_Config+0x44>)
 8004d62:	2200      	movs	r2, #0
 8004d64:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8004d66:	4b04      	ldr	r3, [pc, #16]	; (8004d78 <SysTick_Config+0x44>)
 8004d68:	2207      	movs	r2, #7
 8004d6a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004d6c:	2300      	movs	r3, #0
}
 8004d6e:	0018      	movs	r0, r3
 8004d70:	46bd      	mov	sp, r7
 8004d72:	b002      	add	sp, #8
 8004d74:	bd80      	pop	{r7, pc}
 8004d76:	46c0      	nop			; (mov r8, r8)
 8004d78:	e000e010 	.word	0xe000e010

08004d7c <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004d7c:	b580      	push	{r7, lr}
 8004d7e:	b084      	sub	sp, #16
 8004d80:	af00      	add	r7, sp, #0
 8004d82:	60b9      	str	r1, [r7, #8]
 8004d84:	607a      	str	r2, [r7, #4]
 8004d86:	210f      	movs	r1, #15
 8004d88:	187b      	adds	r3, r7, r1
 8004d8a:	1c02      	adds	r2, r0, #0
 8004d8c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8004d8e:	68ba      	ldr	r2, [r7, #8]
 8004d90:	187b      	adds	r3, r7, r1
 8004d92:	781b      	ldrb	r3, [r3, #0]
 8004d94:	b25b      	sxtb	r3, r3
 8004d96:	0011      	movs	r1, r2
 8004d98:	0018      	movs	r0, r3
 8004d9a:	f7ff ff5d 	bl	8004c58 <__NVIC_SetPriority>
}
 8004d9e:	46c0      	nop			; (mov r8, r8)
 8004da0:	46bd      	mov	sp, r7
 8004da2:	b004      	add	sp, #16
 8004da4:	bd80      	pop	{r7, pc}

08004da6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8004da6:	b580      	push	{r7, lr}
 8004da8:	b082      	sub	sp, #8
 8004daa:	af00      	add	r7, sp, #0
 8004dac:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	0018      	movs	r0, r3
 8004db2:	f7ff ffbf 	bl	8004d34 <SysTick_Config>
 8004db6:	0003      	movs	r3, r0
}
 8004db8:	0018      	movs	r0, r3
 8004dba:	46bd      	mov	sp, r7
 8004dbc:	b002      	add	sp, #8
 8004dbe:	bd80      	pop	{r7, pc}

08004dc0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004dc0:	b580      	push	{r7, lr}
 8004dc2:	b086      	sub	sp, #24
 8004dc4:	af00      	add	r7, sp, #0
 8004dc6:	6078      	str	r0, [r7, #4]
 8004dc8:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8004dca:	2300      	movs	r3, #0
 8004dcc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8004dce:	2300      	movs	r3, #0
 8004dd0:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 8004dd2:	2300      	movs	r3, #0
 8004dd4:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 8004dd6:	e155      	b.n	8005084 <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 8004dd8:	683b      	ldr	r3, [r7, #0]
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	2101      	movs	r1, #1
 8004dde:	697a      	ldr	r2, [r7, #20]
 8004de0:	4091      	lsls	r1, r2
 8004de2:	000a      	movs	r2, r1
 8004de4:	4013      	ands	r3, r2
 8004de6:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 8004de8:	68fb      	ldr	r3, [r7, #12]
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d100      	bne.n	8004df0 <HAL_GPIO_Init+0x30>
 8004dee:	e146      	b.n	800507e <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8004df0:	683b      	ldr	r3, [r7, #0]
 8004df2:	685b      	ldr	r3, [r3, #4]
 8004df4:	2203      	movs	r2, #3
 8004df6:	4013      	ands	r3, r2
 8004df8:	2b01      	cmp	r3, #1
 8004dfa:	d005      	beq.n	8004e08 <HAL_GPIO_Init+0x48>
          ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004dfc:	683b      	ldr	r3, [r7, #0]
 8004dfe:	685b      	ldr	r3, [r3, #4]
 8004e00:	2203      	movs	r2, #3
 8004e02:	4013      	ands	r3, r2
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8004e04:	2b02      	cmp	r3, #2
 8004e06:	d130      	bne.n	8004e6a <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	689b      	ldr	r3, [r3, #8]
 8004e0c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8004e0e:	697b      	ldr	r3, [r7, #20]
 8004e10:	005b      	lsls	r3, r3, #1
 8004e12:	2203      	movs	r2, #3
 8004e14:	409a      	lsls	r2, r3
 8004e16:	0013      	movs	r3, r2
 8004e18:	43da      	mvns	r2, r3
 8004e1a:	693b      	ldr	r3, [r7, #16]
 8004e1c:	4013      	ands	r3, r2
 8004e1e:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004e20:	683b      	ldr	r3, [r7, #0]
 8004e22:	68da      	ldr	r2, [r3, #12]
 8004e24:	697b      	ldr	r3, [r7, #20]
 8004e26:	005b      	lsls	r3, r3, #1
 8004e28:	409a      	lsls	r2, r3
 8004e2a:	0013      	movs	r3, r2
 8004e2c:	693a      	ldr	r2, [r7, #16]
 8004e2e:	4313      	orrs	r3, r2
 8004e30:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8004e32:	687b      	ldr	r3, [r7, #4]
 8004e34:	693a      	ldr	r2, [r7, #16]
 8004e36:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	685b      	ldr	r3, [r3, #4]
 8004e3c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004e3e:	2201      	movs	r2, #1
 8004e40:	697b      	ldr	r3, [r7, #20]
 8004e42:	409a      	lsls	r2, r3
 8004e44:	0013      	movs	r3, r2
 8004e46:	43da      	mvns	r2, r3
 8004e48:	693b      	ldr	r3, [r7, #16]
 8004e4a:	4013      	ands	r3, r2
 8004e4c:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004e4e:	683b      	ldr	r3, [r7, #0]
 8004e50:	685b      	ldr	r3, [r3, #4]
 8004e52:	091b      	lsrs	r3, r3, #4
 8004e54:	2201      	movs	r2, #1
 8004e56:	401a      	ands	r2, r3
 8004e58:	697b      	ldr	r3, [r7, #20]
 8004e5a:	409a      	lsls	r2, r3
 8004e5c:	0013      	movs	r3, r2
 8004e5e:	693a      	ldr	r2, [r7, #16]
 8004e60:	4313      	orrs	r3, r2
 8004e62:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	693a      	ldr	r2, [r7, #16]
 8004e68:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004e6a:	683b      	ldr	r3, [r7, #0]
 8004e6c:	685b      	ldr	r3, [r3, #4]
 8004e6e:	2203      	movs	r2, #3
 8004e70:	4013      	ands	r3, r2
 8004e72:	2b03      	cmp	r3, #3
 8004e74:	d017      	beq.n	8004ea6 <HAL_GPIO_Init+0xe6>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	68db      	ldr	r3, [r3, #12]
 8004e7a:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8004e7c:	697b      	ldr	r3, [r7, #20]
 8004e7e:	005b      	lsls	r3, r3, #1
 8004e80:	2203      	movs	r2, #3
 8004e82:	409a      	lsls	r2, r3
 8004e84:	0013      	movs	r3, r2
 8004e86:	43da      	mvns	r2, r3
 8004e88:	693b      	ldr	r3, [r7, #16]
 8004e8a:	4013      	ands	r3, r2
 8004e8c:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004e8e:	683b      	ldr	r3, [r7, #0]
 8004e90:	689a      	ldr	r2, [r3, #8]
 8004e92:	697b      	ldr	r3, [r7, #20]
 8004e94:	005b      	lsls	r3, r3, #1
 8004e96:	409a      	lsls	r2, r3
 8004e98:	0013      	movs	r3, r2
 8004e9a:	693a      	ldr	r2, [r7, #16]
 8004e9c:	4313      	orrs	r3, r2
 8004e9e:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	693a      	ldr	r2, [r7, #16]
 8004ea4:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004ea6:	683b      	ldr	r3, [r7, #0]
 8004ea8:	685b      	ldr	r3, [r3, #4]
 8004eaa:	2203      	movs	r2, #3
 8004eac:	4013      	ands	r3, r2
 8004eae:	2b02      	cmp	r3, #2
 8004eb0:	d123      	bne.n	8004efa <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8004eb2:	697b      	ldr	r3, [r7, #20]
 8004eb4:	08da      	lsrs	r2, r3, #3
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	3208      	adds	r2, #8
 8004eba:	0092      	lsls	r2, r2, #2
 8004ebc:	58d3      	ldr	r3, [r2, r3]
 8004ebe:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 8004ec0:	697b      	ldr	r3, [r7, #20]
 8004ec2:	2207      	movs	r2, #7
 8004ec4:	4013      	ands	r3, r2
 8004ec6:	009b      	lsls	r3, r3, #2
 8004ec8:	220f      	movs	r2, #15
 8004eca:	409a      	lsls	r2, r3
 8004ecc:	0013      	movs	r3, r2
 8004ece:	43da      	mvns	r2, r3
 8004ed0:	693b      	ldr	r3, [r7, #16]
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 8004ed6:	683b      	ldr	r3, [r7, #0]
 8004ed8:	691a      	ldr	r2, [r3, #16]
 8004eda:	697b      	ldr	r3, [r7, #20]
 8004edc:	2107      	movs	r1, #7
 8004ede:	400b      	ands	r3, r1
 8004ee0:	009b      	lsls	r3, r3, #2
 8004ee2:	409a      	lsls	r2, r3
 8004ee4:	0013      	movs	r3, r2
 8004ee6:	693a      	ldr	r2, [r7, #16]
 8004ee8:	4313      	orrs	r3, r2
 8004eea:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8004eec:	697b      	ldr	r3, [r7, #20]
 8004eee:	08da      	lsrs	r2, r3, #3
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	3208      	adds	r2, #8
 8004ef4:	0092      	lsls	r2, r2, #2
 8004ef6:	6939      	ldr	r1, [r7, #16]
 8004ef8:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8004f00:	697b      	ldr	r3, [r7, #20]
 8004f02:	005b      	lsls	r3, r3, #1
 8004f04:	2203      	movs	r2, #3
 8004f06:	409a      	lsls	r2, r3
 8004f08:	0013      	movs	r3, r2
 8004f0a:	43da      	mvns	r2, r3
 8004f0c:	693b      	ldr	r3, [r7, #16]
 8004f0e:	4013      	ands	r3, r2
 8004f10:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004f12:	683b      	ldr	r3, [r7, #0]
 8004f14:	685b      	ldr	r3, [r3, #4]
 8004f16:	2203      	movs	r2, #3
 8004f18:	401a      	ands	r2, r3
 8004f1a:	697b      	ldr	r3, [r7, #20]
 8004f1c:	005b      	lsls	r3, r3, #1
 8004f1e:	409a      	lsls	r2, r3
 8004f20:	0013      	movs	r3, r2
 8004f22:	693a      	ldr	r2, [r7, #16]
 8004f24:	4313      	orrs	r3, r2
 8004f26:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	693a      	ldr	r2, [r7, #16]
 8004f2c:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004f2e:	683b      	ldr	r3, [r7, #0]
 8004f30:	685a      	ldr	r2, [r3, #4]
 8004f32:	23c0      	movs	r3, #192	; 0xc0
 8004f34:	029b      	lsls	r3, r3, #10
 8004f36:	4013      	ands	r3, r2
 8004f38:	d100      	bne.n	8004f3c <HAL_GPIO_Init+0x17c>
 8004f3a:	e0a0      	b.n	800507e <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004f3c:	4b57      	ldr	r3, [pc, #348]	; (800509c <HAL_GPIO_Init+0x2dc>)
 8004f3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004f40:	4b56      	ldr	r3, [pc, #344]	; (800509c <HAL_GPIO_Init+0x2dc>)
 8004f42:	2101      	movs	r1, #1
 8004f44:	430a      	orrs	r2, r1
 8004f46:	635a      	str	r2, [r3, #52]	; 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 8004f48:	4a55      	ldr	r2, [pc, #340]	; (80050a0 <HAL_GPIO_Init+0x2e0>)
 8004f4a:	697b      	ldr	r3, [r7, #20]
 8004f4c:	089b      	lsrs	r3, r3, #2
 8004f4e:	3302      	adds	r3, #2
 8004f50:	009b      	lsls	r3, r3, #2
 8004f52:	589b      	ldr	r3, [r3, r2]
 8004f54:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 8004f56:	697b      	ldr	r3, [r7, #20]
 8004f58:	2203      	movs	r2, #3
 8004f5a:	4013      	ands	r3, r2
 8004f5c:	009b      	lsls	r3, r3, #2
 8004f5e:	220f      	movs	r2, #15
 8004f60:	409a      	lsls	r2, r3
 8004f62:	0013      	movs	r3, r2
 8004f64:	43da      	mvns	r2, r3
 8004f66:	693b      	ldr	r3, [r7, #16]
 8004f68:	4013      	ands	r3, r2
 8004f6a:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8004f6c:	687a      	ldr	r2, [r7, #4]
 8004f6e:	23a0      	movs	r3, #160	; 0xa0
 8004f70:	05db      	lsls	r3, r3, #23
 8004f72:	429a      	cmp	r2, r3
 8004f74:	d01f      	beq.n	8004fb6 <HAL_GPIO_Init+0x1f6>
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	4a4a      	ldr	r2, [pc, #296]	; (80050a4 <HAL_GPIO_Init+0x2e4>)
 8004f7a:	4293      	cmp	r3, r2
 8004f7c:	d019      	beq.n	8004fb2 <HAL_GPIO_Init+0x1f2>
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	4a49      	ldr	r2, [pc, #292]	; (80050a8 <HAL_GPIO_Init+0x2e8>)
 8004f82:	4293      	cmp	r3, r2
 8004f84:	d013      	beq.n	8004fae <HAL_GPIO_Init+0x1ee>
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	4a48      	ldr	r2, [pc, #288]	; (80050ac <HAL_GPIO_Init+0x2ec>)
 8004f8a:	4293      	cmp	r3, r2
 8004f8c:	d00d      	beq.n	8004faa <HAL_GPIO_Init+0x1ea>
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	4a47      	ldr	r2, [pc, #284]	; (80050b0 <HAL_GPIO_Init+0x2f0>)
 8004f92:	4293      	cmp	r3, r2
 8004f94:	d007      	beq.n	8004fa6 <HAL_GPIO_Init+0x1e6>
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	4a46      	ldr	r2, [pc, #280]	; (80050b4 <HAL_GPIO_Init+0x2f4>)
 8004f9a:	4293      	cmp	r3, r2
 8004f9c:	d101      	bne.n	8004fa2 <HAL_GPIO_Init+0x1e2>
 8004f9e:	2305      	movs	r3, #5
 8004fa0:	e00a      	b.n	8004fb8 <HAL_GPIO_Init+0x1f8>
 8004fa2:	2306      	movs	r3, #6
 8004fa4:	e008      	b.n	8004fb8 <HAL_GPIO_Init+0x1f8>
 8004fa6:	2304      	movs	r3, #4
 8004fa8:	e006      	b.n	8004fb8 <HAL_GPIO_Init+0x1f8>
 8004faa:	2303      	movs	r3, #3
 8004fac:	e004      	b.n	8004fb8 <HAL_GPIO_Init+0x1f8>
 8004fae:	2302      	movs	r3, #2
 8004fb0:	e002      	b.n	8004fb8 <HAL_GPIO_Init+0x1f8>
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	e000      	b.n	8004fb8 <HAL_GPIO_Init+0x1f8>
 8004fb6:	2300      	movs	r3, #0
 8004fb8:	697a      	ldr	r2, [r7, #20]
 8004fba:	2103      	movs	r1, #3
 8004fbc:	400a      	ands	r2, r1
 8004fbe:	0092      	lsls	r2, r2, #2
 8004fc0:	4093      	lsls	r3, r2
 8004fc2:	693a      	ldr	r2, [r7, #16]
 8004fc4:	4313      	orrs	r3, r2
 8004fc6:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004fc8:	4935      	ldr	r1, [pc, #212]	; (80050a0 <HAL_GPIO_Init+0x2e0>)
 8004fca:	697b      	ldr	r3, [r7, #20]
 8004fcc:	089b      	lsrs	r3, r3, #2
 8004fce:	3302      	adds	r3, #2
 8004fd0:	009b      	lsls	r3, r3, #2
 8004fd2:	693a      	ldr	r2, [r7, #16]
 8004fd4:	505a      	str	r2, [r3, r1]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004fd6:	4b38      	ldr	r3, [pc, #224]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 8004fd8:	689b      	ldr	r3, [r3, #8]
 8004fda:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	43da      	mvns	r2, r3
 8004fe0:	693b      	ldr	r3, [r7, #16]
 8004fe2:	4013      	ands	r3, r2
 8004fe4:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004fe6:	683b      	ldr	r3, [r7, #0]
 8004fe8:	685a      	ldr	r2, [r3, #4]
 8004fea:	2380      	movs	r3, #128	; 0x80
 8004fec:	035b      	lsls	r3, r3, #13
 8004fee:	4013      	ands	r3, r2
 8004ff0:	d003      	beq.n	8004ffa <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 8004ff2:	693a      	ldr	r2, [r7, #16]
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	4313      	orrs	r3, r2
 8004ff8:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8004ffa:	4b2f      	ldr	r3, [pc, #188]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 8004ffc:	693a      	ldr	r2, [r7, #16]
 8004ffe:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8005000:	4b2d      	ldr	r3, [pc, #180]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 8005002:	68db      	ldr	r3, [r3, #12]
 8005004:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8005006:	68fb      	ldr	r3, [r7, #12]
 8005008:	43da      	mvns	r2, r3
 800500a:	693b      	ldr	r3, [r7, #16]
 800500c:	4013      	ands	r3, r2
 800500e:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005010:	683b      	ldr	r3, [r7, #0]
 8005012:	685a      	ldr	r2, [r3, #4]
 8005014:	2380      	movs	r3, #128	; 0x80
 8005016:	039b      	lsls	r3, r3, #14
 8005018:	4013      	ands	r3, r2
 800501a:	d003      	beq.n	8005024 <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 800501c:	693a      	ldr	r2, [r7, #16]
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	4313      	orrs	r3, r2
 8005022:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8005024:	4b24      	ldr	r3, [pc, #144]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 8005026:	693a      	ldr	r2, [r7, #16]
 8005028:	60da      	str	r2, [r3, #12]

        temp = EXTI->EMR;
 800502a:	4b23      	ldr	r3, [pc, #140]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 800502c:	685b      	ldr	r3, [r3, #4]
 800502e:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	43da      	mvns	r2, r3
 8005034:	693b      	ldr	r3, [r7, #16]
 8005036:	4013      	ands	r3, r2
 8005038:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800503a:	683b      	ldr	r3, [r7, #0]
 800503c:	685a      	ldr	r2, [r3, #4]
 800503e:	2380      	movs	r3, #128	; 0x80
 8005040:	029b      	lsls	r3, r3, #10
 8005042:	4013      	ands	r3, r2
 8005044:	d003      	beq.n	800504e <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 8005046:	693a      	ldr	r2, [r7, #16]
 8005048:	68fb      	ldr	r3, [r7, #12]
 800504a:	4313      	orrs	r3, r2
 800504c:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 800504e:	4b1a      	ldr	r3, [pc, #104]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 8005050:	693a      	ldr	r2, [r7, #16]
 8005052:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005054:	4b18      	ldr	r3, [pc, #96]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 8005056:	681b      	ldr	r3, [r3, #0]
 8005058:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	43da      	mvns	r2, r3
 800505e:	693b      	ldr	r3, [r7, #16]
 8005060:	4013      	ands	r3, r2
 8005062:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005064:	683b      	ldr	r3, [r7, #0]
 8005066:	685a      	ldr	r2, [r3, #4]
 8005068:	2380      	movs	r3, #128	; 0x80
 800506a:	025b      	lsls	r3, r3, #9
 800506c:	4013      	ands	r3, r2
 800506e:	d003      	beq.n	8005078 <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 8005070:	693a      	ldr	r2, [r7, #16]
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	4313      	orrs	r3, r2
 8005076:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8005078:	4b0f      	ldr	r3, [pc, #60]	; (80050b8 <HAL_GPIO_Init+0x2f8>)
 800507a:	693a      	ldr	r2, [r7, #16]
 800507c:	601a      	str	r2, [r3, #0]
      }
    }
    position++;
 800507e:	697b      	ldr	r3, [r7, #20]
 8005080:	3301      	adds	r3, #1
 8005082:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 8005084:	683b      	ldr	r3, [r7, #0]
 8005086:	681a      	ldr	r2, [r3, #0]
 8005088:	697b      	ldr	r3, [r7, #20]
 800508a:	40da      	lsrs	r2, r3
 800508c:	1e13      	subs	r3, r2, #0
 800508e:	d000      	beq.n	8005092 <HAL_GPIO_Init+0x2d2>
 8005090:	e6a2      	b.n	8004dd8 <HAL_GPIO_Init+0x18>
  }
}
 8005092:	46c0      	nop			; (mov r8, r8)
 8005094:	46c0      	nop			; (mov r8, r8)
 8005096:	46bd      	mov	sp, r7
 8005098:	b006      	add	sp, #24
 800509a:	bd80      	pop	{r7, pc}
 800509c:	40021000 	.word	0x40021000
 80050a0:	40010000 	.word	0x40010000
 80050a4:	50000400 	.word	0x50000400
 80050a8:	50000800 	.word	0x50000800
 80050ac:	50000c00 	.word	0x50000c00
 80050b0:	50001000 	.word	0x50001000
 80050b4:	50001c00 	.word	0x50001c00
 80050b8:	40010400 	.word	0x40010400

080050bc <HAL_GPIO_ReadPin>:
  *                   This parameter can be GPIO_PIN_x where x can be (0..15).
  *                   All port bits are not necessarily available on all GPIOs.
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80050bc:	b580      	push	{r7, lr}
 80050be:	b084      	sub	sp, #16
 80050c0:	af00      	add	r7, sp, #0
 80050c2:	6078      	str	r0, [r7, #4]
 80050c4:	000a      	movs	r2, r1
 80050c6:	1cbb      	adds	r3, r7, #2
 80050c8:	801a      	strh	r2, [r3, #0]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	691b      	ldr	r3, [r3, #16]
 80050ce:	1cba      	adds	r2, r7, #2
 80050d0:	8812      	ldrh	r2, [r2, #0]
 80050d2:	4013      	ands	r3, r2
 80050d4:	d004      	beq.n	80050e0 <HAL_GPIO_ReadPin+0x24>
  {
    bitstatus = GPIO_PIN_SET;
 80050d6:	230f      	movs	r3, #15
 80050d8:	18fb      	adds	r3, r7, r3
 80050da:	2201      	movs	r2, #1
 80050dc:	701a      	strb	r2, [r3, #0]
 80050de:	e003      	b.n	80050e8 <HAL_GPIO_ReadPin+0x2c>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80050e0:	230f      	movs	r3, #15
 80050e2:	18fb      	adds	r3, r7, r3
 80050e4:	2200      	movs	r2, #0
 80050e6:	701a      	strb	r2, [r3, #0]
  }
  return bitstatus;
 80050e8:	230f      	movs	r3, #15
 80050ea:	18fb      	adds	r3, r7, r3
 80050ec:	781b      	ldrb	r3, [r3, #0]
}
 80050ee:	0018      	movs	r0, r3
 80050f0:	46bd      	mov	sp, r7
 80050f2:	b004      	add	sp, #16
 80050f4:	bd80      	pop	{r7, pc}

080050f6 <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80050f6:	b580      	push	{r7, lr}
 80050f8:	b082      	sub	sp, #8
 80050fa:	af00      	add	r7, sp, #0
 80050fc:	6078      	str	r0, [r7, #4]
 80050fe:	0008      	movs	r0, r1
 8005100:	0011      	movs	r1, r2
 8005102:	1cbb      	adds	r3, r7, #2
 8005104:	1c02      	adds	r2, r0, #0
 8005106:	801a      	strh	r2, [r3, #0]
 8005108:	1c7b      	adds	r3, r7, #1
 800510a:	1c0a      	adds	r2, r1, #0
 800510c:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 800510e:	1c7b      	adds	r3, r7, #1
 8005110:	781b      	ldrb	r3, [r3, #0]
 8005112:	2b00      	cmp	r3, #0
 8005114:	d004      	beq.n	8005120 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 8005116:	1cbb      	adds	r3, r7, #2
 8005118:	881a      	ldrh	r2, [r3, #0]
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 800511e:	e003      	b.n	8005128 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8005120:	1cbb      	adds	r3, r7, #2
 8005122:	881a      	ldrh	r2, [r3, #0]
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	629a      	str	r2, [r3, #40]	; 0x28
}
 8005128:	46c0      	nop			; (mov r8, r8)
 800512a:	46bd      	mov	sp, r7
 800512c:	b002      	add	sp, #8
 800512e:	bd80      	pop	{r7, pc}

08005130 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005130:	b5b0      	push	{r4, r5, r7, lr}
 8005132:	b08a      	sub	sp, #40	; 0x28
 8005134:	af00      	add	r7, sp, #0
 8005136:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	2b00      	cmp	r3, #0
 800513c:	d102      	bne.n	8005144 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 800513e:	2301      	movs	r3, #1
 8005140:	f000 fb6c 	bl	800581c <HAL_RCC_OscConfig+0x6ec>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8005144:	4bc8      	ldr	r3, [pc, #800]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005146:	68db      	ldr	r3, [r3, #12]
 8005148:	220c      	movs	r2, #12
 800514a:	4013      	ands	r3, r2
 800514c:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 800514e:	4bc6      	ldr	r3, [pc, #792]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005150:	68da      	ldr	r2, [r3, #12]
 8005152:	2380      	movs	r3, #128	; 0x80
 8005154:	025b      	lsls	r3, r3, #9
 8005156:	4013      	ands	r3, r2
 8005158:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	681b      	ldr	r3, [r3, #0]
 800515e:	2201      	movs	r2, #1
 8005160:	4013      	ands	r3, r2
 8005162:	d100      	bne.n	8005166 <HAL_RCC_OscConfig+0x36>
 8005164:	e07d      	b.n	8005262 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8005166:	69fb      	ldr	r3, [r7, #28]
 8005168:	2b08      	cmp	r3, #8
 800516a:	d007      	beq.n	800517c <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 800516c:	69fb      	ldr	r3, [r7, #28]
 800516e:	2b0c      	cmp	r3, #12
 8005170:	d112      	bne.n	8005198 <HAL_RCC_OscConfig+0x68>
 8005172:	69ba      	ldr	r2, [r7, #24]
 8005174:	2380      	movs	r3, #128	; 0x80
 8005176:	025b      	lsls	r3, r3, #9
 8005178:	429a      	cmp	r2, r3
 800517a:	d10d      	bne.n	8005198 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800517c:	4bba      	ldr	r3, [pc, #744]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800517e:	681a      	ldr	r2, [r3, #0]
 8005180:	2380      	movs	r3, #128	; 0x80
 8005182:	029b      	lsls	r3, r3, #10
 8005184:	4013      	ands	r3, r2
 8005186:	d100      	bne.n	800518a <HAL_RCC_OscConfig+0x5a>
 8005188:	e06a      	b.n	8005260 <HAL_RCC_OscConfig+0x130>
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	685b      	ldr	r3, [r3, #4]
 800518e:	2b00      	cmp	r3, #0
 8005190:	d166      	bne.n	8005260 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8005192:	2301      	movs	r3, #1
 8005194:	f000 fb42 	bl	800581c <HAL_RCC_OscConfig+0x6ec>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	685a      	ldr	r2, [r3, #4]
 800519c:	2380      	movs	r3, #128	; 0x80
 800519e:	025b      	lsls	r3, r3, #9
 80051a0:	429a      	cmp	r2, r3
 80051a2:	d107      	bne.n	80051b4 <HAL_RCC_OscConfig+0x84>
 80051a4:	4bb0      	ldr	r3, [pc, #704]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051a6:	681a      	ldr	r2, [r3, #0]
 80051a8:	4baf      	ldr	r3, [pc, #700]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051aa:	2180      	movs	r1, #128	; 0x80
 80051ac:	0249      	lsls	r1, r1, #9
 80051ae:	430a      	orrs	r2, r1
 80051b0:	601a      	str	r2, [r3, #0]
 80051b2:	e027      	b.n	8005204 <HAL_RCC_OscConfig+0xd4>
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	685a      	ldr	r2, [r3, #4]
 80051b8:	23a0      	movs	r3, #160	; 0xa0
 80051ba:	02db      	lsls	r3, r3, #11
 80051bc:	429a      	cmp	r2, r3
 80051be:	d10e      	bne.n	80051de <HAL_RCC_OscConfig+0xae>
 80051c0:	4ba9      	ldr	r3, [pc, #676]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051c2:	681a      	ldr	r2, [r3, #0]
 80051c4:	4ba8      	ldr	r3, [pc, #672]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051c6:	2180      	movs	r1, #128	; 0x80
 80051c8:	02c9      	lsls	r1, r1, #11
 80051ca:	430a      	orrs	r2, r1
 80051cc:	601a      	str	r2, [r3, #0]
 80051ce:	4ba6      	ldr	r3, [pc, #664]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051d0:	681a      	ldr	r2, [r3, #0]
 80051d2:	4ba5      	ldr	r3, [pc, #660]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051d4:	2180      	movs	r1, #128	; 0x80
 80051d6:	0249      	lsls	r1, r1, #9
 80051d8:	430a      	orrs	r2, r1
 80051da:	601a      	str	r2, [r3, #0]
 80051dc:	e012      	b.n	8005204 <HAL_RCC_OscConfig+0xd4>
 80051de:	4ba2      	ldr	r3, [pc, #648]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051e0:	681a      	ldr	r2, [r3, #0]
 80051e2:	4ba1      	ldr	r3, [pc, #644]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051e4:	49a1      	ldr	r1, [pc, #644]	; (800546c <HAL_RCC_OscConfig+0x33c>)
 80051e6:	400a      	ands	r2, r1
 80051e8:	601a      	str	r2, [r3, #0]
 80051ea:	4b9f      	ldr	r3, [pc, #636]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051ec:	681a      	ldr	r2, [r3, #0]
 80051ee:	2380      	movs	r3, #128	; 0x80
 80051f0:	025b      	lsls	r3, r3, #9
 80051f2:	4013      	ands	r3, r2
 80051f4:	60fb      	str	r3, [r7, #12]
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	4b9b      	ldr	r3, [pc, #620]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051fa:	681a      	ldr	r2, [r3, #0]
 80051fc:	4b9a      	ldr	r3, [pc, #616]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80051fe:	499c      	ldr	r1, [pc, #624]	; (8005470 <HAL_RCC_OscConfig+0x340>)
 8005200:	400a      	ands	r2, r1
 8005202:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	685b      	ldr	r3, [r3, #4]
 8005208:	2b00      	cmp	r3, #0
 800520a:	d014      	beq.n	8005236 <HAL_RCC_OscConfig+0x106>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800520c:	f7ff f8a2 	bl	8004354 <HAL_GetTick>
 8005210:	0003      	movs	r3, r0
 8005212:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8005214:	e008      	b.n	8005228 <HAL_RCC_OscConfig+0xf8>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005216:	f7ff f89d 	bl	8004354 <HAL_GetTick>
 800521a:	0002      	movs	r2, r0
 800521c:	697b      	ldr	r3, [r7, #20]
 800521e:	1ad3      	subs	r3, r2, r3
 8005220:	2b64      	cmp	r3, #100	; 0x64
 8005222:	d901      	bls.n	8005228 <HAL_RCC_OscConfig+0xf8>
          {
            return HAL_TIMEOUT;
 8005224:	2303      	movs	r3, #3
 8005226:	e2f9      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8005228:	4b8f      	ldr	r3, [pc, #572]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800522a:	681a      	ldr	r2, [r3, #0]
 800522c:	2380      	movs	r3, #128	; 0x80
 800522e:	029b      	lsls	r3, r3, #10
 8005230:	4013      	ands	r3, r2
 8005232:	d0f0      	beq.n	8005216 <HAL_RCC_OscConfig+0xe6>
 8005234:	e015      	b.n	8005262 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005236:	f7ff f88d 	bl	8004354 <HAL_GetTick>
 800523a:	0003      	movs	r3, r0
 800523c:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 800523e:	e008      	b.n	8005252 <HAL_RCC_OscConfig+0x122>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005240:	f7ff f888 	bl	8004354 <HAL_GetTick>
 8005244:	0002      	movs	r2, r0
 8005246:	697b      	ldr	r3, [r7, #20]
 8005248:	1ad3      	subs	r3, r2, r3
 800524a:	2b64      	cmp	r3, #100	; 0x64
 800524c:	d901      	bls.n	8005252 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 800524e:	2303      	movs	r3, #3
 8005250:	e2e4      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8005252:	4b85      	ldr	r3, [pc, #532]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005254:	681a      	ldr	r2, [r3, #0]
 8005256:	2380      	movs	r3, #128	; 0x80
 8005258:	029b      	lsls	r3, r3, #10
 800525a:	4013      	ands	r3, r2
 800525c:	d1f0      	bne.n	8005240 <HAL_RCC_OscConfig+0x110>
 800525e:	e000      	b.n	8005262 <HAL_RCC_OscConfig+0x132>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005260:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	2202      	movs	r2, #2
 8005268:	4013      	ands	r3, r2
 800526a:	d100      	bne.n	800526e <HAL_RCC_OscConfig+0x13e>
 800526c:	e099      	b.n	80053a2 <HAL_RCC_OscConfig+0x272>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	68db      	ldr	r3, [r3, #12]
 8005272:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8005274:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005276:	2220      	movs	r2, #32
 8005278:	4013      	ands	r3, r2
 800527a:	d009      	beq.n	8005290 <HAL_RCC_OscConfig+0x160>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 800527c:	4b7a      	ldr	r3, [pc, #488]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800527e:	681a      	ldr	r2, [r3, #0]
 8005280:	4b79      	ldr	r3, [pc, #484]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005282:	2120      	movs	r1, #32
 8005284:	430a      	orrs	r2, r1
 8005286:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 8005288:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800528a:	2220      	movs	r2, #32
 800528c:	4393      	bics	r3, r2
 800528e:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005290:	69fb      	ldr	r3, [r7, #28]
 8005292:	2b04      	cmp	r3, #4
 8005294:	d005      	beq.n	80052a2 <HAL_RCC_OscConfig+0x172>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8005296:	69fb      	ldr	r3, [r7, #28]
 8005298:	2b0c      	cmp	r3, #12
 800529a:	d13e      	bne.n	800531a <HAL_RCC_OscConfig+0x1ea>
 800529c:	69bb      	ldr	r3, [r7, #24]
 800529e:	2b00      	cmp	r3, #0
 80052a0:	d13b      	bne.n	800531a <HAL_RCC_OscConfig+0x1ea>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 80052a2:	4b71      	ldr	r3, [pc, #452]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	2204      	movs	r2, #4
 80052a8:	4013      	ands	r3, r2
 80052aa:	d004      	beq.n	80052b6 <HAL_RCC_OscConfig+0x186>
 80052ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d101      	bne.n	80052b6 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 80052b2:	2301      	movs	r3, #1
 80052b4:	e2b2      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80052b6:	4b6c      	ldr	r3, [pc, #432]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80052b8:	685b      	ldr	r3, [r3, #4]
 80052ba:	4a6e      	ldr	r2, [pc, #440]	; (8005474 <HAL_RCC_OscConfig+0x344>)
 80052bc:	4013      	ands	r3, r2
 80052be:	0019      	movs	r1, r3
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	691b      	ldr	r3, [r3, #16]
 80052c4:	021a      	lsls	r2, r3, #8
 80052c6:	4b68      	ldr	r3, [pc, #416]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80052c8:	430a      	orrs	r2, r1
 80052ca:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 80052cc:	4b66      	ldr	r3, [pc, #408]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	2209      	movs	r2, #9
 80052d2:	4393      	bics	r3, r2
 80052d4:	0019      	movs	r1, r3
 80052d6:	4b64      	ldr	r3, [pc, #400]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80052d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80052da:	430a      	orrs	r2, r1
 80052dc:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80052de:	f000 fbeb 	bl	8005ab8 <HAL_RCC_GetSysClockFreq>
 80052e2:	0001      	movs	r1, r0
 80052e4:	4b60      	ldr	r3, [pc, #384]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80052e6:	68db      	ldr	r3, [r3, #12]
 80052e8:	091b      	lsrs	r3, r3, #4
 80052ea:	220f      	movs	r2, #15
 80052ec:	4013      	ands	r3, r2
 80052ee:	4a62      	ldr	r2, [pc, #392]	; (8005478 <HAL_RCC_OscConfig+0x348>)
 80052f0:	5cd3      	ldrb	r3, [r2, r3]
 80052f2:	000a      	movs	r2, r1
 80052f4:	40da      	lsrs	r2, r3
 80052f6:	4b61      	ldr	r3, [pc, #388]	; (800547c <HAL_RCC_OscConfig+0x34c>)
 80052f8:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (uwTickPrio);
 80052fa:	4b61      	ldr	r3, [pc, #388]	; (8005480 <HAL_RCC_OscConfig+0x350>)
 80052fc:	681b      	ldr	r3, [r3, #0]
 80052fe:	2513      	movs	r5, #19
 8005300:	197c      	adds	r4, r7, r5
 8005302:	0018      	movs	r0, r3
 8005304:	f7fe ffe0 	bl	80042c8 <HAL_InitTick>
 8005308:	0003      	movs	r3, r0
 800530a:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 800530c:	197b      	adds	r3, r7, r5
 800530e:	781b      	ldrb	r3, [r3, #0]
 8005310:	2b00      	cmp	r3, #0
 8005312:	d046      	beq.n	80053a2 <HAL_RCC_OscConfig+0x272>
      {
        return status;
 8005314:	197b      	adds	r3, r7, r5
 8005316:	781b      	ldrb	r3, [r3, #0]
 8005318:	e280      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 800531a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800531c:	2b00      	cmp	r3, #0
 800531e:	d027      	beq.n	8005370 <HAL_RCC_OscConfig+0x240>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8005320:	4b51      	ldr	r3, [pc, #324]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	2209      	movs	r2, #9
 8005326:	4393      	bics	r3, r2
 8005328:	0019      	movs	r1, r3
 800532a:	4b4f      	ldr	r3, [pc, #316]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800532c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800532e:	430a      	orrs	r2, r1
 8005330:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005332:	f7ff f80f 	bl	8004354 <HAL_GetTick>
 8005336:	0003      	movs	r3, r0
 8005338:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800533a:	e008      	b.n	800534e <HAL_RCC_OscConfig+0x21e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800533c:	f7ff f80a 	bl	8004354 <HAL_GetTick>
 8005340:	0002      	movs	r2, r0
 8005342:	697b      	ldr	r3, [r7, #20]
 8005344:	1ad3      	subs	r3, r2, r3
 8005346:	2b02      	cmp	r3, #2
 8005348:	d901      	bls.n	800534e <HAL_RCC_OscConfig+0x21e>
          {
            return HAL_TIMEOUT;
 800534a:	2303      	movs	r3, #3
 800534c:	e266      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800534e:	4b46      	ldr	r3, [pc, #280]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	2204      	movs	r2, #4
 8005354:	4013      	ands	r3, r2
 8005356:	d0f1      	beq.n	800533c <HAL_RCC_OscConfig+0x20c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005358:	4b43      	ldr	r3, [pc, #268]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800535a:	685b      	ldr	r3, [r3, #4]
 800535c:	4a45      	ldr	r2, [pc, #276]	; (8005474 <HAL_RCC_OscConfig+0x344>)
 800535e:	4013      	ands	r3, r2
 8005360:	0019      	movs	r1, r3
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	691b      	ldr	r3, [r3, #16]
 8005366:	021a      	lsls	r2, r3, #8
 8005368:	4b3f      	ldr	r3, [pc, #252]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800536a:	430a      	orrs	r2, r1
 800536c:	605a      	str	r2, [r3, #4]
 800536e:	e018      	b.n	80053a2 <HAL_RCC_OscConfig+0x272>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005370:	4b3d      	ldr	r3, [pc, #244]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005372:	681a      	ldr	r2, [r3, #0]
 8005374:	4b3c      	ldr	r3, [pc, #240]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005376:	2101      	movs	r1, #1
 8005378:	438a      	bics	r2, r1
 800537a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800537c:	f7fe ffea 	bl	8004354 <HAL_GetTick>
 8005380:	0003      	movs	r3, r0
 8005382:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8005384:	e008      	b.n	8005398 <HAL_RCC_OscConfig+0x268>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005386:	f7fe ffe5 	bl	8004354 <HAL_GetTick>
 800538a:	0002      	movs	r2, r0
 800538c:	697b      	ldr	r3, [r7, #20]
 800538e:	1ad3      	subs	r3, r2, r3
 8005390:	2b02      	cmp	r3, #2
 8005392:	d901      	bls.n	8005398 <HAL_RCC_OscConfig+0x268>
          {
            return HAL_TIMEOUT;
 8005394:	2303      	movs	r3, #3
 8005396:	e241      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8005398:	4b33      	ldr	r3, [pc, #204]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	2204      	movs	r2, #4
 800539e:	4013      	ands	r3, r2
 80053a0:	d1f1      	bne.n	8005386 <HAL_RCC_OscConfig+0x256>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	2210      	movs	r2, #16
 80053a8:	4013      	ands	r3, r2
 80053aa:	d100      	bne.n	80053ae <HAL_RCC_OscConfig+0x27e>
 80053ac:	e0a1      	b.n	80054f2 <HAL_RCC_OscConfig+0x3c2>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 80053ae:	69fb      	ldr	r3, [r7, #28]
 80053b0:	2b00      	cmp	r3, #0
 80053b2:	d140      	bne.n	8005436 <HAL_RCC_OscConfig+0x306>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 80053b4:	4b2c      	ldr	r3, [pc, #176]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80053b6:	681a      	ldr	r2, [r3, #0]
 80053b8:	2380      	movs	r3, #128	; 0x80
 80053ba:	009b      	lsls	r3, r3, #2
 80053bc:	4013      	ands	r3, r2
 80053be:	d005      	beq.n	80053cc <HAL_RCC_OscConfig+0x29c>
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	699b      	ldr	r3, [r3, #24]
 80053c4:	2b00      	cmp	r3, #0
 80053c6:	d101      	bne.n	80053cc <HAL_RCC_OscConfig+0x29c>
      {
        return HAL_ERROR;
 80053c8:	2301      	movs	r3, #1
 80053ca:	e227      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80053cc:	4b26      	ldr	r3, [pc, #152]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80053ce:	685b      	ldr	r3, [r3, #4]
 80053d0:	4a2c      	ldr	r2, [pc, #176]	; (8005484 <HAL_RCC_OscConfig+0x354>)
 80053d2:	4013      	ands	r3, r2
 80053d4:	0019      	movs	r1, r3
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	6a1a      	ldr	r2, [r3, #32]
 80053da:	4b23      	ldr	r3, [pc, #140]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80053dc:	430a      	orrs	r2, r1
 80053de:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80053e0:	4b21      	ldr	r3, [pc, #132]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80053e2:	685b      	ldr	r3, [r3, #4]
 80053e4:	021b      	lsls	r3, r3, #8
 80053e6:	0a19      	lsrs	r1, r3, #8
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	69db      	ldr	r3, [r3, #28]
 80053ec:	061a      	lsls	r2, r3, #24
 80053ee:	4b1e      	ldr	r3, [pc, #120]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 80053f0:	430a      	orrs	r2, r1
 80053f2:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	6a1b      	ldr	r3, [r3, #32]
 80053f8:	0b5b      	lsrs	r3, r3, #13
 80053fa:	3301      	adds	r3, #1
 80053fc:	2280      	movs	r2, #128	; 0x80
 80053fe:	0212      	lsls	r2, r2, #8
 8005400:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8005402:	4b19      	ldr	r3, [pc, #100]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005404:	68db      	ldr	r3, [r3, #12]
 8005406:	091b      	lsrs	r3, r3, #4
 8005408:	210f      	movs	r1, #15
 800540a:	400b      	ands	r3, r1
 800540c:	491a      	ldr	r1, [pc, #104]	; (8005478 <HAL_RCC_OscConfig+0x348>)
 800540e:	5ccb      	ldrb	r3, [r1, r3]
 8005410:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8005412:	4b1a      	ldr	r3, [pc, #104]	; (800547c <HAL_RCC_OscConfig+0x34c>)
 8005414:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (uwTickPrio);
 8005416:	4b1a      	ldr	r3, [pc, #104]	; (8005480 <HAL_RCC_OscConfig+0x350>)
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	2513      	movs	r5, #19
 800541c:	197c      	adds	r4, r7, r5
 800541e:	0018      	movs	r0, r3
 8005420:	f7fe ff52 	bl	80042c8 <HAL_InitTick>
 8005424:	0003      	movs	r3, r0
 8005426:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8005428:	197b      	adds	r3, r7, r5
 800542a:	781b      	ldrb	r3, [r3, #0]
 800542c:	2b00      	cmp	r3, #0
 800542e:	d060      	beq.n	80054f2 <HAL_RCC_OscConfig+0x3c2>
        {
          return status;
 8005430:	197b      	adds	r3, r7, r5
 8005432:	781b      	ldrb	r3, [r3, #0]
 8005434:	e1f2      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	699b      	ldr	r3, [r3, #24]
 800543a:	2b00      	cmp	r3, #0
 800543c:	d03f      	beq.n	80054be <HAL_RCC_OscConfig+0x38e>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 800543e:	4b0a      	ldr	r3, [pc, #40]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005440:	681a      	ldr	r2, [r3, #0]
 8005442:	4b09      	ldr	r3, [pc, #36]	; (8005468 <HAL_RCC_OscConfig+0x338>)
 8005444:	2180      	movs	r1, #128	; 0x80
 8005446:	0049      	lsls	r1, r1, #1
 8005448:	430a      	orrs	r2, r1
 800544a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800544c:	f7fe ff82 	bl	8004354 <HAL_GetTick>
 8005450:	0003      	movs	r3, r0
 8005452:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8005454:	e018      	b.n	8005488 <HAL_RCC_OscConfig+0x358>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8005456:	f7fe ff7d 	bl	8004354 <HAL_GetTick>
 800545a:	0002      	movs	r2, r0
 800545c:	697b      	ldr	r3, [r7, #20]
 800545e:	1ad3      	subs	r3, r2, r3
 8005460:	2b02      	cmp	r3, #2
 8005462:	d911      	bls.n	8005488 <HAL_RCC_OscConfig+0x358>
          {
            return HAL_TIMEOUT;
 8005464:	2303      	movs	r3, #3
 8005466:	e1d9      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
 8005468:	40021000 	.word	0x40021000
 800546c:	fffeffff 	.word	0xfffeffff
 8005470:	fffbffff 	.word	0xfffbffff
 8005474:	ffffe0ff 	.word	0xffffe0ff
 8005478:	0800a600 	.word	0x0800a600
 800547c:	20000000 	.word	0x20000000
 8005480:	20000004 	.word	0x20000004
 8005484:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8005488:	4bc9      	ldr	r3, [pc, #804]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800548a:	681a      	ldr	r2, [r3, #0]
 800548c:	2380      	movs	r3, #128	; 0x80
 800548e:	009b      	lsls	r3, r3, #2
 8005490:	4013      	ands	r3, r2
 8005492:	d0e0      	beq.n	8005456 <HAL_RCC_OscConfig+0x326>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8005494:	4bc6      	ldr	r3, [pc, #792]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005496:	685b      	ldr	r3, [r3, #4]
 8005498:	4ac6      	ldr	r2, [pc, #792]	; (80057b4 <HAL_RCC_OscConfig+0x684>)
 800549a:	4013      	ands	r3, r2
 800549c:	0019      	movs	r1, r3
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	6a1a      	ldr	r2, [r3, #32]
 80054a2:	4bc3      	ldr	r3, [pc, #780]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80054a4:	430a      	orrs	r2, r1
 80054a6:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80054a8:	4bc1      	ldr	r3, [pc, #772]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80054aa:	685b      	ldr	r3, [r3, #4]
 80054ac:	021b      	lsls	r3, r3, #8
 80054ae:	0a19      	lsrs	r1, r3, #8
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	69db      	ldr	r3, [r3, #28]
 80054b4:	061a      	lsls	r2, r3, #24
 80054b6:	4bbe      	ldr	r3, [pc, #760]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80054b8:	430a      	orrs	r2, r1
 80054ba:	605a      	str	r2, [r3, #4]
 80054bc:	e019      	b.n	80054f2 <HAL_RCC_OscConfig+0x3c2>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 80054be:	4bbc      	ldr	r3, [pc, #752]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80054c0:	681a      	ldr	r2, [r3, #0]
 80054c2:	4bbb      	ldr	r3, [pc, #748]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80054c4:	49bc      	ldr	r1, [pc, #752]	; (80057b8 <HAL_RCC_OscConfig+0x688>)
 80054c6:	400a      	ands	r2, r1
 80054c8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80054ca:	f7fe ff43 	bl	8004354 <HAL_GetTick>
 80054ce:	0003      	movs	r3, r0
 80054d0:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 80054d2:	e008      	b.n	80054e6 <HAL_RCC_OscConfig+0x3b6>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80054d4:	f7fe ff3e 	bl	8004354 <HAL_GetTick>
 80054d8:	0002      	movs	r2, r0
 80054da:	697b      	ldr	r3, [r7, #20]
 80054dc:	1ad3      	subs	r3, r2, r3
 80054de:	2b02      	cmp	r3, #2
 80054e0:	d901      	bls.n	80054e6 <HAL_RCC_OscConfig+0x3b6>
          {
            return HAL_TIMEOUT;
 80054e2:	2303      	movs	r3, #3
 80054e4:	e19a      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 80054e6:	4bb2      	ldr	r3, [pc, #712]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80054e8:	681a      	ldr	r2, [r3, #0]
 80054ea:	2380      	movs	r3, #128	; 0x80
 80054ec:	009b      	lsls	r3, r3, #2
 80054ee:	4013      	ands	r3, r2
 80054f0:	d1f0      	bne.n	80054d4 <HAL_RCC_OscConfig+0x3a4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	2208      	movs	r2, #8
 80054f8:	4013      	ands	r3, r2
 80054fa:	d036      	beq.n	800556a <HAL_RCC_OscConfig+0x43a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	695b      	ldr	r3, [r3, #20]
 8005500:	2b00      	cmp	r3, #0
 8005502:	d019      	beq.n	8005538 <HAL_RCC_OscConfig+0x408>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005504:	4baa      	ldr	r3, [pc, #680]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005506:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005508:	4ba9      	ldr	r3, [pc, #676]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800550a:	2101      	movs	r1, #1
 800550c:	430a      	orrs	r2, r1
 800550e:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005510:	f7fe ff20 	bl	8004354 <HAL_GetTick>
 8005514:	0003      	movs	r3, r0
 8005516:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8005518:	e008      	b.n	800552c <HAL_RCC_OscConfig+0x3fc>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800551a:	f7fe ff1b 	bl	8004354 <HAL_GetTick>
 800551e:	0002      	movs	r2, r0
 8005520:	697b      	ldr	r3, [r7, #20]
 8005522:	1ad3      	subs	r3, r2, r3
 8005524:	2b02      	cmp	r3, #2
 8005526:	d901      	bls.n	800552c <HAL_RCC_OscConfig+0x3fc>
        {
          return HAL_TIMEOUT;
 8005528:	2303      	movs	r3, #3
 800552a:	e177      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 800552c:	4ba0      	ldr	r3, [pc, #640]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800552e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005530:	2202      	movs	r2, #2
 8005532:	4013      	ands	r3, r2
 8005534:	d0f1      	beq.n	800551a <HAL_RCC_OscConfig+0x3ea>
 8005536:	e018      	b.n	800556a <HAL_RCC_OscConfig+0x43a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005538:	4b9d      	ldr	r3, [pc, #628]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800553a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800553c:	4b9c      	ldr	r3, [pc, #624]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800553e:	2101      	movs	r1, #1
 8005540:	438a      	bics	r2, r1
 8005542:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005544:	f7fe ff06 	bl	8004354 <HAL_GetTick>
 8005548:	0003      	movs	r3, r0
 800554a:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 800554c:	e008      	b.n	8005560 <HAL_RCC_OscConfig+0x430>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800554e:	f7fe ff01 	bl	8004354 <HAL_GetTick>
 8005552:	0002      	movs	r2, r0
 8005554:	697b      	ldr	r3, [r7, #20]
 8005556:	1ad3      	subs	r3, r2, r3
 8005558:	2b02      	cmp	r3, #2
 800555a:	d901      	bls.n	8005560 <HAL_RCC_OscConfig+0x430>
        {
          return HAL_TIMEOUT;
 800555c:	2303      	movs	r3, #3
 800555e:	e15d      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8005560:	4b93      	ldr	r3, [pc, #588]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005562:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005564:	2202      	movs	r2, #2
 8005566:	4013      	ands	r3, r2
 8005568:	d1f1      	bne.n	800554e <HAL_RCC_OscConfig+0x41e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	2204      	movs	r2, #4
 8005570:	4013      	ands	r3, r2
 8005572:	d100      	bne.n	8005576 <HAL_RCC_OscConfig+0x446>
 8005574:	e0ae      	b.n	80056d4 <HAL_RCC_OscConfig+0x5a4>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005576:	2023      	movs	r0, #35	; 0x23
 8005578:	183b      	adds	r3, r7, r0
 800557a:	2200      	movs	r2, #0
 800557c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800557e:	4b8c      	ldr	r3, [pc, #560]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005580:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005582:	2380      	movs	r3, #128	; 0x80
 8005584:	055b      	lsls	r3, r3, #21
 8005586:	4013      	ands	r3, r2
 8005588:	d109      	bne.n	800559e <HAL_RCC_OscConfig+0x46e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800558a:	4b89      	ldr	r3, [pc, #548]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800558c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800558e:	4b88      	ldr	r3, [pc, #544]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005590:	2180      	movs	r1, #128	; 0x80
 8005592:	0549      	lsls	r1, r1, #21
 8005594:	430a      	orrs	r2, r1
 8005596:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8005598:	183b      	adds	r3, r7, r0
 800559a:	2201      	movs	r2, #1
 800559c:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800559e:	4b87      	ldr	r3, [pc, #540]	; (80057bc <HAL_RCC_OscConfig+0x68c>)
 80055a0:	681a      	ldr	r2, [r3, #0]
 80055a2:	2380      	movs	r3, #128	; 0x80
 80055a4:	005b      	lsls	r3, r3, #1
 80055a6:	4013      	ands	r3, r2
 80055a8:	d11a      	bne.n	80055e0 <HAL_RCC_OscConfig+0x4b0>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80055aa:	4b84      	ldr	r3, [pc, #528]	; (80057bc <HAL_RCC_OscConfig+0x68c>)
 80055ac:	681a      	ldr	r2, [r3, #0]
 80055ae:	4b83      	ldr	r3, [pc, #524]	; (80057bc <HAL_RCC_OscConfig+0x68c>)
 80055b0:	2180      	movs	r1, #128	; 0x80
 80055b2:	0049      	lsls	r1, r1, #1
 80055b4:	430a      	orrs	r2, r1
 80055b6:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80055b8:	f7fe fecc 	bl	8004354 <HAL_GetTick>
 80055bc:	0003      	movs	r3, r0
 80055be:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80055c0:	e008      	b.n	80055d4 <HAL_RCC_OscConfig+0x4a4>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80055c2:	f7fe fec7 	bl	8004354 <HAL_GetTick>
 80055c6:	0002      	movs	r2, r0
 80055c8:	697b      	ldr	r3, [r7, #20]
 80055ca:	1ad3      	subs	r3, r2, r3
 80055cc:	2b64      	cmp	r3, #100	; 0x64
 80055ce:	d901      	bls.n	80055d4 <HAL_RCC_OscConfig+0x4a4>
        {
          return HAL_TIMEOUT;
 80055d0:	2303      	movs	r3, #3
 80055d2:	e123      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80055d4:	4b79      	ldr	r3, [pc, #484]	; (80057bc <HAL_RCC_OscConfig+0x68c>)
 80055d6:	681a      	ldr	r2, [r3, #0]
 80055d8:	2380      	movs	r3, #128	; 0x80
 80055da:	005b      	lsls	r3, r3, #1
 80055dc:	4013      	ands	r3, r2
 80055de:	d0f0      	beq.n	80055c2 <HAL_RCC_OscConfig+0x492>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	689a      	ldr	r2, [r3, #8]
 80055e4:	2380      	movs	r3, #128	; 0x80
 80055e6:	005b      	lsls	r3, r3, #1
 80055e8:	429a      	cmp	r2, r3
 80055ea:	d107      	bne.n	80055fc <HAL_RCC_OscConfig+0x4cc>
 80055ec:	4b70      	ldr	r3, [pc, #448]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80055ee:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80055f0:	4b6f      	ldr	r3, [pc, #444]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80055f2:	2180      	movs	r1, #128	; 0x80
 80055f4:	0049      	lsls	r1, r1, #1
 80055f6:	430a      	orrs	r2, r1
 80055f8:	651a      	str	r2, [r3, #80]	; 0x50
 80055fa:	e031      	b.n	8005660 <HAL_RCC_OscConfig+0x530>
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	689b      	ldr	r3, [r3, #8]
 8005600:	2b00      	cmp	r3, #0
 8005602:	d10c      	bne.n	800561e <HAL_RCC_OscConfig+0x4ee>
 8005604:	4b6a      	ldr	r3, [pc, #424]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005606:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005608:	4b69      	ldr	r3, [pc, #420]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800560a:	496b      	ldr	r1, [pc, #428]	; (80057b8 <HAL_RCC_OscConfig+0x688>)
 800560c:	400a      	ands	r2, r1
 800560e:	651a      	str	r2, [r3, #80]	; 0x50
 8005610:	4b67      	ldr	r3, [pc, #412]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005612:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005614:	4b66      	ldr	r3, [pc, #408]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005616:	496a      	ldr	r1, [pc, #424]	; (80057c0 <HAL_RCC_OscConfig+0x690>)
 8005618:	400a      	ands	r2, r1
 800561a:	651a      	str	r2, [r3, #80]	; 0x50
 800561c:	e020      	b.n	8005660 <HAL_RCC_OscConfig+0x530>
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	689a      	ldr	r2, [r3, #8]
 8005622:	23a0      	movs	r3, #160	; 0xa0
 8005624:	00db      	lsls	r3, r3, #3
 8005626:	429a      	cmp	r2, r3
 8005628:	d10e      	bne.n	8005648 <HAL_RCC_OscConfig+0x518>
 800562a:	4b61      	ldr	r3, [pc, #388]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800562c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800562e:	4b60      	ldr	r3, [pc, #384]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005630:	2180      	movs	r1, #128	; 0x80
 8005632:	00c9      	lsls	r1, r1, #3
 8005634:	430a      	orrs	r2, r1
 8005636:	651a      	str	r2, [r3, #80]	; 0x50
 8005638:	4b5d      	ldr	r3, [pc, #372]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800563a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800563c:	4b5c      	ldr	r3, [pc, #368]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800563e:	2180      	movs	r1, #128	; 0x80
 8005640:	0049      	lsls	r1, r1, #1
 8005642:	430a      	orrs	r2, r1
 8005644:	651a      	str	r2, [r3, #80]	; 0x50
 8005646:	e00b      	b.n	8005660 <HAL_RCC_OscConfig+0x530>
 8005648:	4b59      	ldr	r3, [pc, #356]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800564a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800564c:	4b58      	ldr	r3, [pc, #352]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800564e:	495a      	ldr	r1, [pc, #360]	; (80057b8 <HAL_RCC_OscConfig+0x688>)
 8005650:	400a      	ands	r2, r1
 8005652:	651a      	str	r2, [r3, #80]	; 0x50
 8005654:	4b56      	ldr	r3, [pc, #344]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005656:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005658:	4b55      	ldr	r3, [pc, #340]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800565a:	4959      	ldr	r1, [pc, #356]	; (80057c0 <HAL_RCC_OscConfig+0x690>)
 800565c:	400a      	ands	r2, r1
 800565e:	651a      	str	r2, [r3, #80]	; 0x50

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	689b      	ldr	r3, [r3, #8]
 8005664:	2b00      	cmp	r3, #0
 8005666:	d015      	beq.n	8005694 <HAL_RCC_OscConfig+0x564>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005668:	f7fe fe74 	bl	8004354 <HAL_GetTick>
 800566c:	0003      	movs	r3, r0
 800566e:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8005670:	e009      	b.n	8005686 <HAL_RCC_OscConfig+0x556>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005672:	f7fe fe6f 	bl	8004354 <HAL_GetTick>
 8005676:	0002      	movs	r2, r0
 8005678:	697b      	ldr	r3, [r7, #20]
 800567a:	1ad3      	subs	r3, r2, r3
 800567c:	4a51      	ldr	r2, [pc, #324]	; (80057c4 <HAL_RCC_OscConfig+0x694>)
 800567e:	4293      	cmp	r3, r2
 8005680:	d901      	bls.n	8005686 <HAL_RCC_OscConfig+0x556>
        {
          return HAL_TIMEOUT;
 8005682:	2303      	movs	r3, #3
 8005684:	e0ca      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8005686:	4b4a      	ldr	r3, [pc, #296]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005688:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800568a:	2380      	movs	r3, #128	; 0x80
 800568c:	009b      	lsls	r3, r3, #2
 800568e:	4013      	ands	r3, r2
 8005690:	d0ef      	beq.n	8005672 <HAL_RCC_OscConfig+0x542>
 8005692:	e014      	b.n	80056be <HAL_RCC_OscConfig+0x58e>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005694:	f7fe fe5e 	bl	8004354 <HAL_GetTick>
 8005698:	0003      	movs	r3, r0
 800569a:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800569c:	e009      	b.n	80056b2 <HAL_RCC_OscConfig+0x582>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800569e:	f7fe fe59 	bl	8004354 <HAL_GetTick>
 80056a2:	0002      	movs	r2, r0
 80056a4:	697b      	ldr	r3, [r7, #20]
 80056a6:	1ad3      	subs	r3, r2, r3
 80056a8:	4a46      	ldr	r2, [pc, #280]	; (80057c4 <HAL_RCC_OscConfig+0x694>)
 80056aa:	4293      	cmp	r3, r2
 80056ac:	d901      	bls.n	80056b2 <HAL_RCC_OscConfig+0x582>
        {
          return HAL_TIMEOUT;
 80056ae:	2303      	movs	r3, #3
 80056b0:	e0b4      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80056b2:	4b3f      	ldr	r3, [pc, #252]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80056b4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80056b6:	2380      	movs	r3, #128	; 0x80
 80056b8:	009b      	lsls	r3, r3, #2
 80056ba:	4013      	ands	r3, r2
 80056bc:	d1ef      	bne.n	800569e <HAL_RCC_OscConfig+0x56e>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80056be:	2323      	movs	r3, #35	; 0x23
 80056c0:	18fb      	adds	r3, r7, r3
 80056c2:	781b      	ldrb	r3, [r3, #0]
 80056c4:	2b01      	cmp	r3, #1
 80056c6:	d105      	bne.n	80056d4 <HAL_RCC_OscConfig+0x5a4>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80056c8:	4b39      	ldr	r3, [pc, #228]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80056ca:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80056cc:	4b38      	ldr	r3, [pc, #224]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80056ce:	493e      	ldr	r1, [pc, #248]	; (80057c8 <HAL_RCC_OscConfig+0x698>)
 80056d0:	400a      	ands	r2, r1
 80056d2:	639a      	str	r2, [r3, #56]	; 0x38
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056d8:	2b00      	cmp	r3, #0
 80056da:	d100      	bne.n	80056de <HAL_RCC_OscConfig+0x5ae>
 80056dc:	e09d      	b.n	800581a <HAL_RCC_OscConfig+0x6ea>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80056de:	69fb      	ldr	r3, [r7, #28]
 80056e0:	2b0c      	cmp	r3, #12
 80056e2:	d100      	bne.n	80056e6 <HAL_RCC_OscConfig+0x5b6>
 80056e4:	e076      	b.n	80057d4 <HAL_RCC_OscConfig+0x6a4>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ea:	2b02      	cmp	r3, #2
 80056ec:	d145      	bne.n	800577a <HAL_RCC_OscConfig+0x64a>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80056ee:	4b30      	ldr	r3, [pc, #192]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80056f0:	681a      	ldr	r2, [r3, #0]
 80056f2:	4b2f      	ldr	r3, [pc, #188]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80056f4:	4935      	ldr	r1, [pc, #212]	; (80057cc <HAL_RCC_OscConfig+0x69c>)
 80056f6:	400a      	ands	r2, r1
 80056f8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80056fa:	f7fe fe2b 	bl	8004354 <HAL_GetTick>
 80056fe:	0003      	movs	r3, r0
 8005700:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8005702:	e008      	b.n	8005716 <HAL_RCC_OscConfig+0x5e6>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005704:	f7fe fe26 	bl	8004354 <HAL_GetTick>
 8005708:	0002      	movs	r2, r0
 800570a:	697b      	ldr	r3, [r7, #20]
 800570c:	1ad3      	subs	r3, r2, r3
 800570e:	2b02      	cmp	r3, #2
 8005710:	d901      	bls.n	8005716 <HAL_RCC_OscConfig+0x5e6>
          {
            return HAL_TIMEOUT;
 8005712:	2303      	movs	r3, #3
 8005714:	e082      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8005716:	4b26      	ldr	r3, [pc, #152]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005718:	681a      	ldr	r2, [r3, #0]
 800571a:	2380      	movs	r3, #128	; 0x80
 800571c:	049b      	lsls	r3, r3, #18
 800571e:	4013      	ands	r3, r2
 8005720:	d1f0      	bne.n	8005704 <HAL_RCC_OscConfig+0x5d4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8005722:	4b23      	ldr	r3, [pc, #140]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005724:	68db      	ldr	r3, [r3, #12]
 8005726:	4a2a      	ldr	r2, [pc, #168]	; (80057d0 <HAL_RCC_OscConfig+0x6a0>)
 8005728:	4013      	ands	r3, r2
 800572a:	0019      	movs	r1, r3
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005734:	431a      	orrs	r2, r3
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800573a:	431a      	orrs	r2, r3
 800573c:	4b1c      	ldr	r3, [pc, #112]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800573e:	430a      	orrs	r2, r1
 8005740:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005742:	4b1b      	ldr	r3, [pc, #108]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005744:	681a      	ldr	r2, [r3, #0]
 8005746:	4b1a      	ldr	r3, [pc, #104]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005748:	2180      	movs	r1, #128	; 0x80
 800574a:	0449      	lsls	r1, r1, #17
 800574c:	430a      	orrs	r2, r1
 800574e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005750:	f7fe fe00 	bl	8004354 <HAL_GetTick>
 8005754:	0003      	movs	r3, r0
 8005756:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8005758:	e008      	b.n	800576c <HAL_RCC_OscConfig+0x63c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800575a:	f7fe fdfb 	bl	8004354 <HAL_GetTick>
 800575e:	0002      	movs	r2, r0
 8005760:	697b      	ldr	r3, [r7, #20]
 8005762:	1ad3      	subs	r3, r2, r3
 8005764:	2b02      	cmp	r3, #2
 8005766:	d901      	bls.n	800576c <HAL_RCC_OscConfig+0x63c>
          {
            return HAL_TIMEOUT;
 8005768:	2303      	movs	r3, #3
 800576a:	e057      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 800576c:	4b10      	ldr	r3, [pc, #64]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800576e:	681a      	ldr	r2, [r3, #0]
 8005770:	2380      	movs	r3, #128	; 0x80
 8005772:	049b      	lsls	r3, r3, #18
 8005774:	4013      	ands	r3, r2
 8005776:	d0f0      	beq.n	800575a <HAL_RCC_OscConfig+0x62a>
 8005778:	e04f      	b.n	800581a <HAL_RCC_OscConfig+0x6ea>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800577a:	4b0d      	ldr	r3, [pc, #52]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 800577c:	681a      	ldr	r2, [r3, #0]
 800577e:	4b0c      	ldr	r3, [pc, #48]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 8005780:	4912      	ldr	r1, [pc, #72]	; (80057cc <HAL_RCC_OscConfig+0x69c>)
 8005782:	400a      	ands	r2, r1
 8005784:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005786:	f7fe fde5 	bl	8004354 <HAL_GetTick>
 800578a:	0003      	movs	r3, r0
 800578c:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 800578e:	e008      	b.n	80057a2 <HAL_RCC_OscConfig+0x672>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005790:	f7fe fde0 	bl	8004354 <HAL_GetTick>
 8005794:	0002      	movs	r2, r0
 8005796:	697b      	ldr	r3, [r7, #20]
 8005798:	1ad3      	subs	r3, r2, r3
 800579a:	2b02      	cmp	r3, #2
 800579c:	d901      	bls.n	80057a2 <HAL_RCC_OscConfig+0x672>
          {
            return HAL_TIMEOUT;
 800579e:	2303      	movs	r3, #3
 80057a0:	e03c      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80057a2:	4b03      	ldr	r3, [pc, #12]	; (80057b0 <HAL_RCC_OscConfig+0x680>)
 80057a4:	681a      	ldr	r2, [r3, #0]
 80057a6:	2380      	movs	r3, #128	; 0x80
 80057a8:	049b      	lsls	r3, r3, #18
 80057aa:	4013      	ands	r3, r2
 80057ac:	d1f0      	bne.n	8005790 <HAL_RCC_OscConfig+0x660>
 80057ae:	e034      	b.n	800581a <HAL_RCC_OscConfig+0x6ea>
 80057b0:	40021000 	.word	0x40021000
 80057b4:	ffff1fff 	.word	0xffff1fff
 80057b8:	fffffeff 	.word	0xfffffeff
 80057bc:	40007000 	.word	0x40007000
 80057c0:	fffffbff 	.word	0xfffffbff
 80057c4:	00001388 	.word	0x00001388
 80057c8:	efffffff 	.word	0xefffffff
 80057cc:	feffffff 	.word	0xfeffffff
 80057d0:	ff02ffff 	.word	0xff02ffff
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80057d4:	687b      	ldr	r3, [r7, #4]
 80057d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057d8:	2b01      	cmp	r3, #1
 80057da:	d101      	bne.n	80057e0 <HAL_RCC_OscConfig+0x6b0>
      {
        return HAL_ERROR;
 80057dc:	2301      	movs	r3, #1
 80057de:	e01d      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 80057e0:	4b10      	ldr	r3, [pc, #64]	; (8005824 <HAL_RCC_OscConfig+0x6f4>)
 80057e2:	68db      	ldr	r3, [r3, #12]
 80057e4:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80057e6:	69ba      	ldr	r2, [r7, #24]
 80057e8:	2380      	movs	r3, #128	; 0x80
 80057ea:	025b      	lsls	r3, r3, #9
 80057ec:	401a      	ands	r2, r3
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057f2:	429a      	cmp	r2, r3
 80057f4:	d10f      	bne.n	8005816 <HAL_RCC_OscConfig+0x6e6>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 80057f6:	69ba      	ldr	r2, [r7, #24]
 80057f8:	23f0      	movs	r3, #240	; 0xf0
 80057fa:	039b      	lsls	r3, r3, #14
 80057fc:	401a      	ands	r2, r3
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005802:	429a      	cmp	r2, r3
 8005804:	d107      	bne.n	8005816 <HAL_RCC_OscConfig+0x6e6>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8005806:	69ba      	ldr	r2, [r7, #24]
 8005808:	23c0      	movs	r3, #192	; 0xc0
 800580a:	041b      	lsls	r3, r3, #16
 800580c:	401a      	ands	r2, r3
 800580e:	687b      	ldr	r3, [r7, #4]
 8005810:	6b1b      	ldr	r3, [r3, #48]	; 0x30
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8005812:	429a      	cmp	r2, r3
 8005814:	d001      	beq.n	800581a <HAL_RCC_OscConfig+0x6ea>
        {
          return HAL_ERROR;
 8005816:	2301      	movs	r3, #1
 8005818:	e000      	b.n	800581c <HAL_RCC_OscConfig+0x6ec>
        }
      }
    }
  }
  return HAL_OK;
 800581a:	2300      	movs	r3, #0
}
 800581c:	0018      	movs	r0, r3
 800581e:	46bd      	mov	sp, r7
 8005820:	b00a      	add	sp, #40	; 0x28
 8005822:	bdb0      	pop	{r4, r5, r7, pc}
 8005824:	40021000 	.word	0x40021000

08005828 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005828:	b5b0      	push	{r4, r5, r7, lr}
 800582a:	b084      	sub	sp, #16
 800582c:	af00      	add	r7, sp, #0
 800582e:	6078      	str	r0, [r7, #4]
 8005830:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	2b00      	cmp	r3, #0
 8005836:	d101      	bne.n	800583c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005838:	2301      	movs	r3, #1
 800583a:	e128      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800583c:	4b96      	ldr	r3, [pc, #600]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	2201      	movs	r2, #1
 8005842:	4013      	ands	r3, r2
 8005844:	683a      	ldr	r2, [r7, #0]
 8005846:	429a      	cmp	r2, r3
 8005848:	d91e      	bls.n	8005888 <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800584a:	4b93      	ldr	r3, [pc, #588]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	2201      	movs	r2, #1
 8005850:	4393      	bics	r3, r2
 8005852:	0019      	movs	r1, r3
 8005854:	4b90      	ldr	r3, [pc, #576]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 8005856:	683a      	ldr	r2, [r7, #0]
 8005858:	430a      	orrs	r2, r1
 800585a:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 800585c:	f7fe fd7a 	bl	8004354 <HAL_GetTick>
 8005860:	0003      	movs	r3, r0
 8005862:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005864:	e009      	b.n	800587a <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005866:	f7fe fd75 	bl	8004354 <HAL_GetTick>
 800586a:	0002      	movs	r2, r0
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	1ad3      	subs	r3, r2, r3
 8005870:	4a8a      	ldr	r2, [pc, #552]	; (8005a9c <HAL_RCC_ClockConfig+0x274>)
 8005872:	4293      	cmp	r3, r2
 8005874:	d901      	bls.n	800587a <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 8005876:	2303      	movs	r3, #3
 8005878:	e109      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 800587a:	4b87      	ldr	r3, [pc, #540]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	2201      	movs	r2, #1
 8005880:	4013      	ands	r3, r2
 8005882:	683a      	ldr	r2, [r7, #0]
 8005884:	429a      	cmp	r2, r3
 8005886:	d1ee      	bne.n	8005866 <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	2202      	movs	r2, #2
 800588e:	4013      	ands	r3, r2
 8005890:	d009      	beq.n	80058a6 <HAL_RCC_ClockConfig+0x7e>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005892:	4b83      	ldr	r3, [pc, #524]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005894:	68db      	ldr	r3, [r3, #12]
 8005896:	22f0      	movs	r2, #240	; 0xf0
 8005898:	4393      	bics	r3, r2
 800589a:	0019      	movs	r1, r3
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	689a      	ldr	r2, [r3, #8]
 80058a0:	4b7f      	ldr	r3, [pc, #508]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 80058a2:	430a      	orrs	r2, r1
 80058a4:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	2201      	movs	r2, #1
 80058ac:	4013      	ands	r3, r2
 80058ae:	d100      	bne.n	80058b2 <HAL_RCC_ClockConfig+0x8a>
 80058b0:	e089      	b.n	80059c6 <HAL_RCC_ClockConfig+0x19e>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	685b      	ldr	r3, [r3, #4]
 80058b6:	2b02      	cmp	r3, #2
 80058b8:	d107      	bne.n	80058ca <HAL_RCC_ClockConfig+0xa2>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80058ba:	4b79      	ldr	r3, [pc, #484]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 80058bc:	681a      	ldr	r2, [r3, #0]
 80058be:	2380      	movs	r3, #128	; 0x80
 80058c0:	029b      	lsls	r3, r3, #10
 80058c2:	4013      	ands	r3, r2
 80058c4:	d120      	bne.n	8005908 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 80058c6:	2301      	movs	r3, #1
 80058c8:	e0e1      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	685b      	ldr	r3, [r3, #4]
 80058ce:	2b03      	cmp	r3, #3
 80058d0:	d107      	bne.n	80058e2 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80058d2:	4b73      	ldr	r3, [pc, #460]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 80058d4:	681a      	ldr	r2, [r3, #0]
 80058d6:	2380      	movs	r3, #128	; 0x80
 80058d8:	049b      	lsls	r3, r3, #18
 80058da:	4013      	ands	r3, r2
 80058dc:	d114      	bne.n	8005908 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 80058de:	2301      	movs	r3, #1
 80058e0:	e0d5      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	685b      	ldr	r3, [r3, #4]
 80058e6:	2b01      	cmp	r3, #1
 80058e8:	d106      	bne.n	80058f8 <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80058ea:	4b6d      	ldr	r3, [pc, #436]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	2204      	movs	r2, #4
 80058f0:	4013      	ands	r3, r2
 80058f2:	d109      	bne.n	8005908 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 80058f4:	2301      	movs	r3, #1
 80058f6:	e0ca      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80058f8:	4b69      	ldr	r3, [pc, #420]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 80058fa:	681a      	ldr	r2, [r3, #0]
 80058fc:	2380      	movs	r3, #128	; 0x80
 80058fe:	009b      	lsls	r3, r3, #2
 8005900:	4013      	ands	r3, r2
 8005902:	d101      	bne.n	8005908 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8005904:	2301      	movs	r3, #1
 8005906:	e0c2      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005908:	4b65      	ldr	r3, [pc, #404]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 800590a:	68db      	ldr	r3, [r3, #12]
 800590c:	2203      	movs	r2, #3
 800590e:	4393      	bics	r3, r2
 8005910:	0019      	movs	r1, r3
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	685a      	ldr	r2, [r3, #4]
 8005916:	4b62      	ldr	r3, [pc, #392]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005918:	430a      	orrs	r2, r1
 800591a:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800591c:	f7fe fd1a 	bl	8004354 <HAL_GetTick>
 8005920:	0003      	movs	r3, r0
 8005922:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	685b      	ldr	r3, [r3, #4]
 8005928:	2b02      	cmp	r3, #2
 800592a:	d111      	bne.n	8005950 <HAL_RCC_ClockConfig+0x128>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 800592c:	e009      	b.n	8005942 <HAL_RCC_ClockConfig+0x11a>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800592e:	f7fe fd11 	bl	8004354 <HAL_GetTick>
 8005932:	0002      	movs	r2, r0
 8005934:	68fb      	ldr	r3, [r7, #12]
 8005936:	1ad3      	subs	r3, r2, r3
 8005938:	4a58      	ldr	r2, [pc, #352]	; (8005a9c <HAL_RCC_ClockConfig+0x274>)
 800593a:	4293      	cmp	r3, r2
 800593c:	d901      	bls.n	8005942 <HAL_RCC_ClockConfig+0x11a>
        {
          return HAL_TIMEOUT;
 800593e:	2303      	movs	r3, #3
 8005940:	e0a5      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8005942:	4b57      	ldr	r3, [pc, #348]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005944:	68db      	ldr	r3, [r3, #12]
 8005946:	220c      	movs	r2, #12
 8005948:	4013      	ands	r3, r2
 800594a:	2b08      	cmp	r3, #8
 800594c:	d1ef      	bne.n	800592e <HAL_RCC_ClockConfig+0x106>
 800594e:	e03a      	b.n	80059c6 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	685b      	ldr	r3, [r3, #4]
 8005954:	2b03      	cmp	r3, #3
 8005956:	d111      	bne.n	800597c <HAL_RCC_ClockConfig+0x154>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005958:	e009      	b.n	800596e <HAL_RCC_ClockConfig+0x146>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800595a:	f7fe fcfb 	bl	8004354 <HAL_GetTick>
 800595e:	0002      	movs	r2, r0
 8005960:	68fb      	ldr	r3, [r7, #12]
 8005962:	1ad3      	subs	r3, r2, r3
 8005964:	4a4d      	ldr	r2, [pc, #308]	; (8005a9c <HAL_RCC_ClockConfig+0x274>)
 8005966:	4293      	cmp	r3, r2
 8005968:	d901      	bls.n	800596e <HAL_RCC_ClockConfig+0x146>
        {
          return HAL_TIMEOUT;
 800596a:	2303      	movs	r3, #3
 800596c:	e08f      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800596e:	4b4c      	ldr	r3, [pc, #304]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005970:	68db      	ldr	r3, [r3, #12]
 8005972:	220c      	movs	r2, #12
 8005974:	4013      	ands	r3, r2
 8005976:	2b0c      	cmp	r3, #12
 8005978:	d1ef      	bne.n	800595a <HAL_RCC_ClockConfig+0x132>
 800597a:	e024      	b.n	80059c6 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	685b      	ldr	r3, [r3, #4]
 8005980:	2b01      	cmp	r3, #1
 8005982:	d11b      	bne.n	80059bc <HAL_RCC_ClockConfig+0x194>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8005984:	e009      	b.n	800599a <HAL_RCC_ClockConfig+0x172>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005986:	f7fe fce5 	bl	8004354 <HAL_GetTick>
 800598a:	0002      	movs	r2, r0
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	1ad3      	subs	r3, r2, r3
 8005990:	4a42      	ldr	r2, [pc, #264]	; (8005a9c <HAL_RCC_ClockConfig+0x274>)
 8005992:	4293      	cmp	r3, r2
 8005994:	d901      	bls.n	800599a <HAL_RCC_ClockConfig+0x172>
        {
          return HAL_TIMEOUT;
 8005996:	2303      	movs	r3, #3
 8005998:	e079      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 800599a:	4b41      	ldr	r3, [pc, #260]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 800599c:	68db      	ldr	r3, [r3, #12]
 800599e:	220c      	movs	r2, #12
 80059a0:	4013      	ands	r3, r2
 80059a2:	2b04      	cmp	r3, #4
 80059a4:	d1ef      	bne.n	8005986 <HAL_RCC_ClockConfig+0x15e>
 80059a6:	e00e      	b.n	80059c6 <HAL_RCC_ClockConfig+0x19e>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80059a8:	f7fe fcd4 	bl	8004354 <HAL_GetTick>
 80059ac:	0002      	movs	r2, r0
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	1ad3      	subs	r3, r2, r3
 80059b2:	4a3a      	ldr	r2, [pc, #232]	; (8005a9c <HAL_RCC_ClockConfig+0x274>)
 80059b4:	4293      	cmp	r3, r2
 80059b6:	d901      	bls.n	80059bc <HAL_RCC_ClockConfig+0x194>
        {
          return HAL_TIMEOUT;
 80059b8:	2303      	movs	r3, #3
 80059ba:	e068      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 80059bc:	4b38      	ldr	r3, [pc, #224]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 80059be:	68db      	ldr	r3, [r3, #12]
 80059c0:	220c      	movs	r2, #12
 80059c2:	4013      	ands	r3, r2
 80059c4:	d1f0      	bne.n	80059a8 <HAL_RCC_ClockConfig+0x180>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80059c6:	4b34      	ldr	r3, [pc, #208]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	2201      	movs	r2, #1
 80059cc:	4013      	ands	r3, r2
 80059ce:	683a      	ldr	r2, [r7, #0]
 80059d0:	429a      	cmp	r2, r3
 80059d2:	d21e      	bcs.n	8005a12 <HAL_RCC_ClockConfig+0x1ea>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80059d4:	4b30      	ldr	r3, [pc, #192]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 80059d6:	681b      	ldr	r3, [r3, #0]
 80059d8:	2201      	movs	r2, #1
 80059da:	4393      	bics	r3, r2
 80059dc:	0019      	movs	r1, r3
 80059de:	4b2e      	ldr	r3, [pc, #184]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 80059e0:	683a      	ldr	r2, [r7, #0]
 80059e2:	430a      	orrs	r2, r1
 80059e4:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 80059e6:	f7fe fcb5 	bl	8004354 <HAL_GetTick>
 80059ea:	0003      	movs	r3, r0
 80059ec:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 80059ee:	e009      	b.n	8005a04 <HAL_RCC_ClockConfig+0x1dc>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80059f0:	f7fe fcb0 	bl	8004354 <HAL_GetTick>
 80059f4:	0002      	movs	r2, r0
 80059f6:	68fb      	ldr	r3, [r7, #12]
 80059f8:	1ad3      	subs	r3, r2, r3
 80059fa:	4a28      	ldr	r2, [pc, #160]	; (8005a9c <HAL_RCC_ClockConfig+0x274>)
 80059fc:	4293      	cmp	r3, r2
 80059fe:	d901      	bls.n	8005a04 <HAL_RCC_ClockConfig+0x1dc>
      {
        return HAL_TIMEOUT;
 8005a00:	2303      	movs	r3, #3
 8005a02:	e044      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005a04:	4b24      	ldr	r3, [pc, #144]	; (8005a98 <HAL_RCC_ClockConfig+0x270>)
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	2201      	movs	r2, #1
 8005a0a:	4013      	ands	r3, r2
 8005a0c:	683a      	ldr	r2, [r7, #0]
 8005a0e:	429a      	cmp	r2, r3
 8005a10:	d1ee      	bne.n	80059f0 <HAL_RCC_ClockConfig+0x1c8>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	2204      	movs	r2, #4
 8005a18:	4013      	ands	r3, r2
 8005a1a:	d009      	beq.n	8005a30 <HAL_RCC_ClockConfig+0x208>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005a1c:	4b20      	ldr	r3, [pc, #128]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005a1e:	68db      	ldr	r3, [r3, #12]
 8005a20:	4a20      	ldr	r2, [pc, #128]	; (8005aa4 <HAL_RCC_ClockConfig+0x27c>)
 8005a22:	4013      	ands	r3, r2
 8005a24:	0019      	movs	r1, r3
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	68da      	ldr	r2, [r3, #12]
 8005a2a:	4b1d      	ldr	r3, [pc, #116]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005a2c:	430a      	orrs	r2, r1
 8005a2e:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	2208      	movs	r2, #8
 8005a36:	4013      	ands	r3, r2
 8005a38:	d00a      	beq.n	8005a50 <HAL_RCC_ClockConfig+0x228>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8005a3a:	4b19      	ldr	r3, [pc, #100]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005a3c:	68db      	ldr	r3, [r3, #12]
 8005a3e:	4a1a      	ldr	r2, [pc, #104]	; (8005aa8 <HAL_RCC_ClockConfig+0x280>)
 8005a40:	4013      	ands	r3, r2
 8005a42:	0019      	movs	r1, r3
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	691b      	ldr	r3, [r3, #16]
 8005a48:	00da      	lsls	r2, r3, #3
 8005a4a:	4b15      	ldr	r3, [pc, #84]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005a4c:	430a      	orrs	r2, r1
 8005a4e:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005a50:	f000 f832 	bl	8005ab8 <HAL_RCC_GetSysClockFreq>
 8005a54:	0001      	movs	r1, r0
 8005a56:	4b12      	ldr	r3, [pc, #72]	; (8005aa0 <HAL_RCC_ClockConfig+0x278>)
 8005a58:	68db      	ldr	r3, [r3, #12]
 8005a5a:	091b      	lsrs	r3, r3, #4
 8005a5c:	220f      	movs	r2, #15
 8005a5e:	4013      	ands	r3, r2
 8005a60:	4a12      	ldr	r2, [pc, #72]	; (8005aac <HAL_RCC_ClockConfig+0x284>)
 8005a62:	5cd3      	ldrb	r3, [r2, r3]
 8005a64:	000a      	movs	r2, r1
 8005a66:	40da      	lsrs	r2, r3
 8005a68:	4b11      	ldr	r3, [pc, #68]	; (8005ab0 <HAL_RCC_ClockConfig+0x288>)
 8005a6a:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 8005a6c:	4b11      	ldr	r3, [pc, #68]	; (8005ab4 <HAL_RCC_ClockConfig+0x28c>)
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	250b      	movs	r5, #11
 8005a72:	197c      	adds	r4, r7, r5
 8005a74:	0018      	movs	r0, r3
 8005a76:	f7fe fc27 	bl	80042c8 <HAL_InitTick>
 8005a7a:	0003      	movs	r3, r0
 8005a7c:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 8005a7e:	197b      	adds	r3, r7, r5
 8005a80:	781b      	ldrb	r3, [r3, #0]
 8005a82:	2b00      	cmp	r3, #0
 8005a84:	d002      	beq.n	8005a8c <HAL_RCC_ClockConfig+0x264>
  {
    return status;
 8005a86:	197b      	adds	r3, r7, r5
 8005a88:	781b      	ldrb	r3, [r3, #0]
 8005a8a:	e000      	b.n	8005a8e <HAL_RCC_ClockConfig+0x266>
  }

  return HAL_OK;
 8005a8c:	2300      	movs	r3, #0
}
 8005a8e:	0018      	movs	r0, r3
 8005a90:	46bd      	mov	sp, r7
 8005a92:	b004      	add	sp, #16
 8005a94:	bdb0      	pop	{r4, r5, r7, pc}
 8005a96:	46c0      	nop			; (mov r8, r8)
 8005a98:	40022000 	.word	0x40022000
 8005a9c:	00001388 	.word	0x00001388
 8005aa0:	40021000 	.word	0x40021000
 8005aa4:	fffff8ff 	.word	0xfffff8ff
 8005aa8:	ffffc7ff 	.word	0xffffc7ff
 8005aac:	0800a600 	.word	0x0800a600
 8005ab0:	20000000 	.word	0x20000000
 8005ab4:	20000004 	.word	0x20000004

08005ab8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005ab8:	b5b0      	push	{r4, r5, r7, lr}
 8005aba:	b08e      	sub	sp, #56	; 0x38
 8005abc:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 8005abe:	4b4c      	ldr	r3, [pc, #304]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x138>)
 8005ac0:	68db      	ldr	r3, [r3, #12]
 8005ac2:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8005ac4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005ac6:	230c      	movs	r3, #12
 8005ac8:	4013      	ands	r3, r2
 8005aca:	2b0c      	cmp	r3, #12
 8005acc:	d014      	beq.n	8005af8 <HAL_RCC_GetSysClockFreq+0x40>
 8005ace:	d900      	bls.n	8005ad2 <HAL_RCC_GetSysClockFreq+0x1a>
 8005ad0:	e07b      	b.n	8005bca <HAL_RCC_GetSysClockFreq+0x112>
 8005ad2:	2b04      	cmp	r3, #4
 8005ad4:	d002      	beq.n	8005adc <HAL_RCC_GetSysClockFreq+0x24>
 8005ad6:	2b08      	cmp	r3, #8
 8005ad8:	d00b      	beq.n	8005af2 <HAL_RCC_GetSysClockFreq+0x3a>
 8005ada:	e076      	b.n	8005bca <HAL_RCC_GetSysClockFreq+0x112>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8005adc:	4b44      	ldr	r3, [pc, #272]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x138>)
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	2210      	movs	r2, #16
 8005ae2:	4013      	ands	r3, r2
 8005ae4:	d002      	beq.n	8005aec <HAL_RCC_GetSysClockFreq+0x34>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 8005ae6:	4b43      	ldr	r3, [pc, #268]	; (8005bf4 <HAL_RCC_GetSysClockFreq+0x13c>)
 8005ae8:	633b      	str	r3, [r7, #48]	; 0x30
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 8005aea:	e07c      	b.n	8005be6 <HAL_RCC_GetSysClockFreq+0x12e>
        sysclockfreq =  HSI_VALUE;
 8005aec:	4b42      	ldr	r3, [pc, #264]	; (8005bf8 <HAL_RCC_GetSysClockFreq+0x140>)
 8005aee:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8005af0:	e079      	b.n	8005be6 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8005af2:	4b42      	ldr	r3, [pc, #264]	; (8005bfc <HAL_RCC_GetSysClockFreq+0x144>)
 8005af4:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8005af6:	e076      	b.n	8005be6 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8005af8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005afa:	0c9a      	lsrs	r2, r3, #18
 8005afc:	230f      	movs	r3, #15
 8005afe:	401a      	ands	r2, r3
 8005b00:	4b3f      	ldr	r3, [pc, #252]	; (8005c00 <HAL_RCC_GetSysClockFreq+0x148>)
 8005b02:	5c9b      	ldrb	r3, [r3, r2]
 8005b04:	62bb      	str	r3, [r7, #40]	; 0x28
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8005b06:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005b08:	0d9a      	lsrs	r2, r3, #22
 8005b0a:	2303      	movs	r3, #3
 8005b0c:	4013      	ands	r3, r2
 8005b0e:	3301      	adds	r3, #1
 8005b10:	627b      	str	r3, [r7, #36]	; 0x24
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005b12:	4b37      	ldr	r3, [pc, #220]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x138>)
 8005b14:	68da      	ldr	r2, [r3, #12]
 8005b16:	2380      	movs	r3, #128	; 0x80
 8005b18:	025b      	lsls	r3, r3, #9
 8005b1a:	4013      	ands	r3, r2
 8005b1c:	d01a      	beq.n	8005b54 <HAL_RCC_GetSysClockFreq+0x9c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8005b1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005b20:	61bb      	str	r3, [r7, #24]
 8005b22:	2300      	movs	r3, #0
 8005b24:	61fb      	str	r3, [r7, #28]
 8005b26:	4a35      	ldr	r2, [pc, #212]	; (8005bfc <HAL_RCC_GetSysClockFreq+0x144>)
 8005b28:	2300      	movs	r3, #0
 8005b2a:	69b8      	ldr	r0, [r7, #24]
 8005b2c:	69f9      	ldr	r1, [r7, #28]
 8005b2e:	f7fa fd15 	bl	800055c <__aeabi_lmul>
 8005b32:	0002      	movs	r2, r0
 8005b34:	000b      	movs	r3, r1
 8005b36:	0010      	movs	r0, r2
 8005b38:	0019      	movs	r1, r3
 8005b3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b3c:	613b      	str	r3, [r7, #16]
 8005b3e:	2300      	movs	r3, #0
 8005b40:	617b      	str	r3, [r7, #20]
 8005b42:	693a      	ldr	r2, [r7, #16]
 8005b44:	697b      	ldr	r3, [r7, #20]
 8005b46:	f7fa fce9 	bl	800051c <__aeabi_uldivmod>
 8005b4a:	0002      	movs	r2, r0
 8005b4c:	000b      	movs	r3, r1
 8005b4e:	0013      	movs	r3, r2
 8005b50:	637b      	str	r3, [r7, #52]	; 0x34
 8005b52:	e037      	b.n	8005bc4 <HAL_RCC_GetSysClockFreq+0x10c>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8005b54:	4b26      	ldr	r3, [pc, #152]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x138>)
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	2210      	movs	r2, #16
 8005b5a:	4013      	ands	r3, r2
 8005b5c:	d01a      	beq.n	8005b94 <HAL_RCC_GetSysClockFreq+0xdc>
        {
          pllvco = (uint32_t)((((uint64_t)(HSI_VALUE >> 2)) * (uint64_t)pllm) / (uint64_t)plld);
 8005b5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005b60:	60bb      	str	r3, [r7, #8]
 8005b62:	2300      	movs	r3, #0
 8005b64:	60fb      	str	r3, [r7, #12]
 8005b66:	4a23      	ldr	r2, [pc, #140]	; (8005bf4 <HAL_RCC_GetSysClockFreq+0x13c>)
 8005b68:	2300      	movs	r3, #0
 8005b6a:	68b8      	ldr	r0, [r7, #8]
 8005b6c:	68f9      	ldr	r1, [r7, #12]
 8005b6e:	f7fa fcf5 	bl	800055c <__aeabi_lmul>
 8005b72:	0002      	movs	r2, r0
 8005b74:	000b      	movs	r3, r1
 8005b76:	0010      	movs	r0, r2
 8005b78:	0019      	movs	r1, r3
 8005b7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b7c:	603b      	str	r3, [r7, #0]
 8005b7e:	2300      	movs	r3, #0
 8005b80:	607b      	str	r3, [r7, #4]
 8005b82:	683a      	ldr	r2, [r7, #0]
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	f7fa fcc9 	bl	800051c <__aeabi_uldivmod>
 8005b8a:	0002      	movs	r2, r0
 8005b8c:	000b      	movs	r3, r1
 8005b8e:	0013      	movs	r3, r2
 8005b90:	637b      	str	r3, [r7, #52]	; 0x34
 8005b92:	e017      	b.n	8005bc4 <HAL_RCC_GetSysClockFreq+0x10c>
        }
        else
        {
         pllvco = (uint32_t)(((uint64_t)HSI_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8005b94:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005b96:	0018      	movs	r0, r3
 8005b98:	2300      	movs	r3, #0
 8005b9a:	0019      	movs	r1, r3
 8005b9c:	4a16      	ldr	r2, [pc, #88]	; (8005bf8 <HAL_RCC_GetSysClockFreq+0x140>)
 8005b9e:	2300      	movs	r3, #0
 8005ba0:	f7fa fcdc 	bl	800055c <__aeabi_lmul>
 8005ba4:	0002      	movs	r2, r0
 8005ba6:	000b      	movs	r3, r1
 8005ba8:	0010      	movs	r0, r2
 8005baa:	0019      	movs	r1, r3
 8005bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005bae:	001c      	movs	r4, r3
 8005bb0:	2300      	movs	r3, #0
 8005bb2:	001d      	movs	r5, r3
 8005bb4:	0022      	movs	r2, r4
 8005bb6:	002b      	movs	r3, r5
 8005bb8:	f7fa fcb0 	bl	800051c <__aeabi_uldivmod>
 8005bbc:	0002      	movs	r2, r0
 8005bbe:	000b      	movs	r3, r1
 8005bc0:	0013      	movs	r3, r2
 8005bc2:	637b      	str	r3, [r7, #52]	; 0x34
        }
      }
      sysclockfreq = pllvco;
 8005bc4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005bc6:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8005bc8:	e00d      	b.n	8005be6 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8005bca:	4b09      	ldr	r3, [pc, #36]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x138>)
 8005bcc:	685b      	ldr	r3, [r3, #4]
 8005bce:	0b5b      	lsrs	r3, r3, #13
 8005bd0:	2207      	movs	r2, #7
 8005bd2:	4013      	ands	r3, r2
 8005bd4:	623b      	str	r3, [r7, #32]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8005bd6:	6a3b      	ldr	r3, [r7, #32]
 8005bd8:	3301      	adds	r3, #1
 8005bda:	2280      	movs	r2, #128	; 0x80
 8005bdc:	0212      	lsls	r2, r2, #8
 8005bde:	409a      	lsls	r2, r3
 8005be0:	0013      	movs	r3, r2
 8005be2:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8005be4:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8005be6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8005be8:	0018      	movs	r0, r3
 8005bea:	46bd      	mov	sp, r7
 8005bec:	b00e      	add	sp, #56	; 0x38
 8005bee:	bdb0      	pop	{r4, r5, r7, pc}
 8005bf0:	40021000 	.word	0x40021000
 8005bf4:	003d0900 	.word	0x003d0900
 8005bf8:	00f42400 	.word	0x00f42400
 8005bfc:	007a1200 	.word	0x007a1200
 8005c00:	0800a610 	.word	0x0800a610

08005c04 <__cvt>:
 8005c04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c06:	001e      	movs	r6, r3
 8005c08:	2300      	movs	r3, #0
 8005c0a:	0014      	movs	r4, r2
 8005c0c:	b08b      	sub	sp, #44	; 0x2c
 8005c0e:	429e      	cmp	r6, r3
 8005c10:	da04      	bge.n	8005c1c <__cvt+0x18>
 8005c12:	2180      	movs	r1, #128	; 0x80
 8005c14:	0609      	lsls	r1, r1, #24
 8005c16:	1873      	adds	r3, r6, r1
 8005c18:	001e      	movs	r6, r3
 8005c1a:	232d      	movs	r3, #45	; 0x2d
 8005c1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005c1e:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8005c20:	7013      	strb	r3, [r2, #0]
 8005c22:	2320      	movs	r3, #32
 8005c24:	2203      	movs	r2, #3
 8005c26:	439f      	bics	r7, r3
 8005c28:	2f46      	cmp	r7, #70	; 0x46
 8005c2a:	d007      	beq.n	8005c3c <__cvt+0x38>
 8005c2c:	003b      	movs	r3, r7
 8005c2e:	3b45      	subs	r3, #69	; 0x45
 8005c30:	4259      	negs	r1, r3
 8005c32:	414b      	adcs	r3, r1
 8005c34:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005c36:	3a01      	subs	r2, #1
 8005c38:	18cb      	adds	r3, r1, r3
 8005c3a:	9310      	str	r3, [sp, #64]	; 0x40
 8005c3c:	ab09      	add	r3, sp, #36	; 0x24
 8005c3e:	9304      	str	r3, [sp, #16]
 8005c40:	ab08      	add	r3, sp, #32
 8005c42:	9303      	str	r3, [sp, #12]
 8005c44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005c46:	9200      	str	r2, [sp, #0]
 8005c48:	9302      	str	r3, [sp, #8]
 8005c4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c4c:	0022      	movs	r2, r4
 8005c4e:	9301      	str	r3, [sp, #4]
 8005c50:	0033      	movs	r3, r6
 8005c52:	f001 f8b3 	bl	8006dbc <_dtoa_r>
 8005c56:	0005      	movs	r5, r0
 8005c58:	2f47      	cmp	r7, #71	; 0x47
 8005c5a:	d102      	bne.n	8005c62 <__cvt+0x5e>
 8005c5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005c5e:	07db      	lsls	r3, r3, #31
 8005c60:	d528      	bpl.n	8005cb4 <__cvt+0xb0>
 8005c62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c64:	18eb      	adds	r3, r5, r3
 8005c66:	9307      	str	r3, [sp, #28]
 8005c68:	2f46      	cmp	r7, #70	; 0x46
 8005c6a:	d114      	bne.n	8005c96 <__cvt+0x92>
 8005c6c:	782b      	ldrb	r3, [r5, #0]
 8005c6e:	2b30      	cmp	r3, #48	; 0x30
 8005c70:	d10c      	bne.n	8005c8c <__cvt+0x88>
 8005c72:	2200      	movs	r2, #0
 8005c74:	2300      	movs	r3, #0
 8005c76:	0020      	movs	r0, r4
 8005c78:	0031      	movs	r1, r6
 8005c7a:	f7fa fbe7 	bl	800044c <__aeabi_dcmpeq>
 8005c7e:	2800      	cmp	r0, #0
 8005c80:	d104      	bne.n	8005c8c <__cvt+0x88>
 8005c82:	2301      	movs	r3, #1
 8005c84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005c86:	1a9b      	subs	r3, r3, r2
 8005c88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005c8a:	6013      	str	r3, [r2, #0]
 8005c8c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005c8e:	9a07      	ldr	r2, [sp, #28]
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	18d3      	adds	r3, r2, r3
 8005c94:	9307      	str	r3, [sp, #28]
 8005c96:	2200      	movs	r2, #0
 8005c98:	2300      	movs	r3, #0
 8005c9a:	0020      	movs	r0, r4
 8005c9c:	0031      	movs	r1, r6
 8005c9e:	f7fa fbd5 	bl	800044c <__aeabi_dcmpeq>
 8005ca2:	2800      	cmp	r0, #0
 8005ca4:	d001      	beq.n	8005caa <__cvt+0xa6>
 8005ca6:	9b07      	ldr	r3, [sp, #28]
 8005ca8:	9309      	str	r3, [sp, #36]	; 0x24
 8005caa:	2230      	movs	r2, #48	; 0x30
 8005cac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005cae:	9907      	ldr	r1, [sp, #28]
 8005cb0:	428b      	cmp	r3, r1
 8005cb2:	d306      	bcc.n	8005cc2 <__cvt+0xbe>
 8005cb4:	0028      	movs	r0, r5
 8005cb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005cb8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005cba:	1b5b      	subs	r3, r3, r5
 8005cbc:	6013      	str	r3, [r2, #0]
 8005cbe:	b00b      	add	sp, #44	; 0x2c
 8005cc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005cc2:	1c59      	adds	r1, r3, #1
 8005cc4:	9109      	str	r1, [sp, #36]	; 0x24
 8005cc6:	701a      	strb	r2, [r3, #0]
 8005cc8:	e7f0      	b.n	8005cac <__cvt+0xa8>

08005cca <__exponent>:
 8005cca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ccc:	1c83      	adds	r3, r0, #2
 8005cce:	b087      	sub	sp, #28
 8005cd0:	9303      	str	r3, [sp, #12]
 8005cd2:	0005      	movs	r5, r0
 8005cd4:	000c      	movs	r4, r1
 8005cd6:	232b      	movs	r3, #43	; 0x2b
 8005cd8:	7002      	strb	r2, [r0, #0]
 8005cda:	2900      	cmp	r1, #0
 8005cdc:	da01      	bge.n	8005ce2 <__exponent+0x18>
 8005cde:	424c      	negs	r4, r1
 8005ce0:	3302      	adds	r3, #2
 8005ce2:	706b      	strb	r3, [r5, #1]
 8005ce4:	2c09      	cmp	r4, #9
 8005ce6:	dd2f      	ble.n	8005d48 <__exponent+0x7e>
 8005ce8:	270a      	movs	r7, #10
 8005cea:	ab04      	add	r3, sp, #16
 8005cec:	1dde      	adds	r6, r3, #7
 8005cee:	0020      	movs	r0, r4
 8005cf0:	0039      	movs	r1, r7
 8005cf2:	9601      	str	r6, [sp, #4]
 8005cf4:	f7fa fb94 	bl	8000420 <__aeabi_idivmod>
 8005cf8:	3e01      	subs	r6, #1
 8005cfa:	3130      	adds	r1, #48	; 0x30
 8005cfc:	0020      	movs	r0, r4
 8005cfe:	7031      	strb	r1, [r6, #0]
 8005d00:	0039      	movs	r1, r7
 8005d02:	9402      	str	r4, [sp, #8]
 8005d04:	f7fa faa6 	bl	8000254 <__divsi3>
 8005d08:	9b02      	ldr	r3, [sp, #8]
 8005d0a:	0004      	movs	r4, r0
 8005d0c:	2b63      	cmp	r3, #99	; 0x63
 8005d0e:	dcee      	bgt.n	8005cee <__exponent+0x24>
 8005d10:	9b01      	ldr	r3, [sp, #4]
 8005d12:	3430      	adds	r4, #48	; 0x30
 8005d14:	1e9a      	subs	r2, r3, #2
 8005d16:	0013      	movs	r3, r2
 8005d18:	9903      	ldr	r1, [sp, #12]
 8005d1a:	7014      	strb	r4, [r2, #0]
 8005d1c:	a804      	add	r0, sp, #16
 8005d1e:	3007      	adds	r0, #7
 8005d20:	4298      	cmp	r0, r3
 8005d22:	d80c      	bhi.n	8005d3e <__exponent+0x74>
 8005d24:	2300      	movs	r3, #0
 8005d26:	4282      	cmp	r2, r0
 8005d28:	d804      	bhi.n	8005d34 <__exponent+0x6a>
 8005d2a:	aa04      	add	r2, sp, #16
 8005d2c:	3309      	adds	r3, #9
 8005d2e:	189b      	adds	r3, r3, r2
 8005d30:	9a01      	ldr	r2, [sp, #4]
 8005d32:	1a9b      	subs	r3, r3, r2
 8005d34:	9a03      	ldr	r2, [sp, #12]
 8005d36:	18d3      	adds	r3, r2, r3
 8005d38:	1b58      	subs	r0, r3, r5
 8005d3a:	b007      	add	sp, #28
 8005d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d3e:	7818      	ldrb	r0, [r3, #0]
 8005d40:	3301      	adds	r3, #1
 8005d42:	7008      	strb	r0, [r1, #0]
 8005d44:	3101      	adds	r1, #1
 8005d46:	e7e9      	b.n	8005d1c <__exponent+0x52>
 8005d48:	2330      	movs	r3, #48	; 0x30
 8005d4a:	3430      	adds	r4, #48	; 0x30
 8005d4c:	70ab      	strb	r3, [r5, #2]
 8005d4e:	70ec      	strb	r4, [r5, #3]
 8005d50:	1d2b      	adds	r3, r5, #4
 8005d52:	e7f1      	b.n	8005d38 <__exponent+0x6e>

08005d54 <_printf_float>:
 8005d54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d56:	b095      	sub	sp, #84	; 0x54
 8005d58:	000c      	movs	r4, r1
 8005d5a:	9208      	str	r2, [sp, #32]
 8005d5c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8005d5e:	9309      	str	r3, [sp, #36]	; 0x24
 8005d60:	0007      	movs	r7, r0
 8005d62:	f000 ff0d 	bl	8006b80 <_localeconv_r>
 8005d66:	6803      	ldr	r3, [r0, #0]
 8005d68:	0018      	movs	r0, r3
 8005d6a:	930c      	str	r3, [sp, #48]	; 0x30
 8005d6c:	f7fa f9cc 	bl	8000108 <strlen>
 8005d70:	2300      	movs	r3, #0
 8005d72:	9312      	str	r3, [sp, #72]	; 0x48
 8005d74:	7e23      	ldrb	r3, [r4, #24]
 8005d76:	2207      	movs	r2, #7
 8005d78:	930a      	str	r3, [sp, #40]	; 0x28
 8005d7a:	6823      	ldr	r3, [r4, #0]
 8005d7c:	900d      	str	r0, [sp, #52]	; 0x34
 8005d7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d80:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005d82:	682b      	ldr	r3, [r5, #0]
 8005d84:	05c9      	lsls	r1, r1, #23
 8005d86:	d547      	bpl.n	8005e18 <_printf_float+0xc4>
 8005d88:	189b      	adds	r3, r3, r2
 8005d8a:	4393      	bics	r3, r2
 8005d8c:	001a      	movs	r2, r3
 8005d8e:	3208      	adds	r2, #8
 8005d90:	602a      	str	r2, [r5, #0]
 8005d92:	681e      	ldr	r6, [r3, #0]
 8005d94:	685d      	ldr	r5, [r3, #4]
 8005d96:	0032      	movs	r2, r6
 8005d98:	002b      	movs	r3, r5
 8005d9a:	64a2      	str	r2, [r4, #72]	; 0x48
 8005d9c:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005d9e:	2201      	movs	r2, #1
 8005da0:	006b      	lsls	r3, r5, #1
 8005da2:	085b      	lsrs	r3, r3, #1
 8005da4:	930e      	str	r3, [sp, #56]	; 0x38
 8005da6:	0030      	movs	r0, r6
 8005da8:	4bab      	ldr	r3, [pc, #684]	; (8006058 <_printf_float+0x304>)
 8005daa:	990e      	ldr	r1, [sp, #56]	; 0x38
 8005dac:	4252      	negs	r2, r2
 8005dae:	f7fd f987 	bl	80030c0 <__aeabi_dcmpun>
 8005db2:	2800      	cmp	r0, #0
 8005db4:	d132      	bne.n	8005e1c <_printf_float+0xc8>
 8005db6:	2201      	movs	r2, #1
 8005db8:	0030      	movs	r0, r6
 8005dba:	4ba7      	ldr	r3, [pc, #668]	; (8006058 <_printf_float+0x304>)
 8005dbc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8005dbe:	4252      	negs	r2, r2
 8005dc0:	f7fa fb54 	bl	800046c <__aeabi_dcmple>
 8005dc4:	2800      	cmp	r0, #0
 8005dc6:	d129      	bne.n	8005e1c <_printf_float+0xc8>
 8005dc8:	2200      	movs	r2, #0
 8005dca:	2300      	movs	r3, #0
 8005dcc:	0030      	movs	r0, r6
 8005dce:	0029      	movs	r1, r5
 8005dd0:	f7fa fb42 	bl	8000458 <__aeabi_dcmplt>
 8005dd4:	2800      	cmp	r0, #0
 8005dd6:	d003      	beq.n	8005de0 <_printf_float+0x8c>
 8005dd8:	0023      	movs	r3, r4
 8005dda:	222d      	movs	r2, #45	; 0x2d
 8005ddc:	3343      	adds	r3, #67	; 0x43
 8005dde:	701a      	strb	r2, [r3, #0]
 8005de0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005de2:	4d9e      	ldr	r5, [pc, #632]	; (800605c <_printf_float+0x308>)
 8005de4:	2b47      	cmp	r3, #71	; 0x47
 8005de6:	d900      	bls.n	8005dea <_printf_float+0x96>
 8005de8:	4d9d      	ldr	r5, [pc, #628]	; (8006060 <_printf_float+0x30c>)
 8005dea:	2303      	movs	r3, #3
 8005dec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005dee:	6123      	str	r3, [r4, #16]
 8005df0:	3301      	adds	r3, #1
 8005df2:	439a      	bics	r2, r3
 8005df4:	2300      	movs	r3, #0
 8005df6:	6022      	str	r2, [r4, #0]
 8005df8:	930b      	str	r3, [sp, #44]	; 0x2c
 8005dfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005dfc:	0021      	movs	r1, r4
 8005dfe:	9300      	str	r3, [sp, #0]
 8005e00:	0038      	movs	r0, r7
 8005e02:	9b08      	ldr	r3, [sp, #32]
 8005e04:	aa13      	add	r2, sp, #76	; 0x4c
 8005e06:	f000 f9fb 	bl	8006200 <_printf_common>
 8005e0a:	3001      	adds	r0, #1
 8005e0c:	d000      	beq.n	8005e10 <_printf_float+0xbc>
 8005e0e:	e0a3      	b.n	8005f58 <_printf_float+0x204>
 8005e10:	2001      	movs	r0, #1
 8005e12:	4240      	negs	r0, r0
 8005e14:	b015      	add	sp, #84	; 0x54
 8005e16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005e18:	3307      	adds	r3, #7
 8005e1a:	e7b6      	b.n	8005d8a <_printf_float+0x36>
 8005e1c:	0032      	movs	r2, r6
 8005e1e:	002b      	movs	r3, r5
 8005e20:	0030      	movs	r0, r6
 8005e22:	0029      	movs	r1, r5
 8005e24:	f7fd f94c 	bl	80030c0 <__aeabi_dcmpun>
 8005e28:	2800      	cmp	r0, #0
 8005e2a:	d00b      	beq.n	8005e44 <_printf_float+0xf0>
 8005e2c:	2d00      	cmp	r5, #0
 8005e2e:	da03      	bge.n	8005e38 <_printf_float+0xe4>
 8005e30:	0023      	movs	r3, r4
 8005e32:	222d      	movs	r2, #45	; 0x2d
 8005e34:	3343      	adds	r3, #67	; 0x43
 8005e36:	701a      	strb	r2, [r3, #0]
 8005e38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e3a:	4d8a      	ldr	r5, [pc, #552]	; (8006064 <_printf_float+0x310>)
 8005e3c:	2b47      	cmp	r3, #71	; 0x47
 8005e3e:	d9d4      	bls.n	8005dea <_printf_float+0x96>
 8005e40:	4d89      	ldr	r5, [pc, #548]	; (8006068 <_printf_float+0x314>)
 8005e42:	e7d2      	b.n	8005dea <_printf_float+0x96>
 8005e44:	2220      	movs	r2, #32
 8005e46:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005e48:	6863      	ldr	r3, [r4, #4]
 8005e4a:	4391      	bics	r1, r2
 8005e4c:	910e      	str	r1, [sp, #56]	; 0x38
 8005e4e:	1c5a      	adds	r2, r3, #1
 8005e50:	d14a      	bne.n	8005ee8 <_printf_float+0x194>
 8005e52:	3307      	adds	r3, #7
 8005e54:	6063      	str	r3, [r4, #4]
 8005e56:	2380      	movs	r3, #128	; 0x80
 8005e58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005e5a:	00db      	lsls	r3, r3, #3
 8005e5c:	4313      	orrs	r3, r2
 8005e5e:	2200      	movs	r2, #0
 8005e60:	9206      	str	r2, [sp, #24]
 8005e62:	aa12      	add	r2, sp, #72	; 0x48
 8005e64:	9205      	str	r2, [sp, #20]
 8005e66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005e68:	6023      	str	r3, [r4, #0]
 8005e6a:	9204      	str	r2, [sp, #16]
 8005e6c:	aa11      	add	r2, sp, #68	; 0x44
 8005e6e:	9203      	str	r2, [sp, #12]
 8005e70:	2223      	movs	r2, #35	; 0x23
 8005e72:	a908      	add	r1, sp, #32
 8005e74:	9301      	str	r3, [sp, #4]
 8005e76:	6863      	ldr	r3, [r4, #4]
 8005e78:	1852      	adds	r2, r2, r1
 8005e7a:	9202      	str	r2, [sp, #8]
 8005e7c:	9300      	str	r3, [sp, #0]
 8005e7e:	0032      	movs	r2, r6
 8005e80:	002b      	movs	r3, r5
 8005e82:	0038      	movs	r0, r7
 8005e84:	f7ff febe 	bl	8005c04 <__cvt>
 8005e88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005e8a:	0005      	movs	r5, r0
 8005e8c:	2b47      	cmp	r3, #71	; 0x47
 8005e8e:	d109      	bne.n	8005ea4 <_printf_float+0x150>
 8005e90:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005e92:	1cda      	adds	r2, r3, #3
 8005e94:	db02      	blt.n	8005e9c <_printf_float+0x148>
 8005e96:	6862      	ldr	r2, [r4, #4]
 8005e98:	4293      	cmp	r3, r2
 8005e9a:	dd49      	ble.n	8005f30 <_printf_float+0x1dc>
 8005e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e9e:	3b02      	subs	r3, #2
 8005ea0:	b2db      	uxtb	r3, r3
 8005ea2:	930a      	str	r3, [sp, #40]	; 0x28
 8005ea4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ea6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005ea8:	2b65      	cmp	r3, #101	; 0x65
 8005eaa:	d824      	bhi.n	8005ef6 <_printf_float+0x1a2>
 8005eac:	0020      	movs	r0, r4
 8005eae:	001a      	movs	r2, r3
 8005eb0:	3901      	subs	r1, #1
 8005eb2:	3050      	adds	r0, #80	; 0x50
 8005eb4:	9111      	str	r1, [sp, #68]	; 0x44
 8005eb6:	f7ff ff08 	bl	8005cca <__exponent>
 8005eba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005ebc:	900b      	str	r0, [sp, #44]	; 0x2c
 8005ebe:	1813      	adds	r3, r2, r0
 8005ec0:	6123      	str	r3, [r4, #16]
 8005ec2:	2a01      	cmp	r2, #1
 8005ec4:	dc02      	bgt.n	8005ecc <_printf_float+0x178>
 8005ec6:	6822      	ldr	r2, [r4, #0]
 8005ec8:	07d2      	lsls	r2, r2, #31
 8005eca:	d501      	bpl.n	8005ed0 <_printf_float+0x17c>
 8005ecc:	3301      	adds	r3, #1
 8005ece:	6123      	str	r3, [r4, #16]
 8005ed0:	2323      	movs	r3, #35	; 0x23
 8005ed2:	aa08      	add	r2, sp, #32
 8005ed4:	189b      	adds	r3, r3, r2
 8005ed6:	781b      	ldrb	r3, [r3, #0]
 8005ed8:	2b00      	cmp	r3, #0
 8005eda:	d100      	bne.n	8005ede <_printf_float+0x18a>
 8005edc:	e78d      	b.n	8005dfa <_printf_float+0xa6>
 8005ede:	0023      	movs	r3, r4
 8005ee0:	222d      	movs	r2, #45	; 0x2d
 8005ee2:	3343      	adds	r3, #67	; 0x43
 8005ee4:	701a      	strb	r2, [r3, #0]
 8005ee6:	e788      	b.n	8005dfa <_printf_float+0xa6>
 8005ee8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005eea:	2a47      	cmp	r2, #71	; 0x47
 8005eec:	d1b3      	bne.n	8005e56 <_printf_float+0x102>
 8005eee:	2b00      	cmp	r3, #0
 8005ef0:	d1b1      	bne.n	8005e56 <_printf_float+0x102>
 8005ef2:	3301      	adds	r3, #1
 8005ef4:	e7ae      	b.n	8005e54 <_printf_float+0x100>
 8005ef6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ef8:	2b66      	cmp	r3, #102	; 0x66
 8005efa:	d11b      	bne.n	8005f34 <_printf_float+0x1e0>
 8005efc:	6863      	ldr	r3, [r4, #4]
 8005efe:	2900      	cmp	r1, #0
 8005f00:	dd09      	ble.n	8005f16 <_printf_float+0x1c2>
 8005f02:	6121      	str	r1, [r4, #16]
 8005f04:	2b00      	cmp	r3, #0
 8005f06:	d102      	bne.n	8005f0e <_printf_float+0x1ba>
 8005f08:	6822      	ldr	r2, [r4, #0]
 8005f0a:	07d2      	lsls	r2, r2, #31
 8005f0c:	d50b      	bpl.n	8005f26 <_printf_float+0x1d2>
 8005f0e:	3301      	adds	r3, #1
 8005f10:	185b      	adds	r3, r3, r1
 8005f12:	6123      	str	r3, [r4, #16]
 8005f14:	e007      	b.n	8005f26 <_printf_float+0x1d2>
 8005f16:	2b00      	cmp	r3, #0
 8005f18:	d103      	bne.n	8005f22 <_printf_float+0x1ce>
 8005f1a:	2201      	movs	r2, #1
 8005f1c:	6821      	ldr	r1, [r4, #0]
 8005f1e:	4211      	tst	r1, r2
 8005f20:	d000      	beq.n	8005f24 <_printf_float+0x1d0>
 8005f22:	1c9a      	adds	r2, r3, #2
 8005f24:	6122      	str	r2, [r4, #16]
 8005f26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005f28:	65a3      	str	r3, [r4, #88]	; 0x58
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	930b      	str	r3, [sp, #44]	; 0x2c
 8005f2e:	e7cf      	b.n	8005ed0 <_printf_float+0x17c>
 8005f30:	2367      	movs	r3, #103	; 0x67
 8005f32:	930a      	str	r3, [sp, #40]	; 0x28
 8005f34:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005f36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f38:	4299      	cmp	r1, r3
 8005f3a:	db06      	blt.n	8005f4a <_printf_float+0x1f6>
 8005f3c:	6823      	ldr	r3, [r4, #0]
 8005f3e:	6121      	str	r1, [r4, #16]
 8005f40:	07db      	lsls	r3, r3, #31
 8005f42:	d5f0      	bpl.n	8005f26 <_printf_float+0x1d2>
 8005f44:	3101      	adds	r1, #1
 8005f46:	6121      	str	r1, [r4, #16]
 8005f48:	e7ed      	b.n	8005f26 <_printf_float+0x1d2>
 8005f4a:	2201      	movs	r2, #1
 8005f4c:	2900      	cmp	r1, #0
 8005f4e:	dc01      	bgt.n	8005f54 <_printf_float+0x200>
 8005f50:	1892      	adds	r2, r2, r2
 8005f52:	1a52      	subs	r2, r2, r1
 8005f54:	189b      	adds	r3, r3, r2
 8005f56:	e7dc      	b.n	8005f12 <_printf_float+0x1be>
 8005f58:	6822      	ldr	r2, [r4, #0]
 8005f5a:	0553      	lsls	r3, r2, #21
 8005f5c:	d408      	bmi.n	8005f70 <_printf_float+0x21c>
 8005f5e:	6923      	ldr	r3, [r4, #16]
 8005f60:	002a      	movs	r2, r5
 8005f62:	0038      	movs	r0, r7
 8005f64:	9908      	ldr	r1, [sp, #32]
 8005f66:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005f68:	47a8      	blx	r5
 8005f6a:	3001      	adds	r0, #1
 8005f6c:	d12a      	bne.n	8005fc4 <_printf_float+0x270>
 8005f6e:	e74f      	b.n	8005e10 <_printf_float+0xbc>
 8005f70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005f72:	2b65      	cmp	r3, #101	; 0x65
 8005f74:	d800      	bhi.n	8005f78 <_printf_float+0x224>
 8005f76:	e0ec      	b.n	8006152 <_printf_float+0x3fe>
 8005f78:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005f7a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005f7c:	2200      	movs	r2, #0
 8005f7e:	2300      	movs	r3, #0
 8005f80:	f7fa fa64 	bl	800044c <__aeabi_dcmpeq>
 8005f84:	2800      	cmp	r0, #0
 8005f86:	d034      	beq.n	8005ff2 <_printf_float+0x29e>
 8005f88:	2301      	movs	r3, #1
 8005f8a:	0038      	movs	r0, r7
 8005f8c:	4a37      	ldr	r2, [pc, #220]	; (800606c <_printf_float+0x318>)
 8005f8e:	9908      	ldr	r1, [sp, #32]
 8005f90:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005f92:	47a8      	blx	r5
 8005f94:	3001      	adds	r0, #1
 8005f96:	d100      	bne.n	8005f9a <_printf_float+0x246>
 8005f98:	e73a      	b.n	8005e10 <_printf_float+0xbc>
 8005f9a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005f9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f9e:	429a      	cmp	r2, r3
 8005fa0:	db02      	blt.n	8005fa8 <_printf_float+0x254>
 8005fa2:	6823      	ldr	r3, [r4, #0]
 8005fa4:	07db      	lsls	r3, r3, #31
 8005fa6:	d50d      	bpl.n	8005fc4 <_printf_float+0x270>
 8005fa8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005faa:	0038      	movs	r0, r7
 8005fac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005fae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005fb0:	9908      	ldr	r1, [sp, #32]
 8005fb2:	47a8      	blx	r5
 8005fb4:	2500      	movs	r5, #0
 8005fb6:	3001      	adds	r0, #1
 8005fb8:	d100      	bne.n	8005fbc <_printf_float+0x268>
 8005fba:	e729      	b.n	8005e10 <_printf_float+0xbc>
 8005fbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005fbe:	3b01      	subs	r3, #1
 8005fc0:	42ab      	cmp	r3, r5
 8005fc2:	dc0a      	bgt.n	8005fda <_printf_float+0x286>
 8005fc4:	6823      	ldr	r3, [r4, #0]
 8005fc6:	079b      	lsls	r3, r3, #30
 8005fc8:	d500      	bpl.n	8005fcc <_printf_float+0x278>
 8005fca:	e116      	b.n	80061fa <_printf_float+0x4a6>
 8005fcc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005fce:	68e0      	ldr	r0, [r4, #12]
 8005fd0:	4298      	cmp	r0, r3
 8005fd2:	db00      	blt.n	8005fd6 <_printf_float+0x282>
 8005fd4:	e71e      	b.n	8005e14 <_printf_float+0xc0>
 8005fd6:	0018      	movs	r0, r3
 8005fd8:	e71c      	b.n	8005e14 <_printf_float+0xc0>
 8005fda:	0022      	movs	r2, r4
 8005fdc:	2301      	movs	r3, #1
 8005fde:	0038      	movs	r0, r7
 8005fe0:	9908      	ldr	r1, [sp, #32]
 8005fe2:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005fe4:	321a      	adds	r2, #26
 8005fe6:	47b0      	blx	r6
 8005fe8:	3001      	adds	r0, #1
 8005fea:	d100      	bne.n	8005fee <_printf_float+0x29a>
 8005fec:	e710      	b.n	8005e10 <_printf_float+0xbc>
 8005fee:	3501      	adds	r5, #1
 8005ff0:	e7e4      	b.n	8005fbc <_printf_float+0x268>
 8005ff2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005ff4:	2b00      	cmp	r3, #0
 8005ff6:	dc3b      	bgt.n	8006070 <_printf_float+0x31c>
 8005ff8:	2301      	movs	r3, #1
 8005ffa:	0038      	movs	r0, r7
 8005ffc:	4a1b      	ldr	r2, [pc, #108]	; (800606c <_printf_float+0x318>)
 8005ffe:	9908      	ldr	r1, [sp, #32]
 8006000:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006002:	47b0      	blx	r6
 8006004:	3001      	adds	r0, #1
 8006006:	d100      	bne.n	800600a <_printf_float+0x2b6>
 8006008:	e702      	b.n	8005e10 <_printf_float+0xbc>
 800600a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800600c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800600e:	4313      	orrs	r3, r2
 8006010:	d102      	bne.n	8006018 <_printf_float+0x2c4>
 8006012:	6823      	ldr	r3, [r4, #0]
 8006014:	07db      	lsls	r3, r3, #31
 8006016:	d5d5      	bpl.n	8005fc4 <_printf_float+0x270>
 8006018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800601a:	0038      	movs	r0, r7
 800601c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800601e:	9908      	ldr	r1, [sp, #32]
 8006020:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006022:	47b0      	blx	r6
 8006024:	2300      	movs	r3, #0
 8006026:	3001      	adds	r0, #1
 8006028:	d100      	bne.n	800602c <_printf_float+0x2d8>
 800602a:	e6f1      	b.n	8005e10 <_printf_float+0xbc>
 800602c:	930a      	str	r3, [sp, #40]	; 0x28
 800602e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006030:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006032:	425b      	negs	r3, r3
 8006034:	4293      	cmp	r3, r2
 8006036:	dc01      	bgt.n	800603c <_printf_float+0x2e8>
 8006038:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800603a:	e791      	b.n	8005f60 <_printf_float+0x20c>
 800603c:	0022      	movs	r2, r4
 800603e:	2301      	movs	r3, #1
 8006040:	0038      	movs	r0, r7
 8006042:	9908      	ldr	r1, [sp, #32]
 8006044:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006046:	321a      	adds	r2, #26
 8006048:	47b0      	blx	r6
 800604a:	3001      	adds	r0, #1
 800604c:	d100      	bne.n	8006050 <_printf_float+0x2fc>
 800604e:	e6df      	b.n	8005e10 <_printf_float+0xbc>
 8006050:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006052:	3301      	adds	r3, #1
 8006054:	e7ea      	b.n	800602c <_printf_float+0x2d8>
 8006056:	46c0      	nop			; (mov r8, r8)
 8006058:	7fefffff 	.word	0x7fefffff
 800605c:	0800a619 	.word	0x0800a619
 8006060:	0800a61d 	.word	0x0800a61d
 8006064:	0800a621 	.word	0x0800a621
 8006068:	0800a625 	.word	0x0800a625
 800606c:	0800a629 	.word	0x0800a629
 8006070:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006072:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006074:	920a      	str	r2, [sp, #40]	; 0x28
 8006076:	429a      	cmp	r2, r3
 8006078:	dd00      	ble.n	800607c <_printf_float+0x328>
 800607a:	930a      	str	r3, [sp, #40]	; 0x28
 800607c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800607e:	2b00      	cmp	r3, #0
 8006080:	dc3d      	bgt.n	80060fe <_printf_float+0x3aa>
 8006082:	2300      	movs	r3, #0
 8006084:	930e      	str	r3, [sp, #56]	; 0x38
 8006086:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006088:	43db      	mvns	r3, r3
 800608a:	17db      	asrs	r3, r3, #31
 800608c:	930f      	str	r3, [sp, #60]	; 0x3c
 800608e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006090:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006092:	930b      	str	r3, [sp, #44]	; 0x2c
 8006094:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006096:	4013      	ands	r3, r2
 8006098:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800609a:	1ad3      	subs	r3, r2, r3
 800609c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800609e:	4293      	cmp	r3, r2
 80060a0:	dc36      	bgt.n	8006110 <_printf_float+0x3bc>
 80060a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80060a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80060a6:	429a      	cmp	r2, r3
 80060a8:	db40      	blt.n	800612c <_printf_float+0x3d8>
 80060aa:	6823      	ldr	r3, [r4, #0]
 80060ac:	07db      	lsls	r3, r3, #31
 80060ae:	d43d      	bmi.n	800612c <_printf_float+0x3d8>
 80060b0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80060b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80060b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060b6:	1af3      	subs	r3, r6, r3
 80060b8:	1ab6      	subs	r6, r6, r2
 80060ba:	429e      	cmp	r6, r3
 80060bc:	dd00      	ble.n	80060c0 <_printf_float+0x36c>
 80060be:	001e      	movs	r6, r3
 80060c0:	2e00      	cmp	r6, #0
 80060c2:	dc3c      	bgt.n	800613e <_printf_float+0x3ea>
 80060c4:	2300      	movs	r3, #0
 80060c6:	930a      	str	r3, [sp, #40]	; 0x28
 80060c8:	43f3      	mvns	r3, r6
 80060ca:	17db      	asrs	r3, r3, #31
 80060cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80060ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80060d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80060d2:	1a9b      	subs	r3, r3, r2
 80060d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80060d6:	4032      	ands	r2, r6
 80060d8:	1a9b      	subs	r3, r3, r2
 80060da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80060dc:	4293      	cmp	r3, r2
 80060de:	dc00      	bgt.n	80060e2 <_printf_float+0x38e>
 80060e0:	e770      	b.n	8005fc4 <_printf_float+0x270>
 80060e2:	0022      	movs	r2, r4
 80060e4:	2301      	movs	r3, #1
 80060e6:	0038      	movs	r0, r7
 80060e8:	9908      	ldr	r1, [sp, #32]
 80060ea:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80060ec:	321a      	adds	r2, #26
 80060ee:	47a8      	blx	r5
 80060f0:	3001      	adds	r0, #1
 80060f2:	d100      	bne.n	80060f6 <_printf_float+0x3a2>
 80060f4:	e68c      	b.n	8005e10 <_printf_float+0xbc>
 80060f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80060f8:	3301      	adds	r3, #1
 80060fa:	930a      	str	r3, [sp, #40]	; 0x28
 80060fc:	e7e7      	b.n	80060ce <_printf_float+0x37a>
 80060fe:	002a      	movs	r2, r5
 8006100:	0038      	movs	r0, r7
 8006102:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006104:	9908      	ldr	r1, [sp, #32]
 8006106:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006108:	47b0      	blx	r6
 800610a:	3001      	adds	r0, #1
 800610c:	d1b9      	bne.n	8006082 <_printf_float+0x32e>
 800610e:	e67f      	b.n	8005e10 <_printf_float+0xbc>
 8006110:	0022      	movs	r2, r4
 8006112:	2301      	movs	r3, #1
 8006114:	0038      	movs	r0, r7
 8006116:	9908      	ldr	r1, [sp, #32]
 8006118:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800611a:	321a      	adds	r2, #26
 800611c:	47b0      	blx	r6
 800611e:	3001      	adds	r0, #1
 8006120:	d100      	bne.n	8006124 <_printf_float+0x3d0>
 8006122:	e675      	b.n	8005e10 <_printf_float+0xbc>
 8006124:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006126:	3301      	adds	r3, #1
 8006128:	930e      	str	r3, [sp, #56]	; 0x38
 800612a:	e7b0      	b.n	800608e <_printf_float+0x33a>
 800612c:	0038      	movs	r0, r7
 800612e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006130:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006132:	9908      	ldr	r1, [sp, #32]
 8006134:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006136:	47b0      	blx	r6
 8006138:	3001      	adds	r0, #1
 800613a:	d1b9      	bne.n	80060b0 <_printf_float+0x35c>
 800613c:	e668      	b.n	8005e10 <_printf_float+0xbc>
 800613e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006140:	0038      	movs	r0, r7
 8006142:	18ea      	adds	r2, r5, r3
 8006144:	9908      	ldr	r1, [sp, #32]
 8006146:	0033      	movs	r3, r6
 8006148:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800614a:	47a8      	blx	r5
 800614c:	3001      	adds	r0, #1
 800614e:	d1b9      	bne.n	80060c4 <_printf_float+0x370>
 8006150:	e65e      	b.n	8005e10 <_printf_float+0xbc>
 8006152:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006154:	2b01      	cmp	r3, #1
 8006156:	dc02      	bgt.n	800615e <_printf_float+0x40a>
 8006158:	2301      	movs	r3, #1
 800615a:	421a      	tst	r2, r3
 800615c:	d03a      	beq.n	80061d4 <_printf_float+0x480>
 800615e:	2301      	movs	r3, #1
 8006160:	002a      	movs	r2, r5
 8006162:	0038      	movs	r0, r7
 8006164:	9908      	ldr	r1, [sp, #32]
 8006166:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006168:	47b0      	blx	r6
 800616a:	3001      	adds	r0, #1
 800616c:	d100      	bne.n	8006170 <_printf_float+0x41c>
 800616e:	e64f      	b.n	8005e10 <_printf_float+0xbc>
 8006170:	0038      	movs	r0, r7
 8006172:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006174:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006176:	9908      	ldr	r1, [sp, #32]
 8006178:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800617a:	47b0      	blx	r6
 800617c:	3001      	adds	r0, #1
 800617e:	d100      	bne.n	8006182 <_printf_float+0x42e>
 8006180:	e646      	b.n	8005e10 <_printf_float+0xbc>
 8006182:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8006184:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8006186:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006188:	2200      	movs	r2, #0
 800618a:	001e      	movs	r6, r3
 800618c:	2300      	movs	r3, #0
 800618e:	f7fa f95d 	bl	800044c <__aeabi_dcmpeq>
 8006192:	2800      	cmp	r0, #0
 8006194:	d11c      	bne.n	80061d0 <_printf_float+0x47c>
 8006196:	0033      	movs	r3, r6
 8006198:	1c6a      	adds	r2, r5, #1
 800619a:	3b01      	subs	r3, #1
 800619c:	0038      	movs	r0, r7
 800619e:	9908      	ldr	r1, [sp, #32]
 80061a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80061a2:	47a8      	blx	r5
 80061a4:	3001      	adds	r0, #1
 80061a6:	d10f      	bne.n	80061c8 <_printf_float+0x474>
 80061a8:	e632      	b.n	8005e10 <_printf_float+0xbc>
 80061aa:	0022      	movs	r2, r4
 80061ac:	2301      	movs	r3, #1
 80061ae:	0038      	movs	r0, r7
 80061b0:	9908      	ldr	r1, [sp, #32]
 80061b2:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80061b4:	321a      	adds	r2, #26
 80061b6:	47b0      	blx	r6
 80061b8:	3001      	adds	r0, #1
 80061ba:	d100      	bne.n	80061be <_printf_float+0x46a>
 80061bc:	e628      	b.n	8005e10 <_printf_float+0xbc>
 80061be:	3501      	adds	r5, #1
 80061c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80061c2:	3b01      	subs	r3, #1
 80061c4:	42ab      	cmp	r3, r5
 80061c6:	dcf0      	bgt.n	80061aa <_printf_float+0x456>
 80061c8:	0022      	movs	r2, r4
 80061ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80061cc:	3250      	adds	r2, #80	; 0x50
 80061ce:	e6c8      	b.n	8005f62 <_printf_float+0x20e>
 80061d0:	2500      	movs	r5, #0
 80061d2:	e7f5      	b.n	80061c0 <_printf_float+0x46c>
 80061d4:	002a      	movs	r2, r5
 80061d6:	e7e1      	b.n	800619c <_printf_float+0x448>
 80061d8:	0022      	movs	r2, r4
 80061da:	2301      	movs	r3, #1
 80061dc:	0038      	movs	r0, r7
 80061de:	9908      	ldr	r1, [sp, #32]
 80061e0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80061e2:	3219      	adds	r2, #25
 80061e4:	47b0      	blx	r6
 80061e6:	3001      	adds	r0, #1
 80061e8:	d100      	bne.n	80061ec <_printf_float+0x498>
 80061ea:	e611      	b.n	8005e10 <_printf_float+0xbc>
 80061ec:	3501      	adds	r5, #1
 80061ee:	68e3      	ldr	r3, [r4, #12]
 80061f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80061f2:	1a9b      	subs	r3, r3, r2
 80061f4:	42ab      	cmp	r3, r5
 80061f6:	dcef      	bgt.n	80061d8 <_printf_float+0x484>
 80061f8:	e6e8      	b.n	8005fcc <_printf_float+0x278>
 80061fa:	2500      	movs	r5, #0
 80061fc:	e7f7      	b.n	80061ee <_printf_float+0x49a>
 80061fe:	46c0      	nop			; (mov r8, r8)

08006200 <_printf_common>:
 8006200:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006202:	0016      	movs	r6, r2
 8006204:	9301      	str	r3, [sp, #4]
 8006206:	688a      	ldr	r2, [r1, #8]
 8006208:	690b      	ldr	r3, [r1, #16]
 800620a:	000c      	movs	r4, r1
 800620c:	9000      	str	r0, [sp, #0]
 800620e:	4293      	cmp	r3, r2
 8006210:	da00      	bge.n	8006214 <_printf_common+0x14>
 8006212:	0013      	movs	r3, r2
 8006214:	0022      	movs	r2, r4
 8006216:	6033      	str	r3, [r6, #0]
 8006218:	3243      	adds	r2, #67	; 0x43
 800621a:	7812      	ldrb	r2, [r2, #0]
 800621c:	2a00      	cmp	r2, #0
 800621e:	d001      	beq.n	8006224 <_printf_common+0x24>
 8006220:	3301      	adds	r3, #1
 8006222:	6033      	str	r3, [r6, #0]
 8006224:	6823      	ldr	r3, [r4, #0]
 8006226:	069b      	lsls	r3, r3, #26
 8006228:	d502      	bpl.n	8006230 <_printf_common+0x30>
 800622a:	6833      	ldr	r3, [r6, #0]
 800622c:	3302      	adds	r3, #2
 800622e:	6033      	str	r3, [r6, #0]
 8006230:	6822      	ldr	r2, [r4, #0]
 8006232:	2306      	movs	r3, #6
 8006234:	0015      	movs	r5, r2
 8006236:	401d      	ands	r5, r3
 8006238:	421a      	tst	r2, r3
 800623a:	d027      	beq.n	800628c <_printf_common+0x8c>
 800623c:	0023      	movs	r3, r4
 800623e:	3343      	adds	r3, #67	; 0x43
 8006240:	781b      	ldrb	r3, [r3, #0]
 8006242:	1e5a      	subs	r2, r3, #1
 8006244:	4193      	sbcs	r3, r2
 8006246:	6822      	ldr	r2, [r4, #0]
 8006248:	0692      	lsls	r2, r2, #26
 800624a:	d430      	bmi.n	80062ae <_printf_common+0xae>
 800624c:	0022      	movs	r2, r4
 800624e:	9901      	ldr	r1, [sp, #4]
 8006250:	9800      	ldr	r0, [sp, #0]
 8006252:	9d08      	ldr	r5, [sp, #32]
 8006254:	3243      	adds	r2, #67	; 0x43
 8006256:	47a8      	blx	r5
 8006258:	3001      	adds	r0, #1
 800625a:	d025      	beq.n	80062a8 <_printf_common+0xa8>
 800625c:	2206      	movs	r2, #6
 800625e:	6823      	ldr	r3, [r4, #0]
 8006260:	2500      	movs	r5, #0
 8006262:	4013      	ands	r3, r2
 8006264:	2b04      	cmp	r3, #4
 8006266:	d105      	bne.n	8006274 <_printf_common+0x74>
 8006268:	6833      	ldr	r3, [r6, #0]
 800626a:	68e5      	ldr	r5, [r4, #12]
 800626c:	1aed      	subs	r5, r5, r3
 800626e:	43eb      	mvns	r3, r5
 8006270:	17db      	asrs	r3, r3, #31
 8006272:	401d      	ands	r5, r3
 8006274:	68a3      	ldr	r3, [r4, #8]
 8006276:	6922      	ldr	r2, [r4, #16]
 8006278:	4293      	cmp	r3, r2
 800627a:	dd01      	ble.n	8006280 <_printf_common+0x80>
 800627c:	1a9b      	subs	r3, r3, r2
 800627e:	18ed      	adds	r5, r5, r3
 8006280:	2600      	movs	r6, #0
 8006282:	42b5      	cmp	r5, r6
 8006284:	d120      	bne.n	80062c8 <_printf_common+0xc8>
 8006286:	2000      	movs	r0, #0
 8006288:	e010      	b.n	80062ac <_printf_common+0xac>
 800628a:	3501      	adds	r5, #1
 800628c:	68e3      	ldr	r3, [r4, #12]
 800628e:	6832      	ldr	r2, [r6, #0]
 8006290:	1a9b      	subs	r3, r3, r2
 8006292:	42ab      	cmp	r3, r5
 8006294:	ddd2      	ble.n	800623c <_printf_common+0x3c>
 8006296:	0022      	movs	r2, r4
 8006298:	2301      	movs	r3, #1
 800629a:	9901      	ldr	r1, [sp, #4]
 800629c:	9800      	ldr	r0, [sp, #0]
 800629e:	9f08      	ldr	r7, [sp, #32]
 80062a0:	3219      	adds	r2, #25
 80062a2:	47b8      	blx	r7
 80062a4:	3001      	adds	r0, #1
 80062a6:	d1f0      	bne.n	800628a <_printf_common+0x8a>
 80062a8:	2001      	movs	r0, #1
 80062aa:	4240      	negs	r0, r0
 80062ac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80062ae:	2030      	movs	r0, #48	; 0x30
 80062b0:	18e1      	adds	r1, r4, r3
 80062b2:	3143      	adds	r1, #67	; 0x43
 80062b4:	7008      	strb	r0, [r1, #0]
 80062b6:	0021      	movs	r1, r4
 80062b8:	1c5a      	adds	r2, r3, #1
 80062ba:	3145      	adds	r1, #69	; 0x45
 80062bc:	7809      	ldrb	r1, [r1, #0]
 80062be:	18a2      	adds	r2, r4, r2
 80062c0:	3243      	adds	r2, #67	; 0x43
 80062c2:	3302      	adds	r3, #2
 80062c4:	7011      	strb	r1, [r2, #0]
 80062c6:	e7c1      	b.n	800624c <_printf_common+0x4c>
 80062c8:	0022      	movs	r2, r4
 80062ca:	2301      	movs	r3, #1
 80062cc:	9901      	ldr	r1, [sp, #4]
 80062ce:	9800      	ldr	r0, [sp, #0]
 80062d0:	9f08      	ldr	r7, [sp, #32]
 80062d2:	321a      	adds	r2, #26
 80062d4:	47b8      	blx	r7
 80062d6:	3001      	adds	r0, #1
 80062d8:	d0e6      	beq.n	80062a8 <_printf_common+0xa8>
 80062da:	3601      	adds	r6, #1
 80062dc:	e7d1      	b.n	8006282 <_printf_common+0x82>
	...

080062e0 <_printf_i>:
 80062e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062e2:	b08b      	sub	sp, #44	; 0x2c
 80062e4:	9206      	str	r2, [sp, #24]
 80062e6:	000a      	movs	r2, r1
 80062e8:	3243      	adds	r2, #67	; 0x43
 80062ea:	9307      	str	r3, [sp, #28]
 80062ec:	9005      	str	r0, [sp, #20]
 80062ee:	9204      	str	r2, [sp, #16]
 80062f0:	7e0a      	ldrb	r2, [r1, #24]
 80062f2:	000c      	movs	r4, r1
 80062f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80062f6:	2a78      	cmp	r2, #120	; 0x78
 80062f8:	d809      	bhi.n	800630e <_printf_i+0x2e>
 80062fa:	2a62      	cmp	r2, #98	; 0x62
 80062fc:	d80b      	bhi.n	8006316 <_printf_i+0x36>
 80062fe:	2a00      	cmp	r2, #0
 8006300:	d100      	bne.n	8006304 <_printf_i+0x24>
 8006302:	e0be      	b.n	8006482 <_printf_i+0x1a2>
 8006304:	497c      	ldr	r1, [pc, #496]	; (80064f8 <_printf_i+0x218>)
 8006306:	9103      	str	r1, [sp, #12]
 8006308:	2a58      	cmp	r2, #88	; 0x58
 800630a:	d100      	bne.n	800630e <_printf_i+0x2e>
 800630c:	e093      	b.n	8006436 <_printf_i+0x156>
 800630e:	0026      	movs	r6, r4
 8006310:	3642      	adds	r6, #66	; 0x42
 8006312:	7032      	strb	r2, [r6, #0]
 8006314:	e022      	b.n	800635c <_printf_i+0x7c>
 8006316:	0010      	movs	r0, r2
 8006318:	3863      	subs	r0, #99	; 0x63
 800631a:	2815      	cmp	r0, #21
 800631c:	d8f7      	bhi.n	800630e <_printf_i+0x2e>
 800631e:	f7f9 ff05 	bl	800012c <__gnu_thumb1_case_shi>
 8006322:	0016      	.short	0x0016
 8006324:	fff6001f 	.word	0xfff6001f
 8006328:	fff6fff6 	.word	0xfff6fff6
 800632c:	001ffff6 	.word	0x001ffff6
 8006330:	fff6fff6 	.word	0xfff6fff6
 8006334:	fff6fff6 	.word	0xfff6fff6
 8006338:	003600a3 	.word	0x003600a3
 800633c:	fff60083 	.word	0xfff60083
 8006340:	00b4fff6 	.word	0x00b4fff6
 8006344:	0036fff6 	.word	0x0036fff6
 8006348:	fff6fff6 	.word	0xfff6fff6
 800634c:	0087      	.short	0x0087
 800634e:	0026      	movs	r6, r4
 8006350:	681a      	ldr	r2, [r3, #0]
 8006352:	3642      	adds	r6, #66	; 0x42
 8006354:	1d11      	adds	r1, r2, #4
 8006356:	6019      	str	r1, [r3, #0]
 8006358:	6813      	ldr	r3, [r2, #0]
 800635a:	7033      	strb	r3, [r6, #0]
 800635c:	2301      	movs	r3, #1
 800635e:	e0a2      	b.n	80064a6 <_printf_i+0x1c6>
 8006360:	6818      	ldr	r0, [r3, #0]
 8006362:	6809      	ldr	r1, [r1, #0]
 8006364:	1d02      	adds	r2, r0, #4
 8006366:	060d      	lsls	r5, r1, #24
 8006368:	d50b      	bpl.n	8006382 <_printf_i+0xa2>
 800636a:	6805      	ldr	r5, [r0, #0]
 800636c:	601a      	str	r2, [r3, #0]
 800636e:	2d00      	cmp	r5, #0
 8006370:	da03      	bge.n	800637a <_printf_i+0x9a>
 8006372:	232d      	movs	r3, #45	; 0x2d
 8006374:	9a04      	ldr	r2, [sp, #16]
 8006376:	426d      	negs	r5, r5
 8006378:	7013      	strb	r3, [r2, #0]
 800637a:	4b5f      	ldr	r3, [pc, #380]	; (80064f8 <_printf_i+0x218>)
 800637c:	270a      	movs	r7, #10
 800637e:	9303      	str	r3, [sp, #12]
 8006380:	e01b      	b.n	80063ba <_printf_i+0xda>
 8006382:	6805      	ldr	r5, [r0, #0]
 8006384:	601a      	str	r2, [r3, #0]
 8006386:	0649      	lsls	r1, r1, #25
 8006388:	d5f1      	bpl.n	800636e <_printf_i+0x8e>
 800638a:	b22d      	sxth	r5, r5
 800638c:	e7ef      	b.n	800636e <_printf_i+0x8e>
 800638e:	680d      	ldr	r5, [r1, #0]
 8006390:	6819      	ldr	r1, [r3, #0]
 8006392:	1d08      	adds	r0, r1, #4
 8006394:	6018      	str	r0, [r3, #0]
 8006396:	062e      	lsls	r6, r5, #24
 8006398:	d501      	bpl.n	800639e <_printf_i+0xbe>
 800639a:	680d      	ldr	r5, [r1, #0]
 800639c:	e003      	b.n	80063a6 <_printf_i+0xc6>
 800639e:	066d      	lsls	r5, r5, #25
 80063a0:	d5fb      	bpl.n	800639a <_printf_i+0xba>
 80063a2:	680d      	ldr	r5, [r1, #0]
 80063a4:	b2ad      	uxth	r5, r5
 80063a6:	4b54      	ldr	r3, [pc, #336]	; (80064f8 <_printf_i+0x218>)
 80063a8:	2708      	movs	r7, #8
 80063aa:	9303      	str	r3, [sp, #12]
 80063ac:	2a6f      	cmp	r2, #111	; 0x6f
 80063ae:	d000      	beq.n	80063b2 <_printf_i+0xd2>
 80063b0:	3702      	adds	r7, #2
 80063b2:	0023      	movs	r3, r4
 80063b4:	2200      	movs	r2, #0
 80063b6:	3343      	adds	r3, #67	; 0x43
 80063b8:	701a      	strb	r2, [r3, #0]
 80063ba:	6863      	ldr	r3, [r4, #4]
 80063bc:	60a3      	str	r3, [r4, #8]
 80063be:	2b00      	cmp	r3, #0
 80063c0:	db03      	blt.n	80063ca <_printf_i+0xea>
 80063c2:	2104      	movs	r1, #4
 80063c4:	6822      	ldr	r2, [r4, #0]
 80063c6:	438a      	bics	r2, r1
 80063c8:	6022      	str	r2, [r4, #0]
 80063ca:	2d00      	cmp	r5, #0
 80063cc:	d102      	bne.n	80063d4 <_printf_i+0xf4>
 80063ce:	9e04      	ldr	r6, [sp, #16]
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d00c      	beq.n	80063ee <_printf_i+0x10e>
 80063d4:	9e04      	ldr	r6, [sp, #16]
 80063d6:	0028      	movs	r0, r5
 80063d8:	0039      	movs	r1, r7
 80063da:	f7f9 ff37 	bl	800024c <__aeabi_uidivmod>
 80063de:	9b03      	ldr	r3, [sp, #12]
 80063e0:	3e01      	subs	r6, #1
 80063e2:	5c5b      	ldrb	r3, [r3, r1]
 80063e4:	7033      	strb	r3, [r6, #0]
 80063e6:	002b      	movs	r3, r5
 80063e8:	0005      	movs	r5, r0
 80063ea:	429f      	cmp	r7, r3
 80063ec:	d9f3      	bls.n	80063d6 <_printf_i+0xf6>
 80063ee:	2f08      	cmp	r7, #8
 80063f0:	d109      	bne.n	8006406 <_printf_i+0x126>
 80063f2:	6823      	ldr	r3, [r4, #0]
 80063f4:	07db      	lsls	r3, r3, #31
 80063f6:	d506      	bpl.n	8006406 <_printf_i+0x126>
 80063f8:	6862      	ldr	r2, [r4, #4]
 80063fa:	6923      	ldr	r3, [r4, #16]
 80063fc:	429a      	cmp	r2, r3
 80063fe:	dc02      	bgt.n	8006406 <_printf_i+0x126>
 8006400:	2330      	movs	r3, #48	; 0x30
 8006402:	3e01      	subs	r6, #1
 8006404:	7033      	strb	r3, [r6, #0]
 8006406:	9b04      	ldr	r3, [sp, #16]
 8006408:	1b9b      	subs	r3, r3, r6
 800640a:	6123      	str	r3, [r4, #16]
 800640c:	9b07      	ldr	r3, [sp, #28]
 800640e:	0021      	movs	r1, r4
 8006410:	9300      	str	r3, [sp, #0]
 8006412:	9805      	ldr	r0, [sp, #20]
 8006414:	9b06      	ldr	r3, [sp, #24]
 8006416:	aa09      	add	r2, sp, #36	; 0x24
 8006418:	f7ff fef2 	bl	8006200 <_printf_common>
 800641c:	3001      	adds	r0, #1
 800641e:	d147      	bne.n	80064b0 <_printf_i+0x1d0>
 8006420:	2001      	movs	r0, #1
 8006422:	4240      	negs	r0, r0
 8006424:	b00b      	add	sp, #44	; 0x2c
 8006426:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006428:	2220      	movs	r2, #32
 800642a:	6809      	ldr	r1, [r1, #0]
 800642c:	430a      	orrs	r2, r1
 800642e:	6022      	str	r2, [r4, #0]
 8006430:	2278      	movs	r2, #120	; 0x78
 8006432:	4932      	ldr	r1, [pc, #200]	; (80064fc <_printf_i+0x21c>)
 8006434:	9103      	str	r1, [sp, #12]
 8006436:	0021      	movs	r1, r4
 8006438:	3145      	adds	r1, #69	; 0x45
 800643a:	700a      	strb	r2, [r1, #0]
 800643c:	6819      	ldr	r1, [r3, #0]
 800643e:	6822      	ldr	r2, [r4, #0]
 8006440:	c920      	ldmia	r1!, {r5}
 8006442:	0610      	lsls	r0, r2, #24
 8006444:	d402      	bmi.n	800644c <_printf_i+0x16c>
 8006446:	0650      	lsls	r0, r2, #25
 8006448:	d500      	bpl.n	800644c <_printf_i+0x16c>
 800644a:	b2ad      	uxth	r5, r5
 800644c:	6019      	str	r1, [r3, #0]
 800644e:	07d3      	lsls	r3, r2, #31
 8006450:	d502      	bpl.n	8006458 <_printf_i+0x178>
 8006452:	2320      	movs	r3, #32
 8006454:	4313      	orrs	r3, r2
 8006456:	6023      	str	r3, [r4, #0]
 8006458:	2710      	movs	r7, #16
 800645a:	2d00      	cmp	r5, #0
 800645c:	d1a9      	bne.n	80063b2 <_printf_i+0xd2>
 800645e:	2220      	movs	r2, #32
 8006460:	6823      	ldr	r3, [r4, #0]
 8006462:	4393      	bics	r3, r2
 8006464:	6023      	str	r3, [r4, #0]
 8006466:	e7a4      	b.n	80063b2 <_printf_i+0xd2>
 8006468:	681a      	ldr	r2, [r3, #0]
 800646a:	680d      	ldr	r5, [r1, #0]
 800646c:	1d10      	adds	r0, r2, #4
 800646e:	6949      	ldr	r1, [r1, #20]
 8006470:	6018      	str	r0, [r3, #0]
 8006472:	6813      	ldr	r3, [r2, #0]
 8006474:	062e      	lsls	r6, r5, #24
 8006476:	d501      	bpl.n	800647c <_printf_i+0x19c>
 8006478:	6019      	str	r1, [r3, #0]
 800647a:	e002      	b.n	8006482 <_printf_i+0x1a2>
 800647c:	066d      	lsls	r5, r5, #25
 800647e:	d5fb      	bpl.n	8006478 <_printf_i+0x198>
 8006480:	8019      	strh	r1, [r3, #0]
 8006482:	2300      	movs	r3, #0
 8006484:	9e04      	ldr	r6, [sp, #16]
 8006486:	6123      	str	r3, [r4, #16]
 8006488:	e7c0      	b.n	800640c <_printf_i+0x12c>
 800648a:	681a      	ldr	r2, [r3, #0]
 800648c:	1d11      	adds	r1, r2, #4
 800648e:	6019      	str	r1, [r3, #0]
 8006490:	6816      	ldr	r6, [r2, #0]
 8006492:	2100      	movs	r1, #0
 8006494:	0030      	movs	r0, r6
 8006496:	6862      	ldr	r2, [r4, #4]
 8006498:	f000 fbf1 	bl	8006c7e <memchr>
 800649c:	2800      	cmp	r0, #0
 800649e:	d001      	beq.n	80064a4 <_printf_i+0x1c4>
 80064a0:	1b80      	subs	r0, r0, r6
 80064a2:	6060      	str	r0, [r4, #4]
 80064a4:	6863      	ldr	r3, [r4, #4]
 80064a6:	6123      	str	r3, [r4, #16]
 80064a8:	2300      	movs	r3, #0
 80064aa:	9a04      	ldr	r2, [sp, #16]
 80064ac:	7013      	strb	r3, [r2, #0]
 80064ae:	e7ad      	b.n	800640c <_printf_i+0x12c>
 80064b0:	0032      	movs	r2, r6
 80064b2:	6923      	ldr	r3, [r4, #16]
 80064b4:	9906      	ldr	r1, [sp, #24]
 80064b6:	9805      	ldr	r0, [sp, #20]
 80064b8:	9d07      	ldr	r5, [sp, #28]
 80064ba:	47a8      	blx	r5
 80064bc:	3001      	adds	r0, #1
 80064be:	d0af      	beq.n	8006420 <_printf_i+0x140>
 80064c0:	6823      	ldr	r3, [r4, #0]
 80064c2:	079b      	lsls	r3, r3, #30
 80064c4:	d415      	bmi.n	80064f2 <_printf_i+0x212>
 80064c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80064c8:	68e0      	ldr	r0, [r4, #12]
 80064ca:	4298      	cmp	r0, r3
 80064cc:	daaa      	bge.n	8006424 <_printf_i+0x144>
 80064ce:	0018      	movs	r0, r3
 80064d0:	e7a8      	b.n	8006424 <_printf_i+0x144>
 80064d2:	0022      	movs	r2, r4
 80064d4:	2301      	movs	r3, #1
 80064d6:	9906      	ldr	r1, [sp, #24]
 80064d8:	9805      	ldr	r0, [sp, #20]
 80064da:	9e07      	ldr	r6, [sp, #28]
 80064dc:	3219      	adds	r2, #25
 80064de:	47b0      	blx	r6
 80064e0:	3001      	adds	r0, #1
 80064e2:	d09d      	beq.n	8006420 <_printf_i+0x140>
 80064e4:	3501      	adds	r5, #1
 80064e6:	68e3      	ldr	r3, [r4, #12]
 80064e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80064ea:	1a9b      	subs	r3, r3, r2
 80064ec:	42ab      	cmp	r3, r5
 80064ee:	dcf0      	bgt.n	80064d2 <_printf_i+0x1f2>
 80064f0:	e7e9      	b.n	80064c6 <_printf_i+0x1e6>
 80064f2:	2500      	movs	r5, #0
 80064f4:	e7f7      	b.n	80064e6 <_printf_i+0x206>
 80064f6:	46c0      	nop			; (mov r8, r8)
 80064f8:	0800a62b 	.word	0x0800a62b
 80064fc:	0800a63c 	.word	0x0800a63c

08006500 <_scanf_float>:
 8006500:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006502:	b08b      	sub	sp, #44	; 0x2c
 8006504:	0016      	movs	r6, r2
 8006506:	9002      	str	r0, [sp, #8]
 8006508:	22ae      	movs	r2, #174	; 0xae
 800650a:	2000      	movs	r0, #0
 800650c:	9307      	str	r3, [sp, #28]
 800650e:	688b      	ldr	r3, [r1, #8]
 8006510:	000f      	movs	r7, r1
 8006512:	1e59      	subs	r1, r3, #1
 8006514:	0052      	lsls	r2, r2, #1
 8006516:	9006      	str	r0, [sp, #24]
 8006518:	4291      	cmp	r1, r2
 800651a:	d905      	bls.n	8006528 <_scanf_float+0x28>
 800651c:	3b5e      	subs	r3, #94	; 0x5e
 800651e:	3bff      	subs	r3, #255	; 0xff
 8006520:	9306      	str	r3, [sp, #24]
 8006522:	235e      	movs	r3, #94	; 0x5e
 8006524:	33ff      	adds	r3, #255	; 0xff
 8006526:	60bb      	str	r3, [r7, #8]
 8006528:	23f0      	movs	r3, #240	; 0xf0
 800652a:	683a      	ldr	r2, [r7, #0]
 800652c:	00db      	lsls	r3, r3, #3
 800652e:	4313      	orrs	r3, r2
 8006530:	603b      	str	r3, [r7, #0]
 8006532:	003b      	movs	r3, r7
 8006534:	2400      	movs	r4, #0
 8006536:	331c      	adds	r3, #28
 8006538:	001d      	movs	r5, r3
 800653a:	9304      	str	r3, [sp, #16]
 800653c:	9403      	str	r4, [sp, #12]
 800653e:	9409      	str	r4, [sp, #36]	; 0x24
 8006540:	9408      	str	r4, [sp, #32]
 8006542:	9401      	str	r4, [sp, #4]
 8006544:	9405      	str	r4, [sp, #20]
 8006546:	68ba      	ldr	r2, [r7, #8]
 8006548:	2a00      	cmp	r2, #0
 800654a:	d00a      	beq.n	8006562 <_scanf_float+0x62>
 800654c:	6833      	ldr	r3, [r6, #0]
 800654e:	781b      	ldrb	r3, [r3, #0]
 8006550:	2b4e      	cmp	r3, #78	; 0x4e
 8006552:	d844      	bhi.n	80065de <_scanf_float+0xde>
 8006554:	0018      	movs	r0, r3
 8006556:	2b40      	cmp	r3, #64	; 0x40
 8006558:	d82c      	bhi.n	80065b4 <_scanf_float+0xb4>
 800655a:	382b      	subs	r0, #43	; 0x2b
 800655c:	b2c1      	uxtb	r1, r0
 800655e:	290e      	cmp	r1, #14
 8006560:	d92a      	bls.n	80065b8 <_scanf_float+0xb8>
 8006562:	9b01      	ldr	r3, [sp, #4]
 8006564:	2b00      	cmp	r3, #0
 8006566:	d003      	beq.n	8006570 <_scanf_float+0x70>
 8006568:	683b      	ldr	r3, [r7, #0]
 800656a:	4aa3      	ldr	r2, [pc, #652]	; (80067f8 <_scanf_float+0x2f8>)
 800656c:	4013      	ands	r3, r2
 800656e:	603b      	str	r3, [r7, #0]
 8006570:	9b03      	ldr	r3, [sp, #12]
 8006572:	3b01      	subs	r3, #1
 8006574:	2b01      	cmp	r3, #1
 8006576:	d900      	bls.n	800657a <_scanf_float+0x7a>
 8006578:	e0f9      	b.n	800676e <_scanf_float+0x26e>
 800657a:	24be      	movs	r4, #190	; 0xbe
 800657c:	0064      	lsls	r4, r4, #1
 800657e:	9b04      	ldr	r3, [sp, #16]
 8006580:	429d      	cmp	r5, r3
 8006582:	d900      	bls.n	8006586 <_scanf_float+0x86>
 8006584:	e0e9      	b.n	800675a <_scanf_float+0x25a>
 8006586:	2301      	movs	r3, #1
 8006588:	9303      	str	r3, [sp, #12]
 800658a:	e183      	b.n	8006894 <_scanf_float+0x394>
 800658c:	0018      	movs	r0, r3
 800658e:	3861      	subs	r0, #97	; 0x61
 8006590:	280d      	cmp	r0, #13
 8006592:	d8e6      	bhi.n	8006562 <_scanf_float+0x62>
 8006594:	f7f9 fdca 	bl	800012c <__gnu_thumb1_case_shi>
 8006598:	ffe50083 	.word	0xffe50083
 800659c:	ffe5ffe5 	.word	0xffe5ffe5
 80065a0:	00a200b6 	.word	0x00a200b6
 80065a4:	ffe5ffe5 	.word	0xffe5ffe5
 80065a8:	ffe50089 	.word	0xffe50089
 80065ac:	ffe5ffe5 	.word	0xffe5ffe5
 80065b0:	0065ffe5 	.word	0x0065ffe5
 80065b4:	3841      	subs	r0, #65	; 0x41
 80065b6:	e7eb      	b.n	8006590 <_scanf_float+0x90>
 80065b8:	280e      	cmp	r0, #14
 80065ba:	d8d2      	bhi.n	8006562 <_scanf_float+0x62>
 80065bc:	f7f9 fdb6 	bl	800012c <__gnu_thumb1_case_shi>
 80065c0:	ffd1004b 	.word	0xffd1004b
 80065c4:	0098004b 	.word	0x0098004b
 80065c8:	0020ffd1 	.word	0x0020ffd1
 80065cc:	00400040 	.word	0x00400040
 80065d0:	00400040 	.word	0x00400040
 80065d4:	00400040 	.word	0x00400040
 80065d8:	00400040 	.word	0x00400040
 80065dc:	0040      	.short	0x0040
 80065de:	2b6e      	cmp	r3, #110	; 0x6e
 80065e0:	d809      	bhi.n	80065f6 <_scanf_float+0xf6>
 80065e2:	2b60      	cmp	r3, #96	; 0x60
 80065e4:	d8d2      	bhi.n	800658c <_scanf_float+0x8c>
 80065e6:	2b54      	cmp	r3, #84	; 0x54
 80065e8:	d07d      	beq.n	80066e6 <_scanf_float+0x1e6>
 80065ea:	2b59      	cmp	r3, #89	; 0x59
 80065ec:	d1b9      	bne.n	8006562 <_scanf_float+0x62>
 80065ee:	2c07      	cmp	r4, #7
 80065f0:	d1b7      	bne.n	8006562 <_scanf_float+0x62>
 80065f2:	2408      	movs	r4, #8
 80065f4:	e02c      	b.n	8006650 <_scanf_float+0x150>
 80065f6:	2b74      	cmp	r3, #116	; 0x74
 80065f8:	d075      	beq.n	80066e6 <_scanf_float+0x1e6>
 80065fa:	2b79      	cmp	r3, #121	; 0x79
 80065fc:	d0f7      	beq.n	80065ee <_scanf_float+0xee>
 80065fe:	e7b0      	b.n	8006562 <_scanf_float+0x62>
 8006600:	6839      	ldr	r1, [r7, #0]
 8006602:	05c8      	lsls	r0, r1, #23
 8006604:	d51c      	bpl.n	8006640 <_scanf_float+0x140>
 8006606:	2380      	movs	r3, #128	; 0x80
 8006608:	4399      	bics	r1, r3
 800660a:	9b01      	ldr	r3, [sp, #4]
 800660c:	6039      	str	r1, [r7, #0]
 800660e:	3301      	adds	r3, #1
 8006610:	9301      	str	r3, [sp, #4]
 8006612:	9b06      	ldr	r3, [sp, #24]
 8006614:	2b00      	cmp	r3, #0
 8006616:	d003      	beq.n	8006620 <_scanf_float+0x120>
 8006618:	3b01      	subs	r3, #1
 800661a:	3201      	adds	r2, #1
 800661c:	9306      	str	r3, [sp, #24]
 800661e:	60ba      	str	r2, [r7, #8]
 8006620:	68bb      	ldr	r3, [r7, #8]
 8006622:	3b01      	subs	r3, #1
 8006624:	60bb      	str	r3, [r7, #8]
 8006626:	693b      	ldr	r3, [r7, #16]
 8006628:	3301      	adds	r3, #1
 800662a:	613b      	str	r3, [r7, #16]
 800662c:	6873      	ldr	r3, [r6, #4]
 800662e:	3b01      	subs	r3, #1
 8006630:	6073      	str	r3, [r6, #4]
 8006632:	2b00      	cmp	r3, #0
 8006634:	dc00      	bgt.n	8006638 <_scanf_float+0x138>
 8006636:	e086      	b.n	8006746 <_scanf_float+0x246>
 8006638:	6833      	ldr	r3, [r6, #0]
 800663a:	3301      	adds	r3, #1
 800663c:	6033      	str	r3, [r6, #0]
 800663e:	e782      	b.n	8006546 <_scanf_float+0x46>
 8006640:	9a03      	ldr	r2, [sp, #12]
 8006642:	1912      	adds	r2, r2, r4
 8006644:	2a00      	cmp	r2, #0
 8006646:	d18c      	bne.n	8006562 <_scanf_float+0x62>
 8006648:	683a      	ldr	r2, [r7, #0]
 800664a:	496c      	ldr	r1, [pc, #432]	; (80067fc <_scanf_float+0x2fc>)
 800664c:	400a      	ands	r2, r1
 800664e:	603a      	str	r2, [r7, #0]
 8006650:	702b      	strb	r3, [r5, #0]
 8006652:	3501      	adds	r5, #1
 8006654:	e7e4      	b.n	8006620 <_scanf_float+0x120>
 8006656:	2180      	movs	r1, #128	; 0x80
 8006658:	683a      	ldr	r2, [r7, #0]
 800665a:	420a      	tst	r2, r1
 800665c:	d081      	beq.n	8006562 <_scanf_float+0x62>
 800665e:	438a      	bics	r2, r1
 8006660:	e7f5      	b.n	800664e <_scanf_float+0x14e>
 8006662:	9a03      	ldr	r2, [sp, #12]
 8006664:	2a00      	cmp	r2, #0
 8006666:	d10f      	bne.n	8006688 <_scanf_float+0x188>
 8006668:	9a01      	ldr	r2, [sp, #4]
 800666a:	2a00      	cmp	r2, #0
 800666c:	d10f      	bne.n	800668e <_scanf_float+0x18e>
 800666e:	683a      	ldr	r2, [r7, #0]
 8006670:	21e0      	movs	r1, #224	; 0xe0
 8006672:	0010      	movs	r0, r2
 8006674:	00c9      	lsls	r1, r1, #3
 8006676:	4008      	ands	r0, r1
 8006678:	4288      	cmp	r0, r1
 800667a:	d108      	bne.n	800668e <_scanf_float+0x18e>
 800667c:	4960      	ldr	r1, [pc, #384]	; (8006800 <_scanf_float+0x300>)
 800667e:	400a      	ands	r2, r1
 8006680:	603a      	str	r2, [r7, #0]
 8006682:	2201      	movs	r2, #1
 8006684:	9203      	str	r2, [sp, #12]
 8006686:	e7e3      	b.n	8006650 <_scanf_float+0x150>
 8006688:	9a03      	ldr	r2, [sp, #12]
 800668a:	2a02      	cmp	r2, #2
 800668c:	d059      	beq.n	8006742 <_scanf_float+0x242>
 800668e:	2c01      	cmp	r4, #1
 8006690:	d002      	beq.n	8006698 <_scanf_float+0x198>
 8006692:	2c04      	cmp	r4, #4
 8006694:	d000      	beq.n	8006698 <_scanf_float+0x198>
 8006696:	e764      	b.n	8006562 <_scanf_float+0x62>
 8006698:	3401      	adds	r4, #1
 800669a:	b2e4      	uxtb	r4, r4
 800669c:	e7d8      	b.n	8006650 <_scanf_float+0x150>
 800669e:	9a03      	ldr	r2, [sp, #12]
 80066a0:	2a01      	cmp	r2, #1
 80066a2:	d000      	beq.n	80066a6 <_scanf_float+0x1a6>
 80066a4:	e75d      	b.n	8006562 <_scanf_float+0x62>
 80066a6:	2202      	movs	r2, #2
 80066a8:	e7ec      	b.n	8006684 <_scanf_float+0x184>
 80066aa:	2c00      	cmp	r4, #0
 80066ac:	d110      	bne.n	80066d0 <_scanf_float+0x1d0>
 80066ae:	9a01      	ldr	r2, [sp, #4]
 80066b0:	2a00      	cmp	r2, #0
 80066b2:	d000      	beq.n	80066b6 <_scanf_float+0x1b6>
 80066b4:	e758      	b.n	8006568 <_scanf_float+0x68>
 80066b6:	683a      	ldr	r2, [r7, #0]
 80066b8:	21e0      	movs	r1, #224	; 0xe0
 80066ba:	0010      	movs	r0, r2
 80066bc:	00c9      	lsls	r1, r1, #3
 80066be:	4008      	ands	r0, r1
 80066c0:	4288      	cmp	r0, r1
 80066c2:	d000      	beq.n	80066c6 <_scanf_float+0x1c6>
 80066c4:	e754      	b.n	8006570 <_scanf_float+0x70>
 80066c6:	494e      	ldr	r1, [pc, #312]	; (8006800 <_scanf_float+0x300>)
 80066c8:	3401      	adds	r4, #1
 80066ca:	400a      	ands	r2, r1
 80066cc:	603a      	str	r2, [r7, #0]
 80066ce:	e7bf      	b.n	8006650 <_scanf_float+0x150>
 80066d0:	21fd      	movs	r1, #253	; 0xfd
 80066d2:	1ee2      	subs	r2, r4, #3
 80066d4:	420a      	tst	r2, r1
 80066d6:	d000      	beq.n	80066da <_scanf_float+0x1da>
 80066d8:	e743      	b.n	8006562 <_scanf_float+0x62>
 80066da:	e7dd      	b.n	8006698 <_scanf_float+0x198>
 80066dc:	2c02      	cmp	r4, #2
 80066de:	d000      	beq.n	80066e2 <_scanf_float+0x1e2>
 80066e0:	e73f      	b.n	8006562 <_scanf_float+0x62>
 80066e2:	2403      	movs	r4, #3
 80066e4:	e7b4      	b.n	8006650 <_scanf_float+0x150>
 80066e6:	2c06      	cmp	r4, #6
 80066e8:	d000      	beq.n	80066ec <_scanf_float+0x1ec>
 80066ea:	e73a      	b.n	8006562 <_scanf_float+0x62>
 80066ec:	2407      	movs	r4, #7
 80066ee:	e7af      	b.n	8006650 <_scanf_float+0x150>
 80066f0:	683a      	ldr	r2, [r7, #0]
 80066f2:	0591      	lsls	r1, r2, #22
 80066f4:	d400      	bmi.n	80066f8 <_scanf_float+0x1f8>
 80066f6:	e734      	b.n	8006562 <_scanf_float+0x62>
 80066f8:	4942      	ldr	r1, [pc, #264]	; (8006804 <_scanf_float+0x304>)
 80066fa:	400a      	ands	r2, r1
 80066fc:	603a      	str	r2, [r7, #0]
 80066fe:	9a01      	ldr	r2, [sp, #4]
 8006700:	9205      	str	r2, [sp, #20]
 8006702:	e7a5      	b.n	8006650 <_scanf_float+0x150>
 8006704:	21a0      	movs	r1, #160	; 0xa0
 8006706:	2080      	movs	r0, #128	; 0x80
 8006708:	683a      	ldr	r2, [r7, #0]
 800670a:	00c9      	lsls	r1, r1, #3
 800670c:	4011      	ands	r1, r2
 800670e:	00c0      	lsls	r0, r0, #3
 8006710:	4281      	cmp	r1, r0
 8006712:	d006      	beq.n	8006722 <_scanf_float+0x222>
 8006714:	4202      	tst	r2, r0
 8006716:	d100      	bne.n	800671a <_scanf_float+0x21a>
 8006718:	e723      	b.n	8006562 <_scanf_float+0x62>
 800671a:	9901      	ldr	r1, [sp, #4]
 800671c:	2900      	cmp	r1, #0
 800671e:	d100      	bne.n	8006722 <_scanf_float+0x222>
 8006720:	e726      	b.n	8006570 <_scanf_float+0x70>
 8006722:	0591      	lsls	r1, r2, #22
 8006724:	d404      	bmi.n	8006730 <_scanf_float+0x230>
 8006726:	9901      	ldr	r1, [sp, #4]
 8006728:	9805      	ldr	r0, [sp, #20]
 800672a:	9509      	str	r5, [sp, #36]	; 0x24
 800672c:	1a09      	subs	r1, r1, r0
 800672e:	9108      	str	r1, [sp, #32]
 8006730:	4933      	ldr	r1, [pc, #204]	; (8006800 <_scanf_float+0x300>)
 8006732:	400a      	ands	r2, r1
 8006734:	21c0      	movs	r1, #192	; 0xc0
 8006736:	0049      	lsls	r1, r1, #1
 8006738:	430a      	orrs	r2, r1
 800673a:	603a      	str	r2, [r7, #0]
 800673c:	2200      	movs	r2, #0
 800673e:	9201      	str	r2, [sp, #4]
 8006740:	e786      	b.n	8006650 <_scanf_float+0x150>
 8006742:	2203      	movs	r2, #3
 8006744:	e79e      	b.n	8006684 <_scanf_float+0x184>
 8006746:	23c0      	movs	r3, #192	; 0xc0
 8006748:	005b      	lsls	r3, r3, #1
 800674a:	0031      	movs	r1, r6
 800674c:	58fb      	ldr	r3, [r7, r3]
 800674e:	9802      	ldr	r0, [sp, #8]
 8006750:	4798      	blx	r3
 8006752:	2800      	cmp	r0, #0
 8006754:	d100      	bne.n	8006758 <_scanf_float+0x258>
 8006756:	e6f6      	b.n	8006546 <_scanf_float+0x46>
 8006758:	e703      	b.n	8006562 <_scanf_float+0x62>
 800675a:	3d01      	subs	r5, #1
 800675c:	593b      	ldr	r3, [r7, r4]
 800675e:	0032      	movs	r2, r6
 8006760:	7829      	ldrb	r1, [r5, #0]
 8006762:	9802      	ldr	r0, [sp, #8]
 8006764:	4798      	blx	r3
 8006766:	693b      	ldr	r3, [r7, #16]
 8006768:	3b01      	subs	r3, #1
 800676a:	613b      	str	r3, [r7, #16]
 800676c:	e707      	b.n	800657e <_scanf_float+0x7e>
 800676e:	1e63      	subs	r3, r4, #1
 8006770:	2b06      	cmp	r3, #6
 8006772:	d80e      	bhi.n	8006792 <_scanf_float+0x292>
 8006774:	9503      	str	r5, [sp, #12]
 8006776:	2c02      	cmp	r4, #2
 8006778:	d920      	bls.n	80067bc <_scanf_float+0x2bc>
 800677a:	1b63      	subs	r3, r4, r5
 800677c:	b2db      	uxtb	r3, r3
 800677e:	9306      	str	r3, [sp, #24]
 8006780:	9b03      	ldr	r3, [sp, #12]
 8006782:	9a06      	ldr	r2, [sp, #24]
 8006784:	189b      	adds	r3, r3, r2
 8006786:	b2db      	uxtb	r3, r3
 8006788:	2b03      	cmp	r3, #3
 800678a:	d827      	bhi.n	80067dc <_scanf_float+0x2dc>
 800678c:	3c03      	subs	r4, #3
 800678e:	b2e4      	uxtb	r4, r4
 8006790:	1b2d      	subs	r5, r5, r4
 8006792:	683b      	ldr	r3, [r7, #0]
 8006794:	05da      	lsls	r2, r3, #23
 8006796:	d552      	bpl.n	800683e <_scanf_float+0x33e>
 8006798:	055b      	lsls	r3, r3, #21
 800679a:	d535      	bpl.n	8006808 <_scanf_float+0x308>
 800679c:	24be      	movs	r4, #190	; 0xbe
 800679e:	0064      	lsls	r4, r4, #1
 80067a0:	9b04      	ldr	r3, [sp, #16]
 80067a2:	429d      	cmp	r5, r3
 80067a4:	d800      	bhi.n	80067a8 <_scanf_float+0x2a8>
 80067a6:	e6ee      	b.n	8006586 <_scanf_float+0x86>
 80067a8:	3d01      	subs	r5, #1
 80067aa:	593b      	ldr	r3, [r7, r4]
 80067ac:	0032      	movs	r2, r6
 80067ae:	7829      	ldrb	r1, [r5, #0]
 80067b0:	9802      	ldr	r0, [sp, #8]
 80067b2:	4798      	blx	r3
 80067b4:	693b      	ldr	r3, [r7, #16]
 80067b6:	3b01      	subs	r3, #1
 80067b8:	613b      	str	r3, [r7, #16]
 80067ba:	e7f1      	b.n	80067a0 <_scanf_float+0x2a0>
 80067bc:	24be      	movs	r4, #190	; 0xbe
 80067be:	0064      	lsls	r4, r4, #1
 80067c0:	9b04      	ldr	r3, [sp, #16]
 80067c2:	429d      	cmp	r5, r3
 80067c4:	d800      	bhi.n	80067c8 <_scanf_float+0x2c8>
 80067c6:	e6de      	b.n	8006586 <_scanf_float+0x86>
 80067c8:	3d01      	subs	r5, #1
 80067ca:	593b      	ldr	r3, [r7, r4]
 80067cc:	0032      	movs	r2, r6
 80067ce:	7829      	ldrb	r1, [r5, #0]
 80067d0:	9802      	ldr	r0, [sp, #8]
 80067d2:	4798      	blx	r3
 80067d4:	693b      	ldr	r3, [r7, #16]
 80067d6:	3b01      	subs	r3, #1
 80067d8:	613b      	str	r3, [r7, #16]
 80067da:	e7f1      	b.n	80067c0 <_scanf_float+0x2c0>
 80067dc:	9b03      	ldr	r3, [sp, #12]
 80067de:	0032      	movs	r2, r6
 80067e0:	3b01      	subs	r3, #1
 80067e2:	7819      	ldrb	r1, [r3, #0]
 80067e4:	9303      	str	r3, [sp, #12]
 80067e6:	23be      	movs	r3, #190	; 0xbe
 80067e8:	005b      	lsls	r3, r3, #1
 80067ea:	58fb      	ldr	r3, [r7, r3]
 80067ec:	9802      	ldr	r0, [sp, #8]
 80067ee:	4798      	blx	r3
 80067f0:	693b      	ldr	r3, [r7, #16]
 80067f2:	3b01      	subs	r3, #1
 80067f4:	613b      	str	r3, [r7, #16]
 80067f6:	e7c3      	b.n	8006780 <_scanf_float+0x280>
 80067f8:	fffffeff 	.word	0xfffffeff
 80067fc:	fffffe7f 	.word	0xfffffe7f
 8006800:	fffff87f 	.word	0xfffff87f
 8006804:	fffffd7f 	.word	0xfffffd7f
 8006808:	693b      	ldr	r3, [r7, #16]
 800680a:	1e6c      	subs	r4, r5, #1
 800680c:	7821      	ldrb	r1, [r4, #0]
 800680e:	3b01      	subs	r3, #1
 8006810:	613b      	str	r3, [r7, #16]
 8006812:	2965      	cmp	r1, #101	; 0x65
 8006814:	d00c      	beq.n	8006830 <_scanf_float+0x330>
 8006816:	2945      	cmp	r1, #69	; 0x45
 8006818:	d00a      	beq.n	8006830 <_scanf_float+0x330>
 800681a:	23be      	movs	r3, #190	; 0xbe
 800681c:	005b      	lsls	r3, r3, #1
 800681e:	58fb      	ldr	r3, [r7, r3]
 8006820:	0032      	movs	r2, r6
 8006822:	9802      	ldr	r0, [sp, #8]
 8006824:	4798      	blx	r3
 8006826:	693b      	ldr	r3, [r7, #16]
 8006828:	1eac      	subs	r4, r5, #2
 800682a:	3b01      	subs	r3, #1
 800682c:	7821      	ldrb	r1, [r4, #0]
 800682e:	613b      	str	r3, [r7, #16]
 8006830:	23be      	movs	r3, #190	; 0xbe
 8006832:	005b      	lsls	r3, r3, #1
 8006834:	0032      	movs	r2, r6
 8006836:	58fb      	ldr	r3, [r7, r3]
 8006838:	9802      	ldr	r0, [sp, #8]
 800683a:	4798      	blx	r3
 800683c:	0025      	movs	r5, r4
 800683e:	683a      	ldr	r2, [r7, #0]
 8006840:	2310      	movs	r3, #16
 8006842:	0011      	movs	r1, r2
 8006844:	4019      	ands	r1, r3
 8006846:	9103      	str	r1, [sp, #12]
 8006848:	421a      	tst	r2, r3
 800684a:	d15b      	bne.n	8006904 <_scanf_float+0x404>
 800684c:	22c0      	movs	r2, #192	; 0xc0
 800684e:	7029      	strb	r1, [r5, #0]
 8006850:	683b      	ldr	r3, [r7, #0]
 8006852:	00d2      	lsls	r2, r2, #3
 8006854:	4013      	ands	r3, r2
 8006856:	2280      	movs	r2, #128	; 0x80
 8006858:	00d2      	lsls	r2, r2, #3
 800685a:	4293      	cmp	r3, r2
 800685c:	d11d      	bne.n	800689a <_scanf_float+0x39a>
 800685e:	9b05      	ldr	r3, [sp, #20]
 8006860:	9a01      	ldr	r2, [sp, #4]
 8006862:	9901      	ldr	r1, [sp, #4]
 8006864:	1a9a      	subs	r2, r3, r2
 8006866:	428b      	cmp	r3, r1
 8006868:	d124      	bne.n	80068b4 <_scanf_float+0x3b4>
 800686a:	2200      	movs	r2, #0
 800686c:	9904      	ldr	r1, [sp, #16]
 800686e:	9802      	ldr	r0, [sp, #8]
 8006870:	f002 fc98 	bl	80091a4 <_strtod_r>
 8006874:	9b07      	ldr	r3, [sp, #28]
 8006876:	683a      	ldr	r2, [r7, #0]
 8006878:	0004      	movs	r4, r0
 800687a:	000d      	movs	r5, r1
 800687c:	681b      	ldr	r3, [r3, #0]
 800687e:	0791      	lsls	r1, r2, #30
 8006880:	d525      	bpl.n	80068ce <_scanf_float+0x3ce>
 8006882:	9907      	ldr	r1, [sp, #28]
 8006884:	1d1a      	adds	r2, r3, #4
 8006886:	600a      	str	r2, [r1, #0]
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	601c      	str	r4, [r3, #0]
 800688c:	605d      	str	r5, [r3, #4]
 800688e:	68fb      	ldr	r3, [r7, #12]
 8006890:	3301      	adds	r3, #1
 8006892:	60fb      	str	r3, [r7, #12]
 8006894:	9803      	ldr	r0, [sp, #12]
 8006896:	b00b      	add	sp, #44	; 0x2c
 8006898:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800689a:	9b08      	ldr	r3, [sp, #32]
 800689c:	2b00      	cmp	r3, #0
 800689e:	d0e4      	beq.n	800686a <_scanf_float+0x36a>
 80068a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80068a2:	9a03      	ldr	r2, [sp, #12]
 80068a4:	1c59      	adds	r1, r3, #1
 80068a6:	9802      	ldr	r0, [sp, #8]
 80068a8:	230a      	movs	r3, #10
 80068aa:	f002 fd09 	bl	80092c0 <_strtol_r>
 80068ae:	9b08      	ldr	r3, [sp, #32]
 80068b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80068b2:	1ac2      	subs	r2, r0, r3
 80068b4:	003b      	movs	r3, r7
 80068b6:	3370      	adds	r3, #112	; 0x70
 80068b8:	33ff      	adds	r3, #255	; 0xff
 80068ba:	429d      	cmp	r5, r3
 80068bc:	d302      	bcc.n	80068c4 <_scanf_float+0x3c4>
 80068be:	003d      	movs	r5, r7
 80068c0:	356f      	adds	r5, #111	; 0x6f
 80068c2:	35ff      	adds	r5, #255	; 0xff
 80068c4:	0028      	movs	r0, r5
 80068c6:	4910      	ldr	r1, [pc, #64]	; (8006908 <_scanf_float+0x408>)
 80068c8:	f000 f8e6 	bl	8006a98 <siprintf>
 80068cc:	e7cd      	b.n	800686a <_scanf_float+0x36a>
 80068ce:	1d19      	adds	r1, r3, #4
 80068d0:	0752      	lsls	r2, r2, #29
 80068d2:	d502      	bpl.n	80068da <_scanf_float+0x3da>
 80068d4:	9a07      	ldr	r2, [sp, #28]
 80068d6:	6011      	str	r1, [r2, #0]
 80068d8:	e7d6      	b.n	8006888 <_scanf_float+0x388>
 80068da:	9a07      	ldr	r2, [sp, #28]
 80068dc:	0020      	movs	r0, r4
 80068de:	6011      	str	r1, [r2, #0]
 80068e0:	681e      	ldr	r6, [r3, #0]
 80068e2:	0022      	movs	r2, r4
 80068e4:	002b      	movs	r3, r5
 80068e6:	0029      	movs	r1, r5
 80068e8:	f7fc fbea 	bl	80030c0 <__aeabi_dcmpun>
 80068ec:	2800      	cmp	r0, #0
 80068ee:	d004      	beq.n	80068fa <_scanf_float+0x3fa>
 80068f0:	4806      	ldr	r0, [pc, #24]	; (800690c <_scanf_float+0x40c>)
 80068f2:	f000 f9cf 	bl	8006c94 <nanf>
 80068f6:	6030      	str	r0, [r6, #0]
 80068f8:	e7c9      	b.n	800688e <_scanf_float+0x38e>
 80068fa:	0020      	movs	r0, r4
 80068fc:	0029      	movs	r1, r5
 80068fe:	f7fc fc89 	bl	8003214 <__aeabi_d2f>
 8006902:	e7f8      	b.n	80068f6 <_scanf_float+0x3f6>
 8006904:	2300      	movs	r3, #0
 8006906:	e63f      	b.n	8006588 <_scanf_float+0x88>
 8006908:	0800a64d 	.word	0x0800a64d
 800690c:	0800a9dd 	.word	0x0800a9dd

08006910 <std>:
 8006910:	2300      	movs	r3, #0
 8006912:	b510      	push	{r4, lr}
 8006914:	0004      	movs	r4, r0
 8006916:	6003      	str	r3, [r0, #0]
 8006918:	6043      	str	r3, [r0, #4]
 800691a:	6083      	str	r3, [r0, #8]
 800691c:	8181      	strh	r1, [r0, #12]
 800691e:	6643      	str	r3, [r0, #100]	; 0x64
 8006920:	81c2      	strh	r2, [r0, #14]
 8006922:	6103      	str	r3, [r0, #16]
 8006924:	6143      	str	r3, [r0, #20]
 8006926:	6183      	str	r3, [r0, #24]
 8006928:	0019      	movs	r1, r3
 800692a:	2208      	movs	r2, #8
 800692c:	305c      	adds	r0, #92	; 0x5c
 800692e:	f000 f91f 	bl	8006b70 <memset>
 8006932:	4b0b      	ldr	r3, [pc, #44]	; (8006960 <std+0x50>)
 8006934:	6224      	str	r4, [r4, #32]
 8006936:	6263      	str	r3, [r4, #36]	; 0x24
 8006938:	4b0a      	ldr	r3, [pc, #40]	; (8006964 <std+0x54>)
 800693a:	62a3      	str	r3, [r4, #40]	; 0x28
 800693c:	4b0a      	ldr	r3, [pc, #40]	; (8006968 <std+0x58>)
 800693e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006940:	4b0a      	ldr	r3, [pc, #40]	; (800696c <std+0x5c>)
 8006942:	6323      	str	r3, [r4, #48]	; 0x30
 8006944:	4b0a      	ldr	r3, [pc, #40]	; (8006970 <std+0x60>)
 8006946:	429c      	cmp	r4, r3
 8006948:	d005      	beq.n	8006956 <std+0x46>
 800694a:	4b0a      	ldr	r3, [pc, #40]	; (8006974 <std+0x64>)
 800694c:	429c      	cmp	r4, r3
 800694e:	d002      	beq.n	8006956 <std+0x46>
 8006950:	4b09      	ldr	r3, [pc, #36]	; (8006978 <std+0x68>)
 8006952:	429c      	cmp	r4, r3
 8006954:	d103      	bne.n	800695e <std+0x4e>
 8006956:	0020      	movs	r0, r4
 8006958:	3058      	adds	r0, #88	; 0x58
 800695a:	f000 f98d 	bl	8006c78 <__retarget_lock_init_recursive>
 800695e:	bd10      	pop	{r4, pc}
 8006960:	08006ad9 	.word	0x08006ad9
 8006964:	08006b01 	.word	0x08006b01
 8006968:	08006b39 	.word	0x08006b39
 800696c:	08006b65 	.word	0x08006b65
 8006970:	20000278 	.word	0x20000278
 8006974:	200002e0 	.word	0x200002e0
 8006978:	20000348 	.word	0x20000348

0800697c <stdio_exit_handler>:
 800697c:	b510      	push	{r4, lr}
 800697e:	4a03      	ldr	r2, [pc, #12]	; (800698c <stdio_exit_handler+0x10>)
 8006980:	4903      	ldr	r1, [pc, #12]	; (8006990 <stdio_exit_handler+0x14>)
 8006982:	4804      	ldr	r0, [pc, #16]	; (8006994 <stdio_exit_handler+0x18>)
 8006984:	f000 f86c 	bl	8006a60 <_fwalk_sglue>
 8006988:	bd10      	pop	{r4, pc}
 800698a:	46c0      	nop			; (mov r8, r8)
 800698c:	2000000c 	.word	0x2000000c
 8006990:	080096a1 	.word	0x080096a1
 8006994:	20000018 	.word	0x20000018

08006998 <cleanup_stdio>:
 8006998:	6841      	ldr	r1, [r0, #4]
 800699a:	4b0b      	ldr	r3, [pc, #44]	; (80069c8 <cleanup_stdio+0x30>)
 800699c:	b510      	push	{r4, lr}
 800699e:	0004      	movs	r4, r0
 80069a0:	4299      	cmp	r1, r3
 80069a2:	d001      	beq.n	80069a8 <cleanup_stdio+0x10>
 80069a4:	f002 fe7c 	bl	80096a0 <_fflush_r>
 80069a8:	68a1      	ldr	r1, [r4, #8]
 80069aa:	4b08      	ldr	r3, [pc, #32]	; (80069cc <cleanup_stdio+0x34>)
 80069ac:	4299      	cmp	r1, r3
 80069ae:	d002      	beq.n	80069b6 <cleanup_stdio+0x1e>
 80069b0:	0020      	movs	r0, r4
 80069b2:	f002 fe75 	bl	80096a0 <_fflush_r>
 80069b6:	68e1      	ldr	r1, [r4, #12]
 80069b8:	4b05      	ldr	r3, [pc, #20]	; (80069d0 <cleanup_stdio+0x38>)
 80069ba:	4299      	cmp	r1, r3
 80069bc:	d002      	beq.n	80069c4 <cleanup_stdio+0x2c>
 80069be:	0020      	movs	r0, r4
 80069c0:	f002 fe6e 	bl	80096a0 <_fflush_r>
 80069c4:	bd10      	pop	{r4, pc}
 80069c6:	46c0      	nop			; (mov r8, r8)
 80069c8:	20000278 	.word	0x20000278
 80069cc:	200002e0 	.word	0x200002e0
 80069d0:	20000348 	.word	0x20000348

080069d4 <global_stdio_init.part.0>:
 80069d4:	b510      	push	{r4, lr}
 80069d6:	4b09      	ldr	r3, [pc, #36]	; (80069fc <global_stdio_init.part.0+0x28>)
 80069d8:	4a09      	ldr	r2, [pc, #36]	; (8006a00 <global_stdio_init.part.0+0x2c>)
 80069da:	2104      	movs	r1, #4
 80069dc:	601a      	str	r2, [r3, #0]
 80069de:	4809      	ldr	r0, [pc, #36]	; (8006a04 <global_stdio_init.part.0+0x30>)
 80069e0:	2200      	movs	r2, #0
 80069e2:	f7ff ff95 	bl	8006910 <std>
 80069e6:	2201      	movs	r2, #1
 80069e8:	2109      	movs	r1, #9
 80069ea:	4807      	ldr	r0, [pc, #28]	; (8006a08 <global_stdio_init.part.0+0x34>)
 80069ec:	f7ff ff90 	bl	8006910 <std>
 80069f0:	2202      	movs	r2, #2
 80069f2:	2112      	movs	r1, #18
 80069f4:	4805      	ldr	r0, [pc, #20]	; (8006a0c <global_stdio_init.part.0+0x38>)
 80069f6:	f7ff ff8b 	bl	8006910 <std>
 80069fa:	bd10      	pop	{r4, pc}
 80069fc:	200003b0 	.word	0x200003b0
 8006a00:	0800697d 	.word	0x0800697d
 8006a04:	20000278 	.word	0x20000278
 8006a08:	200002e0 	.word	0x200002e0
 8006a0c:	20000348 	.word	0x20000348

08006a10 <__sfp_lock_acquire>:
 8006a10:	b510      	push	{r4, lr}
 8006a12:	4802      	ldr	r0, [pc, #8]	; (8006a1c <__sfp_lock_acquire+0xc>)
 8006a14:	f000 f931 	bl	8006c7a <__retarget_lock_acquire_recursive>
 8006a18:	bd10      	pop	{r4, pc}
 8006a1a:	46c0      	nop			; (mov r8, r8)
 8006a1c:	200003b9 	.word	0x200003b9

08006a20 <__sfp_lock_release>:
 8006a20:	b510      	push	{r4, lr}
 8006a22:	4802      	ldr	r0, [pc, #8]	; (8006a2c <__sfp_lock_release+0xc>)
 8006a24:	f000 f92a 	bl	8006c7c <__retarget_lock_release_recursive>
 8006a28:	bd10      	pop	{r4, pc}
 8006a2a:	46c0      	nop			; (mov r8, r8)
 8006a2c:	200003b9 	.word	0x200003b9

08006a30 <__sinit>:
 8006a30:	b510      	push	{r4, lr}
 8006a32:	0004      	movs	r4, r0
 8006a34:	f7ff ffec 	bl	8006a10 <__sfp_lock_acquire>
 8006a38:	6a23      	ldr	r3, [r4, #32]
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d002      	beq.n	8006a44 <__sinit+0x14>
 8006a3e:	f7ff ffef 	bl	8006a20 <__sfp_lock_release>
 8006a42:	bd10      	pop	{r4, pc}
 8006a44:	4b04      	ldr	r3, [pc, #16]	; (8006a58 <__sinit+0x28>)
 8006a46:	6223      	str	r3, [r4, #32]
 8006a48:	4b04      	ldr	r3, [pc, #16]	; (8006a5c <__sinit+0x2c>)
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	2b00      	cmp	r3, #0
 8006a4e:	d1f6      	bne.n	8006a3e <__sinit+0xe>
 8006a50:	f7ff ffc0 	bl	80069d4 <global_stdio_init.part.0>
 8006a54:	e7f3      	b.n	8006a3e <__sinit+0xe>
 8006a56:	46c0      	nop			; (mov r8, r8)
 8006a58:	08006999 	.word	0x08006999
 8006a5c:	200003b0 	.word	0x200003b0

08006a60 <_fwalk_sglue>:
 8006a60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006a62:	0014      	movs	r4, r2
 8006a64:	2600      	movs	r6, #0
 8006a66:	9000      	str	r0, [sp, #0]
 8006a68:	9101      	str	r1, [sp, #4]
 8006a6a:	68a5      	ldr	r5, [r4, #8]
 8006a6c:	6867      	ldr	r7, [r4, #4]
 8006a6e:	3f01      	subs	r7, #1
 8006a70:	d504      	bpl.n	8006a7c <_fwalk_sglue+0x1c>
 8006a72:	6824      	ldr	r4, [r4, #0]
 8006a74:	2c00      	cmp	r4, #0
 8006a76:	d1f8      	bne.n	8006a6a <_fwalk_sglue+0xa>
 8006a78:	0030      	movs	r0, r6
 8006a7a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006a7c:	89ab      	ldrh	r3, [r5, #12]
 8006a7e:	2b01      	cmp	r3, #1
 8006a80:	d908      	bls.n	8006a94 <_fwalk_sglue+0x34>
 8006a82:	220e      	movs	r2, #14
 8006a84:	5eab      	ldrsh	r3, [r5, r2]
 8006a86:	3301      	adds	r3, #1
 8006a88:	d004      	beq.n	8006a94 <_fwalk_sglue+0x34>
 8006a8a:	0029      	movs	r1, r5
 8006a8c:	9800      	ldr	r0, [sp, #0]
 8006a8e:	9b01      	ldr	r3, [sp, #4]
 8006a90:	4798      	blx	r3
 8006a92:	4306      	orrs	r6, r0
 8006a94:	3568      	adds	r5, #104	; 0x68
 8006a96:	e7ea      	b.n	8006a6e <_fwalk_sglue+0xe>

08006a98 <siprintf>:
 8006a98:	b40e      	push	{r1, r2, r3}
 8006a9a:	b500      	push	{lr}
 8006a9c:	490b      	ldr	r1, [pc, #44]	; (8006acc <siprintf+0x34>)
 8006a9e:	b09c      	sub	sp, #112	; 0x70
 8006aa0:	ab1d      	add	r3, sp, #116	; 0x74
 8006aa2:	9002      	str	r0, [sp, #8]
 8006aa4:	9006      	str	r0, [sp, #24]
 8006aa6:	9107      	str	r1, [sp, #28]
 8006aa8:	9104      	str	r1, [sp, #16]
 8006aaa:	4809      	ldr	r0, [pc, #36]	; (8006ad0 <siprintf+0x38>)
 8006aac:	4909      	ldr	r1, [pc, #36]	; (8006ad4 <siprintf+0x3c>)
 8006aae:	cb04      	ldmia	r3!, {r2}
 8006ab0:	9105      	str	r1, [sp, #20]
 8006ab2:	6800      	ldr	r0, [r0, #0]
 8006ab4:	a902      	add	r1, sp, #8
 8006ab6:	9301      	str	r3, [sp, #4]
 8006ab8:	f002 fc68 	bl	800938c <_svfiprintf_r>
 8006abc:	2200      	movs	r2, #0
 8006abe:	9b02      	ldr	r3, [sp, #8]
 8006ac0:	701a      	strb	r2, [r3, #0]
 8006ac2:	b01c      	add	sp, #112	; 0x70
 8006ac4:	bc08      	pop	{r3}
 8006ac6:	b003      	add	sp, #12
 8006ac8:	4718      	bx	r3
 8006aca:	46c0      	nop			; (mov r8, r8)
 8006acc:	7fffffff 	.word	0x7fffffff
 8006ad0:	20000064 	.word	0x20000064
 8006ad4:	ffff0208 	.word	0xffff0208

08006ad8 <__sread>:
 8006ad8:	b570      	push	{r4, r5, r6, lr}
 8006ada:	000c      	movs	r4, r1
 8006adc:	250e      	movs	r5, #14
 8006ade:	5f49      	ldrsh	r1, [r1, r5]
 8006ae0:	f000 f878 	bl	8006bd4 <_read_r>
 8006ae4:	2800      	cmp	r0, #0
 8006ae6:	db03      	blt.n	8006af0 <__sread+0x18>
 8006ae8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006aea:	181b      	adds	r3, r3, r0
 8006aec:	6563      	str	r3, [r4, #84]	; 0x54
 8006aee:	bd70      	pop	{r4, r5, r6, pc}
 8006af0:	89a3      	ldrh	r3, [r4, #12]
 8006af2:	4a02      	ldr	r2, [pc, #8]	; (8006afc <__sread+0x24>)
 8006af4:	4013      	ands	r3, r2
 8006af6:	81a3      	strh	r3, [r4, #12]
 8006af8:	e7f9      	b.n	8006aee <__sread+0x16>
 8006afa:	46c0      	nop			; (mov r8, r8)
 8006afc:	ffffefff 	.word	0xffffefff

08006b00 <__swrite>:
 8006b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b02:	001f      	movs	r7, r3
 8006b04:	898b      	ldrh	r3, [r1, #12]
 8006b06:	0005      	movs	r5, r0
 8006b08:	000c      	movs	r4, r1
 8006b0a:	0016      	movs	r6, r2
 8006b0c:	05db      	lsls	r3, r3, #23
 8006b0e:	d505      	bpl.n	8006b1c <__swrite+0x1c>
 8006b10:	230e      	movs	r3, #14
 8006b12:	5ec9      	ldrsh	r1, [r1, r3]
 8006b14:	2200      	movs	r2, #0
 8006b16:	2302      	movs	r3, #2
 8006b18:	f000 f848 	bl	8006bac <_lseek_r>
 8006b1c:	89a3      	ldrh	r3, [r4, #12]
 8006b1e:	4a05      	ldr	r2, [pc, #20]	; (8006b34 <__swrite+0x34>)
 8006b20:	0028      	movs	r0, r5
 8006b22:	4013      	ands	r3, r2
 8006b24:	81a3      	strh	r3, [r4, #12]
 8006b26:	0032      	movs	r2, r6
 8006b28:	230e      	movs	r3, #14
 8006b2a:	5ee1      	ldrsh	r1, [r4, r3]
 8006b2c:	003b      	movs	r3, r7
 8006b2e:	f000 f865 	bl	8006bfc <_write_r>
 8006b32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006b34:	ffffefff 	.word	0xffffefff

08006b38 <__sseek>:
 8006b38:	b570      	push	{r4, r5, r6, lr}
 8006b3a:	000c      	movs	r4, r1
 8006b3c:	250e      	movs	r5, #14
 8006b3e:	5f49      	ldrsh	r1, [r1, r5]
 8006b40:	f000 f834 	bl	8006bac <_lseek_r>
 8006b44:	89a3      	ldrh	r3, [r4, #12]
 8006b46:	1c42      	adds	r2, r0, #1
 8006b48:	d103      	bne.n	8006b52 <__sseek+0x1a>
 8006b4a:	4a05      	ldr	r2, [pc, #20]	; (8006b60 <__sseek+0x28>)
 8006b4c:	4013      	ands	r3, r2
 8006b4e:	81a3      	strh	r3, [r4, #12]
 8006b50:	bd70      	pop	{r4, r5, r6, pc}
 8006b52:	2280      	movs	r2, #128	; 0x80
 8006b54:	0152      	lsls	r2, r2, #5
 8006b56:	4313      	orrs	r3, r2
 8006b58:	81a3      	strh	r3, [r4, #12]
 8006b5a:	6560      	str	r0, [r4, #84]	; 0x54
 8006b5c:	e7f8      	b.n	8006b50 <__sseek+0x18>
 8006b5e:	46c0      	nop			; (mov r8, r8)
 8006b60:	ffffefff 	.word	0xffffefff

08006b64 <__sclose>:
 8006b64:	b510      	push	{r4, lr}
 8006b66:	230e      	movs	r3, #14
 8006b68:	5ec9      	ldrsh	r1, [r1, r3]
 8006b6a:	f000 f80d 	bl	8006b88 <_close_r>
 8006b6e:	bd10      	pop	{r4, pc}

08006b70 <memset>:
 8006b70:	0003      	movs	r3, r0
 8006b72:	1882      	adds	r2, r0, r2
 8006b74:	4293      	cmp	r3, r2
 8006b76:	d100      	bne.n	8006b7a <memset+0xa>
 8006b78:	4770      	bx	lr
 8006b7a:	7019      	strb	r1, [r3, #0]
 8006b7c:	3301      	adds	r3, #1
 8006b7e:	e7f9      	b.n	8006b74 <memset+0x4>

08006b80 <_localeconv_r>:
 8006b80:	4800      	ldr	r0, [pc, #0]	; (8006b84 <_localeconv_r+0x4>)
 8006b82:	4770      	bx	lr
 8006b84:	20000158 	.word	0x20000158

08006b88 <_close_r>:
 8006b88:	2300      	movs	r3, #0
 8006b8a:	b570      	push	{r4, r5, r6, lr}
 8006b8c:	4d06      	ldr	r5, [pc, #24]	; (8006ba8 <_close_r+0x20>)
 8006b8e:	0004      	movs	r4, r0
 8006b90:	0008      	movs	r0, r1
 8006b92:	602b      	str	r3, [r5, #0]
 8006b94:	f7fd face 	bl	8004134 <_close>
 8006b98:	1c43      	adds	r3, r0, #1
 8006b9a:	d103      	bne.n	8006ba4 <_close_r+0x1c>
 8006b9c:	682b      	ldr	r3, [r5, #0]
 8006b9e:	2b00      	cmp	r3, #0
 8006ba0:	d000      	beq.n	8006ba4 <_close_r+0x1c>
 8006ba2:	6023      	str	r3, [r4, #0]
 8006ba4:	bd70      	pop	{r4, r5, r6, pc}
 8006ba6:	46c0      	nop			; (mov r8, r8)
 8006ba8:	200003b4 	.word	0x200003b4

08006bac <_lseek_r>:
 8006bac:	b570      	push	{r4, r5, r6, lr}
 8006bae:	0004      	movs	r4, r0
 8006bb0:	0008      	movs	r0, r1
 8006bb2:	0011      	movs	r1, r2
 8006bb4:	001a      	movs	r2, r3
 8006bb6:	2300      	movs	r3, #0
 8006bb8:	4d05      	ldr	r5, [pc, #20]	; (8006bd0 <_lseek_r+0x24>)
 8006bba:	602b      	str	r3, [r5, #0]
 8006bbc:	f7fd fadb 	bl	8004176 <_lseek>
 8006bc0:	1c43      	adds	r3, r0, #1
 8006bc2:	d103      	bne.n	8006bcc <_lseek_r+0x20>
 8006bc4:	682b      	ldr	r3, [r5, #0]
 8006bc6:	2b00      	cmp	r3, #0
 8006bc8:	d000      	beq.n	8006bcc <_lseek_r+0x20>
 8006bca:	6023      	str	r3, [r4, #0]
 8006bcc:	bd70      	pop	{r4, r5, r6, pc}
 8006bce:	46c0      	nop			; (mov r8, r8)
 8006bd0:	200003b4 	.word	0x200003b4

08006bd4 <_read_r>:
 8006bd4:	b570      	push	{r4, r5, r6, lr}
 8006bd6:	0004      	movs	r4, r0
 8006bd8:	0008      	movs	r0, r1
 8006bda:	0011      	movs	r1, r2
 8006bdc:	001a      	movs	r2, r3
 8006bde:	2300      	movs	r3, #0
 8006be0:	4d05      	ldr	r5, [pc, #20]	; (8006bf8 <_read_r+0x24>)
 8006be2:	602b      	str	r3, [r5, #0]
 8006be4:	f7fd fa6d 	bl	80040c2 <_read>
 8006be8:	1c43      	adds	r3, r0, #1
 8006bea:	d103      	bne.n	8006bf4 <_read_r+0x20>
 8006bec:	682b      	ldr	r3, [r5, #0]
 8006bee:	2b00      	cmp	r3, #0
 8006bf0:	d000      	beq.n	8006bf4 <_read_r+0x20>
 8006bf2:	6023      	str	r3, [r4, #0]
 8006bf4:	bd70      	pop	{r4, r5, r6, pc}
 8006bf6:	46c0      	nop			; (mov r8, r8)
 8006bf8:	200003b4 	.word	0x200003b4

08006bfc <_write_r>:
 8006bfc:	b570      	push	{r4, r5, r6, lr}
 8006bfe:	0004      	movs	r4, r0
 8006c00:	0008      	movs	r0, r1
 8006c02:	0011      	movs	r1, r2
 8006c04:	001a      	movs	r2, r3
 8006c06:	2300      	movs	r3, #0
 8006c08:	4d05      	ldr	r5, [pc, #20]	; (8006c20 <_write_r+0x24>)
 8006c0a:	602b      	str	r3, [r5, #0]
 8006c0c:	f7fd fa76 	bl	80040fc <_write>
 8006c10:	1c43      	adds	r3, r0, #1
 8006c12:	d103      	bne.n	8006c1c <_write_r+0x20>
 8006c14:	682b      	ldr	r3, [r5, #0]
 8006c16:	2b00      	cmp	r3, #0
 8006c18:	d000      	beq.n	8006c1c <_write_r+0x20>
 8006c1a:	6023      	str	r3, [r4, #0]
 8006c1c:	bd70      	pop	{r4, r5, r6, pc}
 8006c1e:	46c0      	nop			; (mov r8, r8)
 8006c20:	200003b4 	.word	0x200003b4

08006c24 <__errno>:
 8006c24:	4b01      	ldr	r3, [pc, #4]	; (8006c2c <__errno+0x8>)
 8006c26:	6818      	ldr	r0, [r3, #0]
 8006c28:	4770      	bx	lr
 8006c2a:	46c0      	nop			; (mov r8, r8)
 8006c2c:	20000064 	.word	0x20000064

08006c30 <__libc_init_array>:
 8006c30:	b570      	push	{r4, r5, r6, lr}
 8006c32:	2600      	movs	r6, #0
 8006c34:	4c0c      	ldr	r4, [pc, #48]	; (8006c68 <__libc_init_array+0x38>)
 8006c36:	4d0d      	ldr	r5, [pc, #52]	; (8006c6c <__libc_init_array+0x3c>)
 8006c38:	1b64      	subs	r4, r4, r5
 8006c3a:	10a4      	asrs	r4, r4, #2
 8006c3c:	42a6      	cmp	r6, r4
 8006c3e:	d109      	bne.n	8006c54 <__libc_init_array+0x24>
 8006c40:	2600      	movs	r6, #0
 8006c42:	f003 fc71 	bl	800a528 <_init>
 8006c46:	4c0a      	ldr	r4, [pc, #40]	; (8006c70 <__libc_init_array+0x40>)
 8006c48:	4d0a      	ldr	r5, [pc, #40]	; (8006c74 <__libc_init_array+0x44>)
 8006c4a:	1b64      	subs	r4, r4, r5
 8006c4c:	10a4      	asrs	r4, r4, #2
 8006c4e:	42a6      	cmp	r6, r4
 8006c50:	d105      	bne.n	8006c5e <__libc_init_array+0x2e>
 8006c52:	bd70      	pop	{r4, r5, r6, pc}
 8006c54:	00b3      	lsls	r3, r6, #2
 8006c56:	58eb      	ldr	r3, [r5, r3]
 8006c58:	4798      	blx	r3
 8006c5a:	3601      	adds	r6, #1
 8006c5c:	e7ee      	b.n	8006c3c <__libc_init_array+0xc>
 8006c5e:	00b3      	lsls	r3, r6, #2
 8006c60:	58eb      	ldr	r3, [r5, r3]
 8006c62:	4798      	blx	r3
 8006c64:	3601      	adds	r6, #1
 8006c66:	e7f2      	b.n	8006c4e <__libc_init_array+0x1e>
 8006c68:	0800aa48 	.word	0x0800aa48
 8006c6c:	0800aa48 	.word	0x0800aa48
 8006c70:	0800aa4c 	.word	0x0800aa4c
 8006c74:	0800aa48 	.word	0x0800aa48

08006c78 <__retarget_lock_init_recursive>:
 8006c78:	4770      	bx	lr

08006c7a <__retarget_lock_acquire_recursive>:
 8006c7a:	4770      	bx	lr

08006c7c <__retarget_lock_release_recursive>:
 8006c7c:	4770      	bx	lr

08006c7e <memchr>:
 8006c7e:	b2c9      	uxtb	r1, r1
 8006c80:	1882      	adds	r2, r0, r2
 8006c82:	4290      	cmp	r0, r2
 8006c84:	d101      	bne.n	8006c8a <memchr+0xc>
 8006c86:	2000      	movs	r0, #0
 8006c88:	4770      	bx	lr
 8006c8a:	7803      	ldrb	r3, [r0, #0]
 8006c8c:	428b      	cmp	r3, r1
 8006c8e:	d0fb      	beq.n	8006c88 <memchr+0xa>
 8006c90:	3001      	adds	r0, #1
 8006c92:	e7f6      	b.n	8006c82 <memchr+0x4>

08006c94 <nanf>:
 8006c94:	4800      	ldr	r0, [pc, #0]	; (8006c98 <nanf+0x4>)
 8006c96:	4770      	bx	lr
 8006c98:	7fc00000 	.word	0x7fc00000

08006c9c <quorem>:
 8006c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c9e:	6902      	ldr	r2, [r0, #16]
 8006ca0:	690b      	ldr	r3, [r1, #16]
 8006ca2:	b089      	sub	sp, #36	; 0x24
 8006ca4:	0007      	movs	r7, r0
 8006ca6:	9104      	str	r1, [sp, #16]
 8006ca8:	2000      	movs	r0, #0
 8006caa:	429a      	cmp	r2, r3
 8006cac:	db69      	blt.n	8006d82 <quorem+0xe6>
 8006cae:	3b01      	subs	r3, #1
 8006cb0:	009c      	lsls	r4, r3, #2
 8006cb2:	9301      	str	r3, [sp, #4]
 8006cb4:	000b      	movs	r3, r1
 8006cb6:	3314      	adds	r3, #20
 8006cb8:	9306      	str	r3, [sp, #24]
 8006cba:	191b      	adds	r3, r3, r4
 8006cbc:	9305      	str	r3, [sp, #20]
 8006cbe:	003b      	movs	r3, r7
 8006cc0:	3314      	adds	r3, #20
 8006cc2:	9303      	str	r3, [sp, #12]
 8006cc4:	191c      	adds	r4, r3, r4
 8006cc6:	9b05      	ldr	r3, [sp, #20]
 8006cc8:	6826      	ldr	r6, [r4, #0]
 8006cca:	681d      	ldr	r5, [r3, #0]
 8006ccc:	0030      	movs	r0, r6
 8006cce:	3501      	adds	r5, #1
 8006cd0:	0029      	movs	r1, r5
 8006cd2:	f7f9 fa35 	bl	8000140 <__udivsi3>
 8006cd6:	9002      	str	r0, [sp, #8]
 8006cd8:	42ae      	cmp	r6, r5
 8006cda:	d329      	bcc.n	8006d30 <quorem+0x94>
 8006cdc:	9b06      	ldr	r3, [sp, #24]
 8006cde:	2600      	movs	r6, #0
 8006ce0:	469c      	mov	ip, r3
 8006ce2:	9d03      	ldr	r5, [sp, #12]
 8006ce4:	9606      	str	r6, [sp, #24]
 8006ce6:	4662      	mov	r2, ip
 8006ce8:	ca08      	ldmia	r2!, {r3}
 8006cea:	6828      	ldr	r0, [r5, #0]
 8006cec:	4694      	mov	ip, r2
 8006cee:	9a02      	ldr	r2, [sp, #8]
 8006cf0:	b299      	uxth	r1, r3
 8006cf2:	4351      	muls	r1, r2
 8006cf4:	0c1b      	lsrs	r3, r3, #16
 8006cf6:	4353      	muls	r3, r2
 8006cf8:	1989      	adds	r1, r1, r6
 8006cfa:	0c0a      	lsrs	r2, r1, #16
 8006cfc:	189b      	adds	r3, r3, r2
 8006cfe:	9307      	str	r3, [sp, #28]
 8006d00:	0c1e      	lsrs	r6, r3, #16
 8006d02:	9b06      	ldr	r3, [sp, #24]
 8006d04:	b282      	uxth	r2, r0
 8006d06:	18d2      	adds	r2, r2, r3
 8006d08:	466b      	mov	r3, sp
 8006d0a:	b289      	uxth	r1, r1
 8006d0c:	8b9b      	ldrh	r3, [r3, #28]
 8006d0e:	1a52      	subs	r2, r2, r1
 8006d10:	0c01      	lsrs	r1, r0, #16
 8006d12:	1ac9      	subs	r1, r1, r3
 8006d14:	1413      	asrs	r3, r2, #16
 8006d16:	18cb      	adds	r3, r1, r3
 8006d18:	1419      	asrs	r1, r3, #16
 8006d1a:	b292      	uxth	r2, r2
 8006d1c:	041b      	lsls	r3, r3, #16
 8006d1e:	4313      	orrs	r3, r2
 8006d20:	c508      	stmia	r5!, {r3}
 8006d22:	9b05      	ldr	r3, [sp, #20]
 8006d24:	9106      	str	r1, [sp, #24]
 8006d26:	4563      	cmp	r3, ip
 8006d28:	d2dd      	bcs.n	8006ce6 <quorem+0x4a>
 8006d2a:	6823      	ldr	r3, [r4, #0]
 8006d2c:	2b00      	cmp	r3, #0
 8006d2e:	d030      	beq.n	8006d92 <quorem+0xf6>
 8006d30:	0038      	movs	r0, r7
 8006d32:	9904      	ldr	r1, [sp, #16]
 8006d34:	f001 fa2a 	bl	800818c <__mcmp>
 8006d38:	2800      	cmp	r0, #0
 8006d3a:	db21      	blt.n	8006d80 <quorem+0xe4>
 8006d3c:	0038      	movs	r0, r7
 8006d3e:	2600      	movs	r6, #0
 8006d40:	9b02      	ldr	r3, [sp, #8]
 8006d42:	9c04      	ldr	r4, [sp, #16]
 8006d44:	3301      	adds	r3, #1
 8006d46:	9302      	str	r3, [sp, #8]
 8006d48:	3014      	adds	r0, #20
 8006d4a:	3414      	adds	r4, #20
 8006d4c:	6803      	ldr	r3, [r0, #0]
 8006d4e:	cc02      	ldmia	r4!, {r1}
 8006d50:	b29d      	uxth	r5, r3
 8006d52:	19ad      	adds	r5, r5, r6
 8006d54:	b28a      	uxth	r2, r1
 8006d56:	1aaa      	subs	r2, r5, r2
 8006d58:	0c09      	lsrs	r1, r1, #16
 8006d5a:	0c1b      	lsrs	r3, r3, #16
 8006d5c:	1a5b      	subs	r3, r3, r1
 8006d5e:	1411      	asrs	r1, r2, #16
 8006d60:	185b      	adds	r3, r3, r1
 8006d62:	141e      	asrs	r6, r3, #16
 8006d64:	b292      	uxth	r2, r2
 8006d66:	041b      	lsls	r3, r3, #16
 8006d68:	4313      	orrs	r3, r2
 8006d6a:	c008      	stmia	r0!, {r3}
 8006d6c:	9b05      	ldr	r3, [sp, #20]
 8006d6e:	42a3      	cmp	r3, r4
 8006d70:	d2ec      	bcs.n	8006d4c <quorem+0xb0>
 8006d72:	9b01      	ldr	r3, [sp, #4]
 8006d74:	9a03      	ldr	r2, [sp, #12]
 8006d76:	009b      	lsls	r3, r3, #2
 8006d78:	18d3      	adds	r3, r2, r3
 8006d7a:	681a      	ldr	r2, [r3, #0]
 8006d7c:	2a00      	cmp	r2, #0
 8006d7e:	d015      	beq.n	8006dac <quorem+0x110>
 8006d80:	9802      	ldr	r0, [sp, #8]
 8006d82:	b009      	add	sp, #36	; 0x24
 8006d84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006d86:	6823      	ldr	r3, [r4, #0]
 8006d88:	2b00      	cmp	r3, #0
 8006d8a:	d106      	bne.n	8006d9a <quorem+0xfe>
 8006d8c:	9b01      	ldr	r3, [sp, #4]
 8006d8e:	3b01      	subs	r3, #1
 8006d90:	9301      	str	r3, [sp, #4]
 8006d92:	9b03      	ldr	r3, [sp, #12]
 8006d94:	3c04      	subs	r4, #4
 8006d96:	42a3      	cmp	r3, r4
 8006d98:	d3f5      	bcc.n	8006d86 <quorem+0xea>
 8006d9a:	9b01      	ldr	r3, [sp, #4]
 8006d9c:	613b      	str	r3, [r7, #16]
 8006d9e:	e7c7      	b.n	8006d30 <quorem+0x94>
 8006da0:	681a      	ldr	r2, [r3, #0]
 8006da2:	2a00      	cmp	r2, #0
 8006da4:	d106      	bne.n	8006db4 <quorem+0x118>
 8006da6:	9a01      	ldr	r2, [sp, #4]
 8006da8:	3a01      	subs	r2, #1
 8006daa:	9201      	str	r2, [sp, #4]
 8006dac:	9a03      	ldr	r2, [sp, #12]
 8006dae:	3b04      	subs	r3, #4
 8006db0:	429a      	cmp	r2, r3
 8006db2:	d3f5      	bcc.n	8006da0 <quorem+0x104>
 8006db4:	9b01      	ldr	r3, [sp, #4]
 8006db6:	613b      	str	r3, [r7, #16]
 8006db8:	e7e2      	b.n	8006d80 <quorem+0xe4>
	...

08006dbc <_dtoa_r>:
 8006dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006dbe:	0014      	movs	r4, r2
 8006dc0:	001d      	movs	r5, r3
 8006dc2:	69c6      	ldr	r6, [r0, #28]
 8006dc4:	b09d      	sub	sp, #116	; 0x74
 8006dc6:	9408      	str	r4, [sp, #32]
 8006dc8:	9509      	str	r5, [sp, #36]	; 0x24
 8006dca:	9f25      	ldr	r7, [sp, #148]	; 0x94
 8006dcc:	9004      	str	r0, [sp, #16]
 8006dce:	2e00      	cmp	r6, #0
 8006dd0:	d10f      	bne.n	8006df2 <_dtoa_r+0x36>
 8006dd2:	2010      	movs	r0, #16
 8006dd4:	f000 fe4a 	bl	8007a6c <malloc>
 8006dd8:	9b04      	ldr	r3, [sp, #16]
 8006dda:	1e02      	subs	r2, r0, #0
 8006ddc:	61d8      	str	r0, [r3, #28]
 8006dde:	d104      	bne.n	8006dea <_dtoa_r+0x2e>
 8006de0:	21ef      	movs	r1, #239	; 0xef
 8006de2:	4bc6      	ldr	r3, [pc, #792]	; (80070fc <_dtoa_r+0x340>)
 8006de4:	48c6      	ldr	r0, [pc, #792]	; (8007100 <_dtoa_r+0x344>)
 8006de6:	f002 fccd 	bl	8009784 <__assert_func>
 8006dea:	6046      	str	r6, [r0, #4]
 8006dec:	6086      	str	r6, [r0, #8]
 8006dee:	6006      	str	r6, [r0, #0]
 8006df0:	60c6      	str	r6, [r0, #12]
 8006df2:	9b04      	ldr	r3, [sp, #16]
 8006df4:	69db      	ldr	r3, [r3, #28]
 8006df6:	6819      	ldr	r1, [r3, #0]
 8006df8:	2900      	cmp	r1, #0
 8006dfa:	d00b      	beq.n	8006e14 <_dtoa_r+0x58>
 8006dfc:	685a      	ldr	r2, [r3, #4]
 8006dfe:	2301      	movs	r3, #1
 8006e00:	4093      	lsls	r3, r2
 8006e02:	604a      	str	r2, [r1, #4]
 8006e04:	608b      	str	r3, [r1, #8]
 8006e06:	9804      	ldr	r0, [sp, #16]
 8006e08:	f000 ff32 	bl	8007c70 <_Bfree>
 8006e0c:	2200      	movs	r2, #0
 8006e0e:	9b04      	ldr	r3, [sp, #16]
 8006e10:	69db      	ldr	r3, [r3, #28]
 8006e12:	601a      	str	r2, [r3, #0]
 8006e14:	2d00      	cmp	r5, #0
 8006e16:	da1e      	bge.n	8006e56 <_dtoa_r+0x9a>
 8006e18:	2301      	movs	r3, #1
 8006e1a:	603b      	str	r3, [r7, #0]
 8006e1c:	006b      	lsls	r3, r5, #1
 8006e1e:	085b      	lsrs	r3, r3, #1
 8006e20:	9309      	str	r3, [sp, #36]	; 0x24
 8006e22:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8006e24:	4bb7      	ldr	r3, [pc, #732]	; (8007104 <_dtoa_r+0x348>)
 8006e26:	4ab7      	ldr	r2, [pc, #732]	; (8007104 <_dtoa_r+0x348>)
 8006e28:	403b      	ands	r3, r7
 8006e2a:	4293      	cmp	r3, r2
 8006e2c:	d116      	bne.n	8006e5c <_dtoa_r+0xa0>
 8006e2e:	4bb6      	ldr	r3, [pc, #728]	; (8007108 <_dtoa_r+0x34c>)
 8006e30:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006e32:	6013      	str	r3, [r2, #0]
 8006e34:	033b      	lsls	r3, r7, #12
 8006e36:	0b1b      	lsrs	r3, r3, #12
 8006e38:	4323      	orrs	r3, r4
 8006e3a:	d101      	bne.n	8006e40 <_dtoa_r+0x84>
 8006e3c:	f000 fdb5 	bl	80079aa <_dtoa_r+0xbee>
 8006e40:	4bb2      	ldr	r3, [pc, #712]	; (800710c <_dtoa_r+0x350>)
 8006e42:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006e44:	9306      	str	r3, [sp, #24]
 8006e46:	2a00      	cmp	r2, #0
 8006e48:	d002      	beq.n	8006e50 <_dtoa_r+0x94>
 8006e4a:	4bb1      	ldr	r3, [pc, #708]	; (8007110 <_dtoa_r+0x354>)
 8006e4c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006e4e:	6013      	str	r3, [r2, #0]
 8006e50:	9806      	ldr	r0, [sp, #24]
 8006e52:	b01d      	add	sp, #116	; 0x74
 8006e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e56:	2300      	movs	r3, #0
 8006e58:	603b      	str	r3, [r7, #0]
 8006e5a:	e7e2      	b.n	8006e22 <_dtoa_r+0x66>
 8006e5c:	9a08      	ldr	r2, [sp, #32]
 8006e5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e60:	9210      	str	r2, [sp, #64]	; 0x40
 8006e62:	9311      	str	r3, [sp, #68]	; 0x44
 8006e64:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006e66:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006e68:	2200      	movs	r2, #0
 8006e6a:	2300      	movs	r3, #0
 8006e6c:	f7f9 faee 	bl	800044c <__aeabi_dcmpeq>
 8006e70:	1e06      	subs	r6, r0, #0
 8006e72:	d009      	beq.n	8006e88 <_dtoa_r+0xcc>
 8006e74:	2301      	movs	r3, #1
 8006e76:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006e78:	6013      	str	r3, [r2, #0]
 8006e7a:	4ba6      	ldr	r3, [pc, #664]	; (8007114 <_dtoa_r+0x358>)
 8006e7c:	9306      	str	r3, [sp, #24]
 8006e7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006e80:	2b00      	cmp	r3, #0
 8006e82:	d0e5      	beq.n	8006e50 <_dtoa_r+0x94>
 8006e84:	4ba4      	ldr	r3, [pc, #656]	; (8007118 <_dtoa_r+0x35c>)
 8006e86:	e7e1      	b.n	8006e4c <_dtoa_r+0x90>
 8006e88:	ab1a      	add	r3, sp, #104	; 0x68
 8006e8a:	9301      	str	r3, [sp, #4]
 8006e8c:	ab1b      	add	r3, sp, #108	; 0x6c
 8006e8e:	9300      	str	r3, [sp, #0]
 8006e90:	9804      	ldr	r0, [sp, #16]
 8006e92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006e94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006e96:	f001 fa95 	bl	80083c4 <__d2b>
 8006e9a:	007a      	lsls	r2, r7, #1
 8006e9c:	9005      	str	r0, [sp, #20]
 8006e9e:	0d52      	lsrs	r2, r2, #21
 8006ea0:	d100      	bne.n	8006ea4 <_dtoa_r+0xe8>
 8006ea2:	e07b      	b.n	8006f9c <_dtoa_r+0x1e0>
 8006ea4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006ea6:	9617      	str	r6, [sp, #92]	; 0x5c
 8006ea8:	0319      	lsls	r1, r3, #12
 8006eaa:	4b9c      	ldr	r3, [pc, #624]	; (800711c <_dtoa_r+0x360>)
 8006eac:	0b09      	lsrs	r1, r1, #12
 8006eae:	430b      	orrs	r3, r1
 8006eb0:	499b      	ldr	r1, [pc, #620]	; (8007120 <_dtoa_r+0x364>)
 8006eb2:	1857      	adds	r7, r2, r1
 8006eb4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006eb6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006eb8:	0019      	movs	r1, r3
 8006eba:	2200      	movs	r2, #0
 8006ebc:	4b99      	ldr	r3, [pc, #612]	; (8007124 <_dtoa_r+0x368>)
 8006ebe:	f7fb fd7d 	bl	80029bc <__aeabi_dsub>
 8006ec2:	4a99      	ldr	r2, [pc, #612]	; (8007128 <_dtoa_r+0x36c>)
 8006ec4:	4b99      	ldr	r3, [pc, #612]	; (800712c <_dtoa_r+0x370>)
 8006ec6:	f7fb fab7 	bl	8002438 <__aeabi_dmul>
 8006eca:	4a99      	ldr	r2, [pc, #612]	; (8007130 <_dtoa_r+0x374>)
 8006ecc:	4b99      	ldr	r3, [pc, #612]	; (8007134 <_dtoa_r+0x378>)
 8006ece:	f7fa fb59 	bl	8001584 <__aeabi_dadd>
 8006ed2:	0004      	movs	r4, r0
 8006ed4:	0038      	movs	r0, r7
 8006ed6:	000d      	movs	r5, r1
 8006ed8:	f7fc f946 	bl	8003168 <__aeabi_i2d>
 8006edc:	4a96      	ldr	r2, [pc, #600]	; (8007138 <_dtoa_r+0x37c>)
 8006ede:	4b97      	ldr	r3, [pc, #604]	; (800713c <_dtoa_r+0x380>)
 8006ee0:	f7fb faaa 	bl	8002438 <__aeabi_dmul>
 8006ee4:	0002      	movs	r2, r0
 8006ee6:	000b      	movs	r3, r1
 8006ee8:	0020      	movs	r0, r4
 8006eea:	0029      	movs	r1, r5
 8006eec:	f7fa fb4a 	bl	8001584 <__aeabi_dadd>
 8006ef0:	0004      	movs	r4, r0
 8006ef2:	000d      	movs	r5, r1
 8006ef4:	f7fc f902 	bl	80030fc <__aeabi_d2iz>
 8006ef8:	2200      	movs	r2, #0
 8006efa:	9003      	str	r0, [sp, #12]
 8006efc:	2300      	movs	r3, #0
 8006efe:	0020      	movs	r0, r4
 8006f00:	0029      	movs	r1, r5
 8006f02:	f7f9 faa9 	bl	8000458 <__aeabi_dcmplt>
 8006f06:	2800      	cmp	r0, #0
 8006f08:	d00b      	beq.n	8006f22 <_dtoa_r+0x166>
 8006f0a:	9803      	ldr	r0, [sp, #12]
 8006f0c:	f7fc f92c 	bl	8003168 <__aeabi_i2d>
 8006f10:	002b      	movs	r3, r5
 8006f12:	0022      	movs	r2, r4
 8006f14:	f7f9 fa9a 	bl	800044c <__aeabi_dcmpeq>
 8006f18:	4243      	negs	r3, r0
 8006f1a:	4158      	adcs	r0, r3
 8006f1c:	9b03      	ldr	r3, [sp, #12]
 8006f1e:	1a1b      	subs	r3, r3, r0
 8006f20:	9303      	str	r3, [sp, #12]
 8006f22:	2301      	movs	r3, #1
 8006f24:	9316      	str	r3, [sp, #88]	; 0x58
 8006f26:	9b03      	ldr	r3, [sp, #12]
 8006f28:	2b16      	cmp	r3, #22
 8006f2a:	d810      	bhi.n	8006f4e <_dtoa_r+0x192>
 8006f2c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006f2e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006f30:	9a03      	ldr	r2, [sp, #12]
 8006f32:	4b83      	ldr	r3, [pc, #524]	; (8007140 <_dtoa_r+0x384>)
 8006f34:	00d2      	lsls	r2, r2, #3
 8006f36:	189b      	adds	r3, r3, r2
 8006f38:	681a      	ldr	r2, [r3, #0]
 8006f3a:	685b      	ldr	r3, [r3, #4]
 8006f3c:	f7f9 fa8c 	bl	8000458 <__aeabi_dcmplt>
 8006f40:	2800      	cmp	r0, #0
 8006f42:	d047      	beq.n	8006fd4 <_dtoa_r+0x218>
 8006f44:	9b03      	ldr	r3, [sp, #12]
 8006f46:	3b01      	subs	r3, #1
 8006f48:	9303      	str	r3, [sp, #12]
 8006f4a:	2300      	movs	r3, #0
 8006f4c:	9316      	str	r3, [sp, #88]	; 0x58
 8006f4e:	2200      	movs	r2, #0
 8006f50:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006f52:	920a      	str	r2, [sp, #40]	; 0x28
 8006f54:	1bdb      	subs	r3, r3, r7
 8006f56:	1e5a      	subs	r2, r3, #1
 8006f58:	d53e      	bpl.n	8006fd8 <_dtoa_r+0x21c>
 8006f5a:	2201      	movs	r2, #1
 8006f5c:	1ad3      	subs	r3, r2, r3
 8006f5e:	930a      	str	r3, [sp, #40]	; 0x28
 8006f60:	2300      	movs	r3, #0
 8006f62:	930c      	str	r3, [sp, #48]	; 0x30
 8006f64:	9b03      	ldr	r3, [sp, #12]
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	db38      	blt.n	8006fdc <_dtoa_r+0x220>
 8006f6a:	9a03      	ldr	r2, [sp, #12]
 8006f6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006f6e:	4694      	mov	ip, r2
 8006f70:	4463      	add	r3, ip
 8006f72:	930c      	str	r3, [sp, #48]	; 0x30
 8006f74:	2300      	movs	r3, #0
 8006f76:	9213      	str	r2, [sp, #76]	; 0x4c
 8006f78:	930d      	str	r3, [sp, #52]	; 0x34
 8006f7a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006f7c:	2401      	movs	r4, #1
 8006f7e:	2b09      	cmp	r3, #9
 8006f80:	d867      	bhi.n	8007052 <_dtoa_r+0x296>
 8006f82:	2b05      	cmp	r3, #5
 8006f84:	dd02      	ble.n	8006f8c <_dtoa_r+0x1d0>
 8006f86:	2400      	movs	r4, #0
 8006f88:	3b04      	subs	r3, #4
 8006f8a:	9322      	str	r3, [sp, #136]	; 0x88
 8006f8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006f8e:	1e98      	subs	r0, r3, #2
 8006f90:	2803      	cmp	r0, #3
 8006f92:	d867      	bhi.n	8007064 <_dtoa_r+0x2a8>
 8006f94:	f7f9 f8c0 	bl	8000118 <__gnu_thumb1_case_uqi>
 8006f98:	5b383a2b 	.word	0x5b383a2b
 8006f9c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006f9e:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 8006fa0:	18f6      	adds	r6, r6, r3
 8006fa2:	4b68      	ldr	r3, [pc, #416]	; (8007144 <_dtoa_r+0x388>)
 8006fa4:	18f2      	adds	r2, r6, r3
 8006fa6:	2a20      	cmp	r2, #32
 8006fa8:	dd0f      	ble.n	8006fca <_dtoa_r+0x20e>
 8006faa:	2340      	movs	r3, #64	; 0x40
 8006fac:	1a9b      	subs	r3, r3, r2
 8006fae:	409f      	lsls	r7, r3
 8006fb0:	4b65      	ldr	r3, [pc, #404]	; (8007148 <_dtoa_r+0x38c>)
 8006fb2:	0038      	movs	r0, r7
 8006fb4:	18f3      	adds	r3, r6, r3
 8006fb6:	40dc      	lsrs	r4, r3
 8006fb8:	4320      	orrs	r0, r4
 8006fba:	f7fc f905 	bl	80031c8 <__aeabi_ui2d>
 8006fbe:	2201      	movs	r2, #1
 8006fc0:	4b62      	ldr	r3, [pc, #392]	; (800714c <_dtoa_r+0x390>)
 8006fc2:	1e77      	subs	r7, r6, #1
 8006fc4:	18cb      	adds	r3, r1, r3
 8006fc6:	9217      	str	r2, [sp, #92]	; 0x5c
 8006fc8:	e776      	b.n	8006eb8 <_dtoa_r+0xfc>
 8006fca:	2320      	movs	r3, #32
 8006fcc:	0020      	movs	r0, r4
 8006fce:	1a9b      	subs	r3, r3, r2
 8006fd0:	4098      	lsls	r0, r3
 8006fd2:	e7f2      	b.n	8006fba <_dtoa_r+0x1fe>
 8006fd4:	9016      	str	r0, [sp, #88]	; 0x58
 8006fd6:	e7ba      	b.n	8006f4e <_dtoa_r+0x192>
 8006fd8:	920c      	str	r2, [sp, #48]	; 0x30
 8006fda:	e7c3      	b.n	8006f64 <_dtoa_r+0x1a8>
 8006fdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006fde:	9a03      	ldr	r2, [sp, #12]
 8006fe0:	1a9b      	subs	r3, r3, r2
 8006fe2:	930a      	str	r3, [sp, #40]	; 0x28
 8006fe4:	4253      	negs	r3, r2
 8006fe6:	930d      	str	r3, [sp, #52]	; 0x34
 8006fe8:	2300      	movs	r3, #0
 8006fea:	9313      	str	r3, [sp, #76]	; 0x4c
 8006fec:	e7c5      	b.n	8006f7a <_dtoa_r+0x1be>
 8006fee:	2300      	movs	r3, #0
 8006ff0:	930f      	str	r3, [sp, #60]	; 0x3c
 8006ff2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006ff4:	930b      	str	r3, [sp, #44]	; 0x2c
 8006ff6:	9307      	str	r3, [sp, #28]
 8006ff8:	2b00      	cmp	r3, #0
 8006ffa:	dc13      	bgt.n	8007024 <_dtoa_r+0x268>
 8006ffc:	2301      	movs	r3, #1
 8006ffe:	001a      	movs	r2, r3
 8007000:	930b      	str	r3, [sp, #44]	; 0x2c
 8007002:	9307      	str	r3, [sp, #28]
 8007004:	9223      	str	r2, [sp, #140]	; 0x8c
 8007006:	e00d      	b.n	8007024 <_dtoa_r+0x268>
 8007008:	2301      	movs	r3, #1
 800700a:	e7f1      	b.n	8006ff0 <_dtoa_r+0x234>
 800700c:	2300      	movs	r3, #0
 800700e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8007010:	930f      	str	r3, [sp, #60]	; 0x3c
 8007012:	4694      	mov	ip, r2
 8007014:	9b03      	ldr	r3, [sp, #12]
 8007016:	4463      	add	r3, ip
 8007018:	930b      	str	r3, [sp, #44]	; 0x2c
 800701a:	3301      	adds	r3, #1
 800701c:	9307      	str	r3, [sp, #28]
 800701e:	2b00      	cmp	r3, #0
 8007020:	dc00      	bgt.n	8007024 <_dtoa_r+0x268>
 8007022:	2301      	movs	r3, #1
 8007024:	9a04      	ldr	r2, [sp, #16]
 8007026:	2100      	movs	r1, #0
 8007028:	69d0      	ldr	r0, [r2, #28]
 800702a:	2204      	movs	r2, #4
 800702c:	0015      	movs	r5, r2
 800702e:	3514      	adds	r5, #20
 8007030:	429d      	cmp	r5, r3
 8007032:	d91b      	bls.n	800706c <_dtoa_r+0x2b0>
 8007034:	6041      	str	r1, [r0, #4]
 8007036:	9804      	ldr	r0, [sp, #16]
 8007038:	f000 fdd6 	bl	8007be8 <_Balloc>
 800703c:	9006      	str	r0, [sp, #24]
 800703e:	2800      	cmp	r0, #0
 8007040:	d117      	bne.n	8007072 <_dtoa_r+0x2b6>
 8007042:	21b0      	movs	r1, #176	; 0xb0
 8007044:	4b42      	ldr	r3, [pc, #264]	; (8007150 <_dtoa_r+0x394>)
 8007046:	482e      	ldr	r0, [pc, #184]	; (8007100 <_dtoa_r+0x344>)
 8007048:	9a06      	ldr	r2, [sp, #24]
 800704a:	31ff      	adds	r1, #255	; 0xff
 800704c:	e6cb      	b.n	8006de6 <_dtoa_r+0x2a>
 800704e:	2301      	movs	r3, #1
 8007050:	e7dd      	b.n	800700e <_dtoa_r+0x252>
 8007052:	2300      	movs	r3, #0
 8007054:	940f      	str	r4, [sp, #60]	; 0x3c
 8007056:	9322      	str	r3, [sp, #136]	; 0x88
 8007058:	3b01      	subs	r3, #1
 800705a:	930b      	str	r3, [sp, #44]	; 0x2c
 800705c:	9307      	str	r3, [sp, #28]
 800705e:	2200      	movs	r2, #0
 8007060:	3313      	adds	r3, #19
 8007062:	e7cf      	b.n	8007004 <_dtoa_r+0x248>
 8007064:	2301      	movs	r3, #1
 8007066:	930f      	str	r3, [sp, #60]	; 0x3c
 8007068:	3b02      	subs	r3, #2
 800706a:	e7f6      	b.n	800705a <_dtoa_r+0x29e>
 800706c:	3101      	adds	r1, #1
 800706e:	0052      	lsls	r2, r2, #1
 8007070:	e7dc      	b.n	800702c <_dtoa_r+0x270>
 8007072:	9b04      	ldr	r3, [sp, #16]
 8007074:	9a06      	ldr	r2, [sp, #24]
 8007076:	69db      	ldr	r3, [r3, #28]
 8007078:	601a      	str	r2, [r3, #0]
 800707a:	9b07      	ldr	r3, [sp, #28]
 800707c:	2b0e      	cmp	r3, #14
 800707e:	d900      	bls.n	8007082 <_dtoa_r+0x2c6>
 8007080:	e0e5      	b.n	800724e <_dtoa_r+0x492>
 8007082:	2c00      	cmp	r4, #0
 8007084:	d100      	bne.n	8007088 <_dtoa_r+0x2cc>
 8007086:	e0e2      	b.n	800724e <_dtoa_r+0x492>
 8007088:	9b03      	ldr	r3, [sp, #12]
 800708a:	2b00      	cmp	r3, #0
 800708c:	dd64      	ble.n	8007158 <_dtoa_r+0x39c>
 800708e:	210f      	movs	r1, #15
 8007090:	9a03      	ldr	r2, [sp, #12]
 8007092:	4b2b      	ldr	r3, [pc, #172]	; (8007140 <_dtoa_r+0x384>)
 8007094:	400a      	ands	r2, r1
 8007096:	00d2      	lsls	r2, r2, #3
 8007098:	189b      	adds	r3, r3, r2
 800709a:	681e      	ldr	r6, [r3, #0]
 800709c:	685f      	ldr	r7, [r3, #4]
 800709e:	9b03      	ldr	r3, [sp, #12]
 80070a0:	2402      	movs	r4, #2
 80070a2:	111d      	asrs	r5, r3, #4
 80070a4:	05db      	lsls	r3, r3, #23
 80070a6:	d50a      	bpl.n	80070be <_dtoa_r+0x302>
 80070a8:	4b2a      	ldr	r3, [pc, #168]	; (8007154 <_dtoa_r+0x398>)
 80070aa:	400d      	ands	r5, r1
 80070ac:	6a1a      	ldr	r2, [r3, #32]
 80070ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80070b0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80070b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80070b4:	f7fa fdc6 	bl	8001c44 <__aeabi_ddiv>
 80070b8:	9008      	str	r0, [sp, #32]
 80070ba:	9109      	str	r1, [sp, #36]	; 0x24
 80070bc:	3401      	adds	r4, #1
 80070be:	4b25      	ldr	r3, [pc, #148]	; (8007154 <_dtoa_r+0x398>)
 80070c0:	930e      	str	r3, [sp, #56]	; 0x38
 80070c2:	2d00      	cmp	r5, #0
 80070c4:	d108      	bne.n	80070d8 <_dtoa_r+0x31c>
 80070c6:	9808      	ldr	r0, [sp, #32]
 80070c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80070ca:	0032      	movs	r2, r6
 80070cc:	003b      	movs	r3, r7
 80070ce:	f7fa fdb9 	bl	8001c44 <__aeabi_ddiv>
 80070d2:	9008      	str	r0, [sp, #32]
 80070d4:	9109      	str	r1, [sp, #36]	; 0x24
 80070d6:	e05a      	b.n	800718e <_dtoa_r+0x3d2>
 80070d8:	2301      	movs	r3, #1
 80070da:	421d      	tst	r5, r3
 80070dc:	d009      	beq.n	80070f2 <_dtoa_r+0x336>
 80070de:	18e4      	adds	r4, r4, r3
 80070e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80070e2:	0030      	movs	r0, r6
 80070e4:	681a      	ldr	r2, [r3, #0]
 80070e6:	685b      	ldr	r3, [r3, #4]
 80070e8:	0039      	movs	r1, r7
 80070ea:	f7fb f9a5 	bl	8002438 <__aeabi_dmul>
 80070ee:	0006      	movs	r6, r0
 80070f0:	000f      	movs	r7, r1
 80070f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80070f4:	106d      	asrs	r5, r5, #1
 80070f6:	3308      	adds	r3, #8
 80070f8:	e7e2      	b.n	80070c0 <_dtoa_r+0x304>
 80070fa:	46c0      	nop			; (mov r8, r8)
 80070fc:	0800a65f 	.word	0x0800a65f
 8007100:	0800a676 	.word	0x0800a676
 8007104:	7ff00000 	.word	0x7ff00000
 8007108:	0000270f 	.word	0x0000270f
 800710c:	0800a65b 	.word	0x0800a65b
 8007110:	0800a65e 	.word	0x0800a65e
 8007114:	0800a629 	.word	0x0800a629
 8007118:	0800a62a 	.word	0x0800a62a
 800711c:	3ff00000 	.word	0x3ff00000
 8007120:	fffffc01 	.word	0xfffffc01
 8007124:	3ff80000 	.word	0x3ff80000
 8007128:	636f4361 	.word	0x636f4361
 800712c:	3fd287a7 	.word	0x3fd287a7
 8007130:	8b60c8b3 	.word	0x8b60c8b3
 8007134:	3fc68a28 	.word	0x3fc68a28
 8007138:	509f79fb 	.word	0x509f79fb
 800713c:	3fd34413 	.word	0x3fd34413
 8007140:	0800a760 	.word	0x0800a760
 8007144:	00000432 	.word	0x00000432
 8007148:	00000412 	.word	0x00000412
 800714c:	fe100000 	.word	0xfe100000
 8007150:	0800a6ce 	.word	0x0800a6ce
 8007154:	0800a738 	.word	0x0800a738
 8007158:	9b03      	ldr	r3, [sp, #12]
 800715a:	2402      	movs	r4, #2
 800715c:	2b00      	cmp	r3, #0
 800715e:	d016      	beq.n	800718e <_dtoa_r+0x3d2>
 8007160:	9810      	ldr	r0, [sp, #64]	; 0x40
 8007162:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007164:	220f      	movs	r2, #15
 8007166:	425d      	negs	r5, r3
 8007168:	402a      	ands	r2, r5
 800716a:	4bdd      	ldr	r3, [pc, #884]	; (80074e0 <_dtoa_r+0x724>)
 800716c:	00d2      	lsls	r2, r2, #3
 800716e:	189b      	adds	r3, r3, r2
 8007170:	681a      	ldr	r2, [r3, #0]
 8007172:	685b      	ldr	r3, [r3, #4]
 8007174:	f7fb f960 	bl	8002438 <__aeabi_dmul>
 8007178:	2701      	movs	r7, #1
 800717a:	2300      	movs	r3, #0
 800717c:	9008      	str	r0, [sp, #32]
 800717e:	9109      	str	r1, [sp, #36]	; 0x24
 8007180:	4ed8      	ldr	r6, [pc, #864]	; (80074e4 <_dtoa_r+0x728>)
 8007182:	112d      	asrs	r5, r5, #4
 8007184:	2d00      	cmp	r5, #0
 8007186:	d000      	beq.n	800718a <_dtoa_r+0x3ce>
 8007188:	e091      	b.n	80072ae <_dtoa_r+0x4f2>
 800718a:	2b00      	cmp	r3, #0
 800718c:	d1a1      	bne.n	80070d2 <_dtoa_r+0x316>
 800718e:	9e08      	ldr	r6, [sp, #32]
 8007190:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8007192:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8007194:	2b00      	cmp	r3, #0
 8007196:	d100      	bne.n	800719a <_dtoa_r+0x3de>
 8007198:	e094      	b.n	80072c4 <_dtoa_r+0x508>
 800719a:	2200      	movs	r2, #0
 800719c:	0030      	movs	r0, r6
 800719e:	0039      	movs	r1, r7
 80071a0:	4bd1      	ldr	r3, [pc, #836]	; (80074e8 <_dtoa_r+0x72c>)
 80071a2:	f7f9 f959 	bl	8000458 <__aeabi_dcmplt>
 80071a6:	2800      	cmp	r0, #0
 80071a8:	d100      	bne.n	80071ac <_dtoa_r+0x3f0>
 80071aa:	e08b      	b.n	80072c4 <_dtoa_r+0x508>
 80071ac:	9b07      	ldr	r3, [sp, #28]
 80071ae:	2b00      	cmp	r3, #0
 80071b0:	d100      	bne.n	80071b4 <_dtoa_r+0x3f8>
 80071b2:	e087      	b.n	80072c4 <_dtoa_r+0x508>
 80071b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80071b6:	2b00      	cmp	r3, #0
 80071b8:	dd45      	ble.n	8007246 <_dtoa_r+0x48a>
 80071ba:	9b03      	ldr	r3, [sp, #12]
 80071bc:	2200      	movs	r2, #0
 80071be:	3b01      	subs	r3, #1
 80071c0:	930e      	str	r3, [sp, #56]	; 0x38
 80071c2:	0030      	movs	r0, r6
 80071c4:	4bc9      	ldr	r3, [pc, #804]	; (80074ec <_dtoa_r+0x730>)
 80071c6:	0039      	movs	r1, r7
 80071c8:	f7fb f936 	bl	8002438 <__aeabi_dmul>
 80071cc:	9008      	str	r0, [sp, #32]
 80071ce:	9109      	str	r1, [sp, #36]	; 0x24
 80071d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80071d2:	3401      	adds	r4, #1
 80071d4:	0020      	movs	r0, r4
 80071d6:	9e08      	ldr	r6, [sp, #32]
 80071d8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80071da:	9312      	str	r3, [sp, #72]	; 0x48
 80071dc:	f7fb ffc4 	bl	8003168 <__aeabi_i2d>
 80071e0:	0032      	movs	r2, r6
 80071e2:	003b      	movs	r3, r7
 80071e4:	f7fb f928 	bl	8002438 <__aeabi_dmul>
 80071e8:	2200      	movs	r2, #0
 80071ea:	4bc1      	ldr	r3, [pc, #772]	; (80074f0 <_dtoa_r+0x734>)
 80071ec:	f7fa f9ca 	bl	8001584 <__aeabi_dadd>
 80071f0:	4ac0      	ldr	r2, [pc, #768]	; (80074f4 <_dtoa_r+0x738>)
 80071f2:	9014      	str	r0, [sp, #80]	; 0x50
 80071f4:	9115      	str	r1, [sp, #84]	; 0x54
 80071f6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80071f8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80071fa:	4694      	mov	ip, r2
 80071fc:	9308      	str	r3, [sp, #32]
 80071fe:	9409      	str	r4, [sp, #36]	; 0x24
 8007200:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007202:	4463      	add	r3, ip
 8007204:	9318      	str	r3, [sp, #96]	; 0x60
 8007206:	9309      	str	r3, [sp, #36]	; 0x24
 8007208:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800720a:	2b00      	cmp	r3, #0
 800720c:	d15e      	bne.n	80072cc <_dtoa_r+0x510>
 800720e:	2200      	movs	r2, #0
 8007210:	4bb9      	ldr	r3, [pc, #740]	; (80074f8 <_dtoa_r+0x73c>)
 8007212:	0030      	movs	r0, r6
 8007214:	0039      	movs	r1, r7
 8007216:	f7fb fbd1 	bl	80029bc <__aeabi_dsub>
 800721a:	9a08      	ldr	r2, [sp, #32]
 800721c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800721e:	0004      	movs	r4, r0
 8007220:	000d      	movs	r5, r1
 8007222:	f7f9 f92d 	bl	8000480 <__aeabi_dcmpgt>
 8007226:	2800      	cmp	r0, #0
 8007228:	d000      	beq.n	800722c <_dtoa_r+0x470>
 800722a:	e2b3      	b.n	8007794 <_dtoa_r+0x9d8>
 800722c:	48b3      	ldr	r0, [pc, #716]	; (80074fc <_dtoa_r+0x740>)
 800722e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8007230:	4684      	mov	ip, r0
 8007232:	4461      	add	r1, ip
 8007234:	000b      	movs	r3, r1
 8007236:	0020      	movs	r0, r4
 8007238:	0029      	movs	r1, r5
 800723a:	9a08      	ldr	r2, [sp, #32]
 800723c:	f7f9 f90c 	bl	8000458 <__aeabi_dcmplt>
 8007240:	2800      	cmp	r0, #0
 8007242:	d000      	beq.n	8007246 <_dtoa_r+0x48a>
 8007244:	e2a3      	b.n	800778e <_dtoa_r+0x9d2>
 8007246:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007248:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800724a:	9308      	str	r3, [sp, #32]
 800724c:	9409      	str	r4, [sp, #36]	; 0x24
 800724e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007250:	2b00      	cmp	r3, #0
 8007252:	da00      	bge.n	8007256 <_dtoa_r+0x49a>
 8007254:	e179      	b.n	800754a <_dtoa_r+0x78e>
 8007256:	9a03      	ldr	r2, [sp, #12]
 8007258:	2a0e      	cmp	r2, #14
 800725a:	dd00      	ble.n	800725e <_dtoa_r+0x4a2>
 800725c:	e175      	b.n	800754a <_dtoa_r+0x78e>
 800725e:	4ba0      	ldr	r3, [pc, #640]	; (80074e0 <_dtoa_r+0x724>)
 8007260:	00d2      	lsls	r2, r2, #3
 8007262:	189b      	adds	r3, r3, r2
 8007264:	681e      	ldr	r6, [r3, #0]
 8007266:	685f      	ldr	r7, [r3, #4]
 8007268:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800726a:	2b00      	cmp	r3, #0
 800726c:	db00      	blt.n	8007270 <_dtoa_r+0x4b4>
 800726e:	e0e5      	b.n	800743c <_dtoa_r+0x680>
 8007270:	9b07      	ldr	r3, [sp, #28]
 8007272:	2b00      	cmp	r3, #0
 8007274:	dd00      	ble.n	8007278 <_dtoa_r+0x4bc>
 8007276:	e0e1      	b.n	800743c <_dtoa_r+0x680>
 8007278:	d000      	beq.n	800727c <_dtoa_r+0x4c0>
 800727a:	e288      	b.n	800778e <_dtoa_r+0x9d2>
 800727c:	2200      	movs	r2, #0
 800727e:	0030      	movs	r0, r6
 8007280:	0039      	movs	r1, r7
 8007282:	4b9d      	ldr	r3, [pc, #628]	; (80074f8 <_dtoa_r+0x73c>)
 8007284:	f7fb f8d8 	bl	8002438 <__aeabi_dmul>
 8007288:	9a08      	ldr	r2, [sp, #32]
 800728a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800728c:	f7f9 f902 	bl	8000494 <__aeabi_dcmpge>
 8007290:	9e07      	ldr	r6, [sp, #28]
 8007292:	0037      	movs	r7, r6
 8007294:	2800      	cmp	r0, #0
 8007296:	d000      	beq.n	800729a <_dtoa_r+0x4de>
 8007298:	e25f      	b.n	800775a <_dtoa_r+0x99e>
 800729a:	9b06      	ldr	r3, [sp, #24]
 800729c:	9a06      	ldr	r2, [sp, #24]
 800729e:	3301      	adds	r3, #1
 80072a0:	9308      	str	r3, [sp, #32]
 80072a2:	2331      	movs	r3, #49	; 0x31
 80072a4:	7013      	strb	r3, [r2, #0]
 80072a6:	9b03      	ldr	r3, [sp, #12]
 80072a8:	3301      	adds	r3, #1
 80072aa:	9303      	str	r3, [sp, #12]
 80072ac:	e25a      	b.n	8007764 <_dtoa_r+0x9a8>
 80072ae:	423d      	tst	r5, r7
 80072b0:	d005      	beq.n	80072be <_dtoa_r+0x502>
 80072b2:	6832      	ldr	r2, [r6, #0]
 80072b4:	6873      	ldr	r3, [r6, #4]
 80072b6:	f7fb f8bf 	bl	8002438 <__aeabi_dmul>
 80072ba:	003b      	movs	r3, r7
 80072bc:	3401      	adds	r4, #1
 80072be:	106d      	asrs	r5, r5, #1
 80072c0:	3608      	adds	r6, #8
 80072c2:	e75f      	b.n	8007184 <_dtoa_r+0x3c8>
 80072c4:	9b03      	ldr	r3, [sp, #12]
 80072c6:	930e      	str	r3, [sp, #56]	; 0x38
 80072c8:	9b07      	ldr	r3, [sp, #28]
 80072ca:	e783      	b.n	80071d4 <_dtoa_r+0x418>
 80072cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80072ce:	4b84      	ldr	r3, [pc, #528]	; (80074e0 <_dtoa_r+0x724>)
 80072d0:	3a01      	subs	r2, #1
 80072d2:	00d2      	lsls	r2, r2, #3
 80072d4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80072d6:	189b      	adds	r3, r3, r2
 80072d8:	9c08      	ldr	r4, [sp, #32]
 80072da:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80072dc:	681a      	ldr	r2, [r3, #0]
 80072de:	685b      	ldr	r3, [r3, #4]
 80072e0:	2900      	cmp	r1, #0
 80072e2:	d051      	beq.n	8007388 <_dtoa_r+0x5cc>
 80072e4:	2000      	movs	r0, #0
 80072e6:	4986      	ldr	r1, [pc, #536]	; (8007500 <_dtoa_r+0x744>)
 80072e8:	f7fa fcac 	bl	8001c44 <__aeabi_ddiv>
 80072ec:	0022      	movs	r2, r4
 80072ee:	002b      	movs	r3, r5
 80072f0:	f7fb fb64 	bl	80029bc <__aeabi_dsub>
 80072f4:	9a06      	ldr	r2, [sp, #24]
 80072f6:	0004      	movs	r4, r0
 80072f8:	4694      	mov	ip, r2
 80072fa:	000d      	movs	r5, r1
 80072fc:	9b06      	ldr	r3, [sp, #24]
 80072fe:	9314      	str	r3, [sp, #80]	; 0x50
 8007300:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007302:	4463      	add	r3, ip
 8007304:	9318      	str	r3, [sp, #96]	; 0x60
 8007306:	0039      	movs	r1, r7
 8007308:	0030      	movs	r0, r6
 800730a:	f7fb fef7 	bl	80030fc <__aeabi_d2iz>
 800730e:	9012      	str	r0, [sp, #72]	; 0x48
 8007310:	f7fb ff2a 	bl	8003168 <__aeabi_i2d>
 8007314:	0002      	movs	r2, r0
 8007316:	000b      	movs	r3, r1
 8007318:	0030      	movs	r0, r6
 800731a:	0039      	movs	r1, r7
 800731c:	f7fb fb4e 	bl	80029bc <__aeabi_dsub>
 8007320:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007322:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007324:	3301      	adds	r3, #1
 8007326:	9308      	str	r3, [sp, #32]
 8007328:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800732a:	0006      	movs	r6, r0
 800732c:	3330      	adds	r3, #48	; 0x30
 800732e:	7013      	strb	r3, [r2, #0]
 8007330:	0022      	movs	r2, r4
 8007332:	002b      	movs	r3, r5
 8007334:	000f      	movs	r7, r1
 8007336:	f7f9 f88f 	bl	8000458 <__aeabi_dcmplt>
 800733a:	2800      	cmp	r0, #0
 800733c:	d174      	bne.n	8007428 <_dtoa_r+0x66c>
 800733e:	0032      	movs	r2, r6
 8007340:	003b      	movs	r3, r7
 8007342:	2000      	movs	r0, #0
 8007344:	4968      	ldr	r1, [pc, #416]	; (80074e8 <_dtoa_r+0x72c>)
 8007346:	f7fb fb39 	bl	80029bc <__aeabi_dsub>
 800734a:	0022      	movs	r2, r4
 800734c:	002b      	movs	r3, r5
 800734e:	f7f9 f883 	bl	8000458 <__aeabi_dcmplt>
 8007352:	2800      	cmp	r0, #0
 8007354:	d000      	beq.n	8007358 <_dtoa_r+0x59c>
 8007356:	e0d7      	b.n	8007508 <_dtoa_r+0x74c>
 8007358:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800735a:	9a08      	ldr	r2, [sp, #32]
 800735c:	4293      	cmp	r3, r2
 800735e:	d100      	bne.n	8007362 <_dtoa_r+0x5a6>
 8007360:	e771      	b.n	8007246 <_dtoa_r+0x48a>
 8007362:	2200      	movs	r2, #0
 8007364:	0020      	movs	r0, r4
 8007366:	0029      	movs	r1, r5
 8007368:	4b60      	ldr	r3, [pc, #384]	; (80074ec <_dtoa_r+0x730>)
 800736a:	f7fb f865 	bl	8002438 <__aeabi_dmul>
 800736e:	4b5f      	ldr	r3, [pc, #380]	; (80074ec <_dtoa_r+0x730>)
 8007370:	0004      	movs	r4, r0
 8007372:	000d      	movs	r5, r1
 8007374:	0030      	movs	r0, r6
 8007376:	0039      	movs	r1, r7
 8007378:	2200      	movs	r2, #0
 800737a:	f7fb f85d 	bl	8002438 <__aeabi_dmul>
 800737e:	9b08      	ldr	r3, [sp, #32]
 8007380:	0006      	movs	r6, r0
 8007382:	000f      	movs	r7, r1
 8007384:	9314      	str	r3, [sp, #80]	; 0x50
 8007386:	e7be      	b.n	8007306 <_dtoa_r+0x54a>
 8007388:	0020      	movs	r0, r4
 800738a:	0029      	movs	r1, r5
 800738c:	f7fb f854 	bl	8002438 <__aeabi_dmul>
 8007390:	9a06      	ldr	r2, [sp, #24]
 8007392:	9b06      	ldr	r3, [sp, #24]
 8007394:	4694      	mov	ip, r2
 8007396:	9308      	str	r3, [sp, #32]
 8007398:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800739a:	9014      	str	r0, [sp, #80]	; 0x50
 800739c:	9115      	str	r1, [sp, #84]	; 0x54
 800739e:	4463      	add	r3, ip
 80073a0:	9319      	str	r3, [sp, #100]	; 0x64
 80073a2:	0030      	movs	r0, r6
 80073a4:	0039      	movs	r1, r7
 80073a6:	f7fb fea9 	bl	80030fc <__aeabi_d2iz>
 80073aa:	9018      	str	r0, [sp, #96]	; 0x60
 80073ac:	f7fb fedc 	bl	8003168 <__aeabi_i2d>
 80073b0:	0002      	movs	r2, r0
 80073b2:	000b      	movs	r3, r1
 80073b4:	0030      	movs	r0, r6
 80073b6:	0039      	movs	r1, r7
 80073b8:	f7fb fb00 	bl	80029bc <__aeabi_dsub>
 80073bc:	9e18      	ldr	r6, [sp, #96]	; 0x60
 80073be:	9b08      	ldr	r3, [sp, #32]
 80073c0:	3630      	adds	r6, #48	; 0x30
 80073c2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80073c4:	701e      	strb	r6, [r3, #0]
 80073c6:	3301      	adds	r3, #1
 80073c8:	0004      	movs	r4, r0
 80073ca:	000d      	movs	r5, r1
 80073cc:	9308      	str	r3, [sp, #32]
 80073ce:	4293      	cmp	r3, r2
 80073d0:	d12d      	bne.n	800742e <_dtoa_r+0x672>
 80073d2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80073d4:	9915      	ldr	r1, [sp, #84]	; 0x54
 80073d6:	9a06      	ldr	r2, [sp, #24]
 80073d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80073da:	4694      	mov	ip, r2
 80073dc:	4463      	add	r3, ip
 80073de:	2200      	movs	r2, #0
 80073e0:	9308      	str	r3, [sp, #32]
 80073e2:	4b47      	ldr	r3, [pc, #284]	; (8007500 <_dtoa_r+0x744>)
 80073e4:	f7fa f8ce 	bl	8001584 <__aeabi_dadd>
 80073e8:	0002      	movs	r2, r0
 80073ea:	000b      	movs	r3, r1
 80073ec:	0020      	movs	r0, r4
 80073ee:	0029      	movs	r1, r5
 80073f0:	f7f9 f846 	bl	8000480 <__aeabi_dcmpgt>
 80073f4:	2800      	cmp	r0, #0
 80073f6:	d000      	beq.n	80073fa <_dtoa_r+0x63e>
 80073f8:	e086      	b.n	8007508 <_dtoa_r+0x74c>
 80073fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80073fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80073fe:	2000      	movs	r0, #0
 8007400:	493f      	ldr	r1, [pc, #252]	; (8007500 <_dtoa_r+0x744>)
 8007402:	f7fb fadb 	bl	80029bc <__aeabi_dsub>
 8007406:	0002      	movs	r2, r0
 8007408:	000b      	movs	r3, r1
 800740a:	0020      	movs	r0, r4
 800740c:	0029      	movs	r1, r5
 800740e:	f7f9 f823 	bl	8000458 <__aeabi_dcmplt>
 8007412:	2800      	cmp	r0, #0
 8007414:	d100      	bne.n	8007418 <_dtoa_r+0x65c>
 8007416:	e716      	b.n	8007246 <_dtoa_r+0x48a>
 8007418:	9b08      	ldr	r3, [sp, #32]
 800741a:	001a      	movs	r2, r3
 800741c:	3a01      	subs	r2, #1
 800741e:	9208      	str	r2, [sp, #32]
 8007420:	7812      	ldrb	r2, [r2, #0]
 8007422:	2a30      	cmp	r2, #48	; 0x30
 8007424:	d0f8      	beq.n	8007418 <_dtoa_r+0x65c>
 8007426:	9308      	str	r3, [sp, #32]
 8007428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800742a:	9303      	str	r3, [sp, #12]
 800742c:	e046      	b.n	80074bc <_dtoa_r+0x700>
 800742e:	2200      	movs	r2, #0
 8007430:	4b2e      	ldr	r3, [pc, #184]	; (80074ec <_dtoa_r+0x730>)
 8007432:	f7fb f801 	bl	8002438 <__aeabi_dmul>
 8007436:	0006      	movs	r6, r0
 8007438:	000f      	movs	r7, r1
 800743a:	e7b2      	b.n	80073a2 <_dtoa_r+0x5e6>
 800743c:	9b06      	ldr	r3, [sp, #24]
 800743e:	9a06      	ldr	r2, [sp, #24]
 8007440:	930a      	str	r3, [sp, #40]	; 0x28
 8007442:	9b07      	ldr	r3, [sp, #28]
 8007444:	9c08      	ldr	r4, [sp, #32]
 8007446:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007448:	3b01      	subs	r3, #1
 800744a:	189b      	adds	r3, r3, r2
 800744c:	930b      	str	r3, [sp, #44]	; 0x2c
 800744e:	0032      	movs	r2, r6
 8007450:	003b      	movs	r3, r7
 8007452:	0020      	movs	r0, r4
 8007454:	0029      	movs	r1, r5
 8007456:	f7fa fbf5 	bl	8001c44 <__aeabi_ddiv>
 800745a:	f7fb fe4f 	bl	80030fc <__aeabi_d2iz>
 800745e:	9007      	str	r0, [sp, #28]
 8007460:	f7fb fe82 	bl	8003168 <__aeabi_i2d>
 8007464:	0032      	movs	r2, r6
 8007466:	003b      	movs	r3, r7
 8007468:	f7fa ffe6 	bl	8002438 <__aeabi_dmul>
 800746c:	0002      	movs	r2, r0
 800746e:	000b      	movs	r3, r1
 8007470:	0020      	movs	r0, r4
 8007472:	0029      	movs	r1, r5
 8007474:	f7fb faa2 	bl	80029bc <__aeabi_dsub>
 8007478:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800747a:	001a      	movs	r2, r3
 800747c:	3201      	adds	r2, #1
 800747e:	920a      	str	r2, [sp, #40]	; 0x28
 8007480:	9208      	str	r2, [sp, #32]
 8007482:	9a07      	ldr	r2, [sp, #28]
 8007484:	3230      	adds	r2, #48	; 0x30
 8007486:	701a      	strb	r2, [r3, #0]
 8007488:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800748a:	429a      	cmp	r2, r3
 800748c:	d14f      	bne.n	800752e <_dtoa_r+0x772>
 800748e:	0002      	movs	r2, r0
 8007490:	000b      	movs	r3, r1
 8007492:	f7fa f877 	bl	8001584 <__aeabi_dadd>
 8007496:	0032      	movs	r2, r6
 8007498:	003b      	movs	r3, r7
 800749a:	0004      	movs	r4, r0
 800749c:	000d      	movs	r5, r1
 800749e:	f7f8 ffef 	bl	8000480 <__aeabi_dcmpgt>
 80074a2:	2800      	cmp	r0, #0
 80074a4:	d12e      	bne.n	8007504 <_dtoa_r+0x748>
 80074a6:	0032      	movs	r2, r6
 80074a8:	003b      	movs	r3, r7
 80074aa:	0020      	movs	r0, r4
 80074ac:	0029      	movs	r1, r5
 80074ae:	f7f8 ffcd 	bl	800044c <__aeabi_dcmpeq>
 80074b2:	2800      	cmp	r0, #0
 80074b4:	d002      	beq.n	80074bc <_dtoa_r+0x700>
 80074b6:	9b07      	ldr	r3, [sp, #28]
 80074b8:	07de      	lsls	r6, r3, #31
 80074ba:	d423      	bmi.n	8007504 <_dtoa_r+0x748>
 80074bc:	9905      	ldr	r1, [sp, #20]
 80074be:	9804      	ldr	r0, [sp, #16]
 80074c0:	f000 fbd6 	bl	8007c70 <_Bfree>
 80074c4:	2300      	movs	r3, #0
 80074c6:	9a08      	ldr	r2, [sp, #32]
 80074c8:	7013      	strb	r3, [r2, #0]
 80074ca:	9b03      	ldr	r3, [sp, #12]
 80074cc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80074ce:	3301      	adds	r3, #1
 80074d0:	6013      	str	r3, [r2, #0]
 80074d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d100      	bne.n	80074da <_dtoa_r+0x71e>
 80074d8:	e4ba      	b.n	8006e50 <_dtoa_r+0x94>
 80074da:	9a08      	ldr	r2, [sp, #32]
 80074dc:	601a      	str	r2, [r3, #0]
 80074de:	e4b7      	b.n	8006e50 <_dtoa_r+0x94>
 80074e0:	0800a760 	.word	0x0800a760
 80074e4:	0800a738 	.word	0x0800a738
 80074e8:	3ff00000 	.word	0x3ff00000
 80074ec:	40240000 	.word	0x40240000
 80074f0:	401c0000 	.word	0x401c0000
 80074f4:	fcc00000 	.word	0xfcc00000
 80074f8:	40140000 	.word	0x40140000
 80074fc:	7cc00000 	.word	0x7cc00000
 8007500:	3fe00000 	.word	0x3fe00000
 8007504:	9b03      	ldr	r3, [sp, #12]
 8007506:	930e      	str	r3, [sp, #56]	; 0x38
 8007508:	9b08      	ldr	r3, [sp, #32]
 800750a:	9308      	str	r3, [sp, #32]
 800750c:	3b01      	subs	r3, #1
 800750e:	781a      	ldrb	r2, [r3, #0]
 8007510:	2a39      	cmp	r2, #57	; 0x39
 8007512:	d108      	bne.n	8007526 <_dtoa_r+0x76a>
 8007514:	9a06      	ldr	r2, [sp, #24]
 8007516:	429a      	cmp	r2, r3
 8007518:	d1f7      	bne.n	800750a <_dtoa_r+0x74e>
 800751a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800751c:	9906      	ldr	r1, [sp, #24]
 800751e:	3201      	adds	r2, #1
 8007520:	920e      	str	r2, [sp, #56]	; 0x38
 8007522:	2230      	movs	r2, #48	; 0x30
 8007524:	700a      	strb	r2, [r1, #0]
 8007526:	781a      	ldrb	r2, [r3, #0]
 8007528:	3201      	adds	r2, #1
 800752a:	701a      	strb	r2, [r3, #0]
 800752c:	e77c      	b.n	8007428 <_dtoa_r+0x66c>
 800752e:	2200      	movs	r2, #0
 8007530:	4ba9      	ldr	r3, [pc, #676]	; (80077d8 <_dtoa_r+0xa1c>)
 8007532:	f7fa ff81 	bl	8002438 <__aeabi_dmul>
 8007536:	2200      	movs	r2, #0
 8007538:	2300      	movs	r3, #0
 800753a:	0004      	movs	r4, r0
 800753c:	000d      	movs	r5, r1
 800753e:	f7f8 ff85 	bl	800044c <__aeabi_dcmpeq>
 8007542:	2800      	cmp	r0, #0
 8007544:	d100      	bne.n	8007548 <_dtoa_r+0x78c>
 8007546:	e782      	b.n	800744e <_dtoa_r+0x692>
 8007548:	e7b8      	b.n	80074bc <_dtoa_r+0x700>
 800754a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800754c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800754e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007550:	2f00      	cmp	r7, #0
 8007552:	d012      	beq.n	800757a <_dtoa_r+0x7be>
 8007554:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8007556:	2a01      	cmp	r2, #1
 8007558:	dc6e      	bgt.n	8007638 <_dtoa_r+0x87c>
 800755a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800755c:	2a00      	cmp	r2, #0
 800755e:	d065      	beq.n	800762c <_dtoa_r+0x870>
 8007560:	4a9e      	ldr	r2, [pc, #632]	; (80077dc <_dtoa_r+0xa20>)
 8007562:	189b      	adds	r3, r3, r2
 8007564:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007566:	2101      	movs	r1, #1
 8007568:	18d2      	adds	r2, r2, r3
 800756a:	920a      	str	r2, [sp, #40]	; 0x28
 800756c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800756e:	9804      	ldr	r0, [sp, #16]
 8007570:	18d3      	adds	r3, r2, r3
 8007572:	930c      	str	r3, [sp, #48]	; 0x30
 8007574:	f000 fc78 	bl	8007e68 <__i2b>
 8007578:	0007      	movs	r7, r0
 800757a:	2c00      	cmp	r4, #0
 800757c:	d00e      	beq.n	800759c <_dtoa_r+0x7e0>
 800757e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007580:	2b00      	cmp	r3, #0
 8007582:	dd0b      	ble.n	800759c <_dtoa_r+0x7e0>
 8007584:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007586:	0023      	movs	r3, r4
 8007588:	4294      	cmp	r4, r2
 800758a:	dd00      	ble.n	800758e <_dtoa_r+0x7d2>
 800758c:	0013      	movs	r3, r2
 800758e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007590:	1ae4      	subs	r4, r4, r3
 8007592:	1ad2      	subs	r2, r2, r3
 8007594:	920a      	str	r2, [sp, #40]	; 0x28
 8007596:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007598:	1ad3      	subs	r3, r2, r3
 800759a:	930c      	str	r3, [sp, #48]	; 0x30
 800759c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800759e:	2b00      	cmp	r3, #0
 80075a0:	d01e      	beq.n	80075e0 <_dtoa_r+0x824>
 80075a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80075a4:	2b00      	cmp	r3, #0
 80075a6:	d05c      	beq.n	8007662 <_dtoa_r+0x8a6>
 80075a8:	2d00      	cmp	r5, #0
 80075aa:	dd10      	ble.n	80075ce <_dtoa_r+0x812>
 80075ac:	0039      	movs	r1, r7
 80075ae:	002a      	movs	r2, r5
 80075b0:	9804      	ldr	r0, [sp, #16]
 80075b2:	f000 fd21 	bl	8007ff8 <__pow5mult>
 80075b6:	9a05      	ldr	r2, [sp, #20]
 80075b8:	0001      	movs	r1, r0
 80075ba:	0007      	movs	r7, r0
 80075bc:	9804      	ldr	r0, [sp, #16]
 80075be:	f000 fc6b 	bl	8007e98 <__multiply>
 80075c2:	0006      	movs	r6, r0
 80075c4:	9905      	ldr	r1, [sp, #20]
 80075c6:	9804      	ldr	r0, [sp, #16]
 80075c8:	f000 fb52 	bl	8007c70 <_Bfree>
 80075cc:	9605      	str	r6, [sp, #20]
 80075ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80075d0:	1b5a      	subs	r2, r3, r5
 80075d2:	42ab      	cmp	r3, r5
 80075d4:	d004      	beq.n	80075e0 <_dtoa_r+0x824>
 80075d6:	9905      	ldr	r1, [sp, #20]
 80075d8:	9804      	ldr	r0, [sp, #16]
 80075da:	f000 fd0d 	bl	8007ff8 <__pow5mult>
 80075de:	9005      	str	r0, [sp, #20]
 80075e0:	2101      	movs	r1, #1
 80075e2:	9804      	ldr	r0, [sp, #16]
 80075e4:	f000 fc40 	bl	8007e68 <__i2b>
 80075e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80075ea:	0006      	movs	r6, r0
 80075ec:	2b00      	cmp	r3, #0
 80075ee:	dd3a      	ble.n	8007666 <_dtoa_r+0x8aa>
 80075f0:	001a      	movs	r2, r3
 80075f2:	0001      	movs	r1, r0
 80075f4:	9804      	ldr	r0, [sp, #16]
 80075f6:	f000 fcff 	bl	8007ff8 <__pow5mult>
 80075fa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80075fc:	0006      	movs	r6, r0
 80075fe:	2500      	movs	r5, #0
 8007600:	2b01      	cmp	r3, #1
 8007602:	dc38      	bgt.n	8007676 <_dtoa_r+0x8ba>
 8007604:	2500      	movs	r5, #0
 8007606:	9b08      	ldr	r3, [sp, #32]
 8007608:	42ab      	cmp	r3, r5
 800760a:	d130      	bne.n	800766e <_dtoa_r+0x8b2>
 800760c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800760e:	031b      	lsls	r3, r3, #12
 8007610:	42ab      	cmp	r3, r5
 8007612:	d12c      	bne.n	800766e <_dtoa_r+0x8b2>
 8007614:	4b72      	ldr	r3, [pc, #456]	; (80077e0 <_dtoa_r+0xa24>)
 8007616:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007618:	4213      	tst	r3, r2
 800761a:	d028      	beq.n	800766e <_dtoa_r+0x8b2>
 800761c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800761e:	3501      	adds	r5, #1
 8007620:	3301      	adds	r3, #1
 8007622:	930a      	str	r3, [sp, #40]	; 0x28
 8007624:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007626:	3301      	adds	r3, #1
 8007628:	930c      	str	r3, [sp, #48]	; 0x30
 800762a:	e020      	b.n	800766e <_dtoa_r+0x8b2>
 800762c:	2336      	movs	r3, #54	; 0x36
 800762e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8007630:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8007632:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007634:	1a9b      	subs	r3, r3, r2
 8007636:	e795      	b.n	8007564 <_dtoa_r+0x7a8>
 8007638:	9b07      	ldr	r3, [sp, #28]
 800763a:	1e5d      	subs	r5, r3, #1
 800763c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800763e:	42ab      	cmp	r3, r5
 8007640:	db07      	blt.n	8007652 <_dtoa_r+0x896>
 8007642:	1b5d      	subs	r5, r3, r5
 8007644:	9b07      	ldr	r3, [sp, #28]
 8007646:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007648:	2b00      	cmp	r3, #0
 800764a:	da8b      	bge.n	8007564 <_dtoa_r+0x7a8>
 800764c:	1ae4      	subs	r4, r4, r3
 800764e:	2300      	movs	r3, #0
 8007650:	e788      	b.n	8007564 <_dtoa_r+0x7a8>
 8007652:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007654:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8007656:	1aeb      	subs	r3, r5, r3
 8007658:	18d3      	adds	r3, r2, r3
 800765a:	950d      	str	r5, [sp, #52]	; 0x34
 800765c:	9313      	str	r3, [sp, #76]	; 0x4c
 800765e:	2500      	movs	r5, #0
 8007660:	e7f0      	b.n	8007644 <_dtoa_r+0x888>
 8007662:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007664:	e7b7      	b.n	80075d6 <_dtoa_r+0x81a>
 8007666:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007668:	2500      	movs	r5, #0
 800766a:	2b01      	cmp	r3, #1
 800766c:	ddca      	ble.n	8007604 <_dtoa_r+0x848>
 800766e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007670:	2001      	movs	r0, #1
 8007672:	2b00      	cmp	r3, #0
 8007674:	d008      	beq.n	8007688 <_dtoa_r+0x8cc>
 8007676:	6933      	ldr	r3, [r6, #16]
 8007678:	3303      	adds	r3, #3
 800767a:	009b      	lsls	r3, r3, #2
 800767c:	18f3      	adds	r3, r6, r3
 800767e:	6858      	ldr	r0, [r3, #4]
 8007680:	f000 fbaa 	bl	8007dd8 <__hi0bits>
 8007684:	2320      	movs	r3, #32
 8007686:	1a18      	subs	r0, r3, r0
 8007688:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800768a:	1818      	adds	r0, r3, r0
 800768c:	0002      	movs	r2, r0
 800768e:	231f      	movs	r3, #31
 8007690:	401a      	ands	r2, r3
 8007692:	4218      	tst	r0, r3
 8007694:	d047      	beq.n	8007726 <_dtoa_r+0x96a>
 8007696:	3301      	adds	r3, #1
 8007698:	1a9b      	subs	r3, r3, r2
 800769a:	2b04      	cmp	r3, #4
 800769c:	dd3f      	ble.n	800771e <_dtoa_r+0x962>
 800769e:	231c      	movs	r3, #28
 80076a0:	1a9b      	subs	r3, r3, r2
 80076a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80076a4:	18e4      	adds	r4, r4, r3
 80076a6:	18d2      	adds	r2, r2, r3
 80076a8:	920a      	str	r2, [sp, #40]	; 0x28
 80076aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80076ac:	18d3      	adds	r3, r2, r3
 80076ae:	930c      	str	r3, [sp, #48]	; 0x30
 80076b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80076b2:	2b00      	cmp	r3, #0
 80076b4:	dd05      	ble.n	80076c2 <_dtoa_r+0x906>
 80076b6:	001a      	movs	r2, r3
 80076b8:	9905      	ldr	r1, [sp, #20]
 80076ba:	9804      	ldr	r0, [sp, #16]
 80076bc:	f000 fcf8 	bl	80080b0 <__lshift>
 80076c0:	9005      	str	r0, [sp, #20]
 80076c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80076c4:	2b00      	cmp	r3, #0
 80076c6:	dd05      	ble.n	80076d4 <_dtoa_r+0x918>
 80076c8:	0031      	movs	r1, r6
 80076ca:	001a      	movs	r2, r3
 80076cc:	9804      	ldr	r0, [sp, #16]
 80076ce:	f000 fcef 	bl	80080b0 <__lshift>
 80076d2:	0006      	movs	r6, r0
 80076d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80076d6:	2b00      	cmp	r3, #0
 80076d8:	d027      	beq.n	800772a <_dtoa_r+0x96e>
 80076da:	0031      	movs	r1, r6
 80076dc:	9805      	ldr	r0, [sp, #20]
 80076de:	f000 fd55 	bl	800818c <__mcmp>
 80076e2:	2800      	cmp	r0, #0
 80076e4:	da21      	bge.n	800772a <_dtoa_r+0x96e>
 80076e6:	9b03      	ldr	r3, [sp, #12]
 80076e8:	220a      	movs	r2, #10
 80076ea:	3b01      	subs	r3, #1
 80076ec:	9303      	str	r3, [sp, #12]
 80076ee:	9905      	ldr	r1, [sp, #20]
 80076f0:	2300      	movs	r3, #0
 80076f2:	9804      	ldr	r0, [sp, #16]
 80076f4:	f000 fae0 	bl	8007cb8 <__multadd>
 80076f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80076fa:	9005      	str	r0, [sp, #20]
 80076fc:	2b00      	cmp	r3, #0
 80076fe:	d100      	bne.n	8007702 <_dtoa_r+0x946>
 8007700:	e15d      	b.n	80079be <_dtoa_r+0xc02>
 8007702:	2300      	movs	r3, #0
 8007704:	0039      	movs	r1, r7
 8007706:	220a      	movs	r2, #10
 8007708:	9804      	ldr	r0, [sp, #16]
 800770a:	f000 fad5 	bl	8007cb8 <__multadd>
 800770e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007710:	0007      	movs	r7, r0
 8007712:	2b00      	cmp	r3, #0
 8007714:	dc49      	bgt.n	80077aa <_dtoa_r+0x9ee>
 8007716:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007718:	2b02      	cmp	r3, #2
 800771a:	dc0e      	bgt.n	800773a <_dtoa_r+0x97e>
 800771c:	e045      	b.n	80077aa <_dtoa_r+0x9ee>
 800771e:	2b04      	cmp	r3, #4
 8007720:	d0c6      	beq.n	80076b0 <_dtoa_r+0x8f4>
 8007722:	331c      	adds	r3, #28
 8007724:	e7bd      	b.n	80076a2 <_dtoa_r+0x8e6>
 8007726:	0013      	movs	r3, r2
 8007728:	e7fb      	b.n	8007722 <_dtoa_r+0x966>
 800772a:	9b07      	ldr	r3, [sp, #28]
 800772c:	2b00      	cmp	r3, #0
 800772e:	dc36      	bgt.n	800779e <_dtoa_r+0x9e2>
 8007730:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007732:	2b02      	cmp	r3, #2
 8007734:	dd33      	ble.n	800779e <_dtoa_r+0x9e2>
 8007736:	9b07      	ldr	r3, [sp, #28]
 8007738:	930b      	str	r3, [sp, #44]	; 0x2c
 800773a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800773c:	2b00      	cmp	r3, #0
 800773e:	d10c      	bne.n	800775a <_dtoa_r+0x99e>
 8007740:	0031      	movs	r1, r6
 8007742:	2205      	movs	r2, #5
 8007744:	9804      	ldr	r0, [sp, #16]
 8007746:	f000 fab7 	bl	8007cb8 <__multadd>
 800774a:	0006      	movs	r6, r0
 800774c:	0001      	movs	r1, r0
 800774e:	9805      	ldr	r0, [sp, #20]
 8007750:	f000 fd1c 	bl	800818c <__mcmp>
 8007754:	2800      	cmp	r0, #0
 8007756:	dd00      	ble.n	800775a <_dtoa_r+0x99e>
 8007758:	e59f      	b.n	800729a <_dtoa_r+0x4de>
 800775a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800775c:	43db      	mvns	r3, r3
 800775e:	9303      	str	r3, [sp, #12]
 8007760:	9b06      	ldr	r3, [sp, #24]
 8007762:	9308      	str	r3, [sp, #32]
 8007764:	2500      	movs	r5, #0
 8007766:	0031      	movs	r1, r6
 8007768:	9804      	ldr	r0, [sp, #16]
 800776a:	f000 fa81 	bl	8007c70 <_Bfree>
 800776e:	2f00      	cmp	r7, #0
 8007770:	d100      	bne.n	8007774 <_dtoa_r+0x9b8>
 8007772:	e6a3      	b.n	80074bc <_dtoa_r+0x700>
 8007774:	2d00      	cmp	r5, #0
 8007776:	d005      	beq.n	8007784 <_dtoa_r+0x9c8>
 8007778:	42bd      	cmp	r5, r7
 800777a:	d003      	beq.n	8007784 <_dtoa_r+0x9c8>
 800777c:	0029      	movs	r1, r5
 800777e:	9804      	ldr	r0, [sp, #16]
 8007780:	f000 fa76 	bl	8007c70 <_Bfree>
 8007784:	0039      	movs	r1, r7
 8007786:	9804      	ldr	r0, [sp, #16]
 8007788:	f000 fa72 	bl	8007c70 <_Bfree>
 800778c:	e696      	b.n	80074bc <_dtoa_r+0x700>
 800778e:	2600      	movs	r6, #0
 8007790:	0037      	movs	r7, r6
 8007792:	e7e2      	b.n	800775a <_dtoa_r+0x99e>
 8007794:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007796:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8007798:	9303      	str	r3, [sp, #12]
 800779a:	0037      	movs	r7, r6
 800779c:	e57d      	b.n	800729a <_dtoa_r+0x4de>
 800779e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80077a0:	2b00      	cmp	r3, #0
 80077a2:	d100      	bne.n	80077a6 <_dtoa_r+0x9ea>
 80077a4:	e0c3      	b.n	800792e <_dtoa_r+0xb72>
 80077a6:	9b07      	ldr	r3, [sp, #28]
 80077a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80077aa:	2c00      	cmp	r4, #0
 80077ac:	dd05      	ble.n	80077ba <_dtoa_r+0x9fe>
 80077ae:	0039      	movs	r1, r7
 80077b0:	0022      	movs	r2, r4
 80077b2:	9804      	ldr	r0, [sp, #16]
 80077b4:	f000 fc7c 	bl	80080b0 <__lshift>
 80077b8:	0007      	movs	r7, r0
 80077ba:	0038      	movs	r0, r7
 80077bc:	2d00      	cmp	r5, #0
 80077be:	d024      	beq.n	800780a <_dtoa_r+0xa4e>
 80077c0:	6879      	ldr	r1, [r7, #4]
 80077c2:	9804      	ldr	r0, [sp, #16]
 80077c4:	f000 fa10 	bl	8007be8 <_Balloc>
 80077c8:	1e04      	subs	r4, r0, #0
 80077ca:	d111      	bne.n	80077f0 <_dtoa_r+0xa34>
 80077cc:	0022      	movs	r2, r4
 80077ce:	4b05      	ldr	r3, [pc, #20]	; (80077e4 <_dtoa_r+0xa28>)
 80077d0:	4805      	ldr	r0, [pc, #20]	; (80077e8 <_dtoa_r+0xa2c>)
 80077d2:	4906      	ldr	r1, [pc, #24]	; (80077ec <_dtoa_r+0xa30>)
 80077d4:	f7ff fb07 	bl	8006de6 <_dtoa_r+0x2a>
 80077d8:	40240000 	.word	0x40240000
 80077dc:	00000433 	.word	0x00000433
 80077e0:	7ff00000 	.word	0x7ff00000
 80077e4:	0800a6ce 	.word	0x0800a6ce
 80077e8:	0800a676 	.word	0x0800a676
 80077ec:	000002ef 	.word	0x000002ef
 80077f0:	0039      	movs	r1, r7
 80077f2:	693a      	ldr	r2, [r7, #16]
 80077f4:	310c      	adds	r1, #12
 80077f6:	3202      	adds	r2, #2
 80077f8:	0092      	lsls	r2, r2, #2
 80077fa:	300c      	adds	r0, #12
 80077fc:	f001 ffb2 	bl	8009764 <memcpy>
 8007800:	2201      	movs	r2, #1
 8007802:	0021      	movs	r1, r4
 8007804:	9804      	ldr	r0, [sp, #16]
 8007806:	f000 fc53 	bl	80080b0 <__lshift>
 800780a:	9b06      	ldr	r3, [sp, #24]
 800780c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800780e:	9307      	str	r3, [sp, #28]
 8007810:	3b01      	subs	r3, #1
 8007812:	189b      	adds	r3, r3, r2
 8007814:	2201      	movs	r2, #1
 8007816:	003d      	movs	r5, r7
 8007818:	0007      	movs	r7, r0
 800781a:	930e      	str	r3, [sp, #56]	; 0x38
 800781c:	9b08      	ldr	r3, [sp, #32]
 800781e:	4013      	ands	r3, r2
 8007820:	930d      	str	r3, [sp, #52]	; 0x34
 8007822:	0031      	movs	r1, r6
 8007824:	9805      	ldr	r0, [sp, #20]
 8007826:	f7ff fa39 	bl	8006c9c <quorem>
 800782a:	0029      	movs	r1, r5
 800782c:	0004      	movs	r4, r0
 800782e:	900b      	str	r0, [sp, #44]	; 0x2c
 8007830:	9805      	ldr	r0, [sp, #20]
 8007832:	f000 fcab 	bl	800818c <__mcmp>
 8007836:	003a      	movs	r2, r7
 8007838:	900c      	str	r0, [sp, #48]	; 0x30
 800783a:	0031      	movs	r1, r6
 800783c:	9804      	ldr	r0, [sp, #16]
 800783e:	f000 fcc1 	bl	80081c4 <__mdiff>
 8007842:	2201      	movs	r2, #1
 8007844:	68c3      	ldr	r3, [r0, #12]
 8007846:	3430      	adds	r4, #48	; 0x30
 8007848:	9008      	str	r0, [sp, #32]
 800784a:	920a      	str	r2, [sp, #40]	; 0x28
 800784c:	2b00      	cmp	r3, #0
 800784e:	d104      	bne.n	800785a <_dtoa_r+0xa9e>
 8007850:	0001      	movs	r1, r0
 8007852:	9805      	ldr	r0, [sp, #20]
 8007854:	f000 fc9a 	bl	800818c <__mcmp>
 8007858:	900a      	str	r0, [sp, #40]	; 0x28
 800785a:	9908      	ldr	r1, [sp, #32]
 800785c:	9804      	ldr	r0, [sp, #16]
 800785e:	f000 fa07 	bl	8007c70 <_Bfree>
 8007862:	9b07      	ldr	r3, [sp, #28]
 8007864:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007866:	3301      	adds	r3, #1
 8007868:	9308      	str	r3, [sp, #32]
 800786a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800786c:	4313      	orrs	r3, r2
 800786e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007870:	4313      	orrs	r3, r2
 8007872:	d109      	bne.n	8007888 <_dtoa_r+0xacc>
 8007874:	2c39      	cmp	r4, #57	; 0x39
 8007876:	d022      	beq.n	80078be <_dtoa_r+0xb02>
 8007878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800787a:	2b00      	cmp	r3, #0
 800787c:	dd01      	ble.n	8007882 <_dtoa_r+0xac6>
 800787e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007880:	3431      	adds	r4, #49	; 0x31
 8007882:	9b07      	ldr	r3, [sp, #28]
 8007884:	701c      	strb	r4, [r3, #0]
 8007886:	e76e      	b.n	8007766 <_dtoa_r+0x9aa>
 8007888:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800788a:	2b00      	cmp	r3, #0
 800788c:	db04      	blt.n	8007898 <_dtoa_r+0xadc>
 800788e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8007890:	4313      	orrs	r3, r2
 8007892:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007894:	4313      	orrs	r3, r2
 8007896:	d11e      	bne.n	80078d6 <_dtoa_r+0xb1a>
 8007898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800789a:	2b00      	cmp	r3, #0
 800789c:	ddf1      	ble.n	8007882 <_dtoa_r+0xac6>
 800789e:	9905      	ldr	r1, [sp, #20]
 80078a0:	2201      	movs	r2, #1
 80078a2:	9804      	ldr	r0, [sp, #16]
 80078a4:	f000 fc04 	bl	80080b0 <__lshift>
 80078a8:	0031      	movs	r1, r6
 80078aa:	9005      	str	r0, [sp, #20]
 80078ac:	f000 fc6e 	bl	800818c <__mcmp>
 80078b0:	2800      	cmp	r0, #0
 80078b2:	dc02      	bgt.n	80078ba <_dtoa_r+0xafe>
 80078b4:	d1e5      	bne.n	8007882 <_dtoa_r+0xac6>
 80078b6:	07e3      	lsls	r3, r4, #31
 80078b8:	d5e3      	bpl.n	8007882 <_dtoa_r+0xac6>
 80078ba:	2c39      	cmp	r4, #57	; 0x39
 80078bc:	d1df      	bne.n	800787e <_dtoa_r+0xac2>
 80078be:	2339      	movs	r3, #57	; 0x39
 80078c0:	9a07      	ldr	r2, [sp, #28]
 80078c2:	7013      	strb	r3, [r2, #0]
 80078c4:	9b08      	ldr	r3, [sp, #32]
 80078c6:	9308      	str	r3, [sp, #32]
 80078c8:	3b01      	subs	r3, #1
 80078ca:	781a      	ldrb	r2, [r3, #0]
 80078cc:	2a39      	cmp	r2, #57	; 0x39
 80078ce:	d063      	beq.n	8007998 <_dtoa_r+0xbdc>
 80078d0:	3201      	adds	r2, #1
 80078d2:	701a      	strb	r2, [r3, #0]
 80078d4:	e747      	b.n	8007766 <_dtoa_r+0x9aa>
 80078d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80078d8:	2b00      	cmp	r3, #0
 80078da:	dd03      	ble.n	80078e4 <_dtoa_r+0xb28>
 80078dc:	2c39      	cmp	r4, #57	; 0x39
 80078de:	d0ee      	beq.n	80078be <_dtoa_r+0xb02>
 80078e0:	3401      	adds	r4, #1
 80078e2:	e7ce      	b.n	8007882 <_dtoa_r+0xac6>
 80078e4:	9b07      	ldr	r3, [sp, #28]
 80078e6:	9a07      	ldr	r2, [sp, #28]
 80078e8:	701c      	strb	r4, [r3, #0]
 80078ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80078ec:	4293      	cmp	r3, r2
 80078ee:	d03e      	beq.n	800796e <_dtoa_r+0xbb2>
 80078f0:	2300      	movs	r3, #0
 80078f2:	220a      	movs	r2, #10
 80078f4:	9905      	ldr	r1, [sp, #20]
 80078f6:	9804      	ldr	r0, [sp, #16]
 80078f8:	f000 f9de 	bl	8007cb8 <__multadd>
 80078fc:	2300      	movs	r3, #0
 80078fe:	9005      	str	r0, [sp, #20]
 8007900:	220a      	movs	r2, #10
 8007902:	0029      	movs	r1, r5
 8007904:	9804      	ldr	r0, [sp, #16]
 8007906:	42bd      	cmp	r5, r7
 8007908:	d106      	bne.n	8007918 <_dtoa_r+0xb5c>
 800790a:	f000 f9d5 	bl	8007cb8 <__multadd>
 800790e:	0005      	movs	r5, r0
 8007910:	0007      	movs	r7, r0
 8007912:	9b08      	ldr	r3, [sp, #32]
 8007914:	9307      	str	r3, [sp, #28]
 8007916:	e784      	b.n	8007822 <_dtoa_r+0xa66>
 8007918:	f000 f9ce 	bl	8007cb8 <__multadd>
 800791c:	0039      	movs	r1, r7
 800791e:	0005      	movs	r5, r0
 8007920:	2300      	movs	r3, #0
 8007922:	220a      	movs	r2, #10
 8007924:	9804      	ldr	r0, [sp, #16]
 8007926:	f000 f9c7 	bl	8007cb8 <__multadd>
 800792a:	0007      	movs	r7, r0
 800792c:	e7f1      	b.n	8007912 <_dtoa_r+0xb56>
 800792e:	9b07      	ldr	r3, [sp, #28]
 8007930:	930b      	str	r3, [sp, #44]	; 0x2c
 8007932:	2500      	movs	r5, #0
 8007934:	0031      	movs	r1, r6
 8007936:	9805      	ldr	r0, [sp, #20]
 8007938:	f7ff f9b0 	bl	8006c9c <quorem>
 800793c:	9b06      	ldr	r3, [sp, #24]
 800793e:	3030      	adds	r0, #48	; 0x30
 8007940:	5558      	strb	r0, [r3, r5]
 8007942:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007944:	3501      	adds	r5, #1
 8007946:	0004      	movs	r4, r0
 8007948:	42ab      	cmp	r3, r5
 800794a:	dd07      	ble.n	800795c <_dtoa_r+0xba0>
 800794c:	2300      	movs	r3, #0
 800794e:	220a      	movs	r2, #10
 8007950:	9905      	ldr	r1, [sp, #20]
 8007952:	9804      	ldr	r0, [sp, #16]
 8007954:	f000 f9b0 	bl	8007cb8 <__multadd>
 8007958:	9005      	str	r0, [sp, #20]
 800795a:	e7eb      	b.n	8007934 <_dtoa_r+0xb78>
 800795c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800795e:	2301      	movs	r3, #1
 8007960:	2a00      	cmp	r2, #0
 8007962:	dd00      	ble.n	8007966 <_dtoa_r+0xbaa>
 8007964:	0013      	movs	r3, r2
 8007966:	2500      	movs	r5, #0
 8007968:	9a06      	ldr	r2, [sp, #24]
 800796a:	18d3      	adds	r3, r2, r3
 800796c:	9308      	str	r3, [sp, #32]
 800796e:	9905      	ldr	r1, [sp, #20]
 8007970:	2201      	movs	r2, #1
 8007972:	9804      	ldr	r0, [sp, #16]
 8007974:	f000 fb9c 	bl	80080b0 <__lshift>
 8007978:	0031      	movs	r1, r6
 800797a:	9005      	str	r0, [sp, #20]
 800797c:	f000 fc06 	bl	800818c <__mcmp>
 8007980:	2800      	cmp	r0, #0
 8007982:	dc9f      	bgt.n	80078c4 <_dtoa_r+0xb08>
 8007984:	d101      	bne.n	800798a <_dtoa_r+0xbce>
 8007986:	07e4      	lsls	r4, r4, #31
 8007988:	d49c      	bmi.n	80078c4 <_dtoa_r+0xb08>
 800798a:	9b08      	ldr	r3, [sp, #32]
 800798c:	9308      	str	r3, [sp, #32]
 800798e:	3b01      	subs	r3, #1
 8007990:	781a      	ldrb	r2, [r3, #0]
 8007992:	2a30      	cmp	r2, #48	; 0x30
 8007994:	d0fa      	beq.n	800798c <_dtoa_r+0xbd0>
 8007996:	e6e6      	b.n	8007766 <_dtoa_r+0x9aa>
 8007998:	9a06      	ldr	r2, [sp, #24]
 800799a:	429a      	cmp	r2, r3
 800799c:	d193      	bne.n	80078c6 <_dtoa_r+0xb0a>
 800799e:	9b03      	ldr	r3, [sp, #12]
 80079a0:	3301      	adds	r3, #1
 80079a2:	9303      	str	r3, [sp, #12]
 80079a4:	2331      	movs	r3, #49	; 0x31
 80079a6:	7013      	strb	r3, [r2, #0]
 80079a8:	e6dd      	b.n	8007766 <_dtoa_r+0x9aa>
 80079aa:	4b09      	ldr	r3, [pc, #36]	; (80079d0 <_dtoa_r+0xc14>)
 80079ac:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80079ae:	9306      	str	r3, [sp, #24]
 80079b0:	4b08      	ldr	r3, [pc, #32]	; (80079d4 <_dtoa_r+0xc18>)
 80079b2:	2a00      	cmp	r2, #0
 80079b4:	d001      	beq.n	80079ba <_dtoa_r+0xbfe>
 80079b6:	f7ff fa49 	bl	8006e4c <_dtoa_r+0x90>
 80079ba:	f7ff fa49 	bl	8006e50 <_dtoa_r+0x94>
 80079be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80079c0:	2b00      	cmp	r3, #0
 80079c2:	dcb6      	bgt.n	8007932 <_dtoa_r+0xb76>
 80079c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80079c6:	2b02      	cmp	r3, #2
 80079c8:	dd00      	ble.n	80079cc <_dtoa_r+0xc10>
 80079ca:	e6b6      	b.n	800773a <_dtoa_r+0x97e>
 80079cc:	e7b1      	b.n	8007932 <_dtoa_r+0xb76>
 80079ce:	46c0      	nop			; (mov r8, r8)
 80079d0:	0800a652 	.word	0x0800a652
 80079d4:	0800a65a 	.word	0x0800a65a

080079d8 <_free_r>:
 80079d8:	b570      	push	{r4, r5, r6, lr}
 80079da:	0005      	movs	r5, r0
 80079dc:	2900      	cmp	r1, #0
 80079de:	d010      	beq.n	8007a02 <_free_r+0x2a>
 80079e0:	1f0c      	subs	r4, r1, #4
 80079e2:	6823      	ldr	r3, [r4, #0]
 80079e4:	2b00      	cmp	r3, #0
 80079e6:	da00      	bge.n	80079ea <_free_r+0x12>
 80079e8:	18e4      	adds	r4, r4, r3
 80079ea:	0028      	movs	r0, r5
 80079ec:	f000 f8ec 	bl	8007bc8 <__malloc_lock>
 80079f0:	4a1d      	ldr	r2, [pc, #116]	; (8007a68 <_free_r+0x90>)
 80079f2:	6813      	ldr	r3, [r2, #0]
 80079f4:	2b00      	cmp	r3, #0
 80079f6:	d105      	bne.n	8007a04 <_free_r+0x2c>
 80079f8:	6063      	str	r3, [r4, #4]
 80079fa:	6014      	str	r4, [r2, #0]
 80079fc:	0028      	movs	r0, r5
 80079fe:	f000 f8eb 	bl	8007bd8 <__malloc_unlock>
 8007a02:	bd70      	pop	{r4, r5, r6, pc}
 8007a04:	42a3      	cmp	r3, r4
 8007a06:	d908      	bls.n	8007a1a <_free_r+0x42>
 8007a08:	6820      	ldr	r0, [r4, #0]
 8007a0a:	1821      	adds	r1, r4, r0
 8007a0c:	428b      	cmp	r3, r1
 8007a0e:	d1f3      	bne.n	80079f8 <_free_r+0x20>
 8007a10:	6819      	ldr	r1, [r3, #0]
 8007a12:	685b      	ldr	r3, [r3, #4]
 8007a14:	1809      	adds	r1, r1, r0
 8007a16:	6021      	str	r1, [r4, #0]
 8007a18:	e7ee      	b.n	80079f8 <_free_r+0x20>
 8007a1a:	001a      	movs	r2, r3
 8007a1c:	685b      	ldr	r3, [r3, #4]
 8007a1e:	2b00      	cmp	r3, #0
 8007a20:	d001      	beq.n	8007a26 <_free_r+0x4e>
 8007a22:	42a3      	cmp	r3, r4
 8007a24:	d9f9      	bls.n	8007a1a <_free_r+0x42>
 8007a26:	6811      	ldr	r1, [r2, #0]
 8007a28:	1850      	adds	r0, r2, r1
 8007a2a:	42a0      	cmp	r0, r4
 8007a2c:	d10b      	bne.n	8007a46 <_free_r+0x6e>
 8007a2e:	6820      	ldr	r0, [r4, #0]
 8007a30:	1809      	adds	r1, r1, r0
 8007a32:	1850      	adds	r0, r2, r1
 8007a34:	6011      	str	r1, [r2, #0]
 8007a36:	4283      	cmp	r3, r0
 8007a38:	d1e0      	bne.n	80079fc <_free_r+0x24>
 8007a3a:	6818      	ldr	r0, [r3, #0]
 8007a3c:	685b      	ldr	r3, [r3, #4]
 8007a3e:	1841      	adds	r1, r0, r1
 8007a40:	6011      	str	r1, [r2, #0]
 8007a42:	6053      	str	r3, [r2, #4]
 8007a44:	e7da      	b.n	80079fc <_free_r+0x24>
 8007a46:	42a0      	cmp	r0, r4
 8007a48:	d902      	bls.n	8007a50 <_free_r+0x78>
 8007a4a:	230c      	movs	r3, #12
 8007a4c:	602b      	str	r3, [r5, #0]
 8007a4e:	e7d5      	b.n	80079fc <_free_r+0x24>
 8007a50:	6820      	ldr	r0, [r4, #0]
 8007a52:	1821      	adds	r1, r4, r0
 8007a54:	428b      	cmp	r3, r1
 8007a56:	d103      	bne.n	8007a60 <_free_r+0x88>
 8007a58:	6819      	ldr	r1, [r3, #0]
 8007a5a:	685b      	ldr	r3, [r3, #4]
 8007a5c:	1809      	adds	r1, r1, r0
 8007a5e:	6021      	str	r1, [r4, #0]
 8007a60:	6063      	str	r3, [r4, #4]
 8007a62:	6054      	str	r4, [r2, #4]
 8007a64:	e7ca      	b.n	80079fc <_free_r+0x24>
 8007a66:	46c0      	nop			; (mov r8, r8)
 8007a68:	200003bc 	.word	0x200003bc

08007a6c <malloc>:
 8007a6c:	b510      	push	{r4, lr}
 8007a6e:	4b03      	ldr	r3, [pc, #12]	; (8007a7c <malloc+0x10>)
 8007a70:	0001      	movs	r1, r0
 8007a72:	6818      	ldr	r0, [r3, #0]
 8007a74:	f000 f826 	bl	8007ac4 <_malloc_r>
 8007a78:	bd10      	pop	{r4, pc}
 8007a7a:	46c0      	nop			; (mov r8, r8)
 8007a7c:	20000064 	.word	0x20000064

08007a80 <sbrk_aligned>:
 8007a80:	b570      	push	{r4, r5, r6, lr}
 8007a82:	4e0f      	ldr	r6, [pc, #60]	; (8007ac0 <sbrk_aligned+0x40>)
 8007a84:	000d      	movs	r5, r1
 8007a86:	6831      	ldr	r1, [r6, #0]
 8007a88:	0004      	movs	r4, r0
 8007a8a:	2900      	cmp	r1, #0
 8007a8c:	d102      	bne.n	8007a94 <sbrk_aligned+0x14>
 8007a8e:	f001 fe57 	bl	8009740 <_sbrk_r>
 8007a92:	6030      	str	r0, [r6, #0]
 8007a94:	0029      	movs	r1, r5
 8007a96:	0020      	movs	r0, r4
 8007a98:	f001 fe52 	bl	8009740 <_sbrk_r>
 8007a9c:	1c43      	adds	r3, r0, #1
 8007a9e:	d00a      	beq.n	8007ab6 <sbrk_aligned+0x36>
 8007aa0:	2303      	movs	r3, #3
 8007aa2:	1cc5      	adds	r5, r0, #3
 8007aa4:	439d      	bics	r5, r3
 8007aa6:	42a8      	cmp	r0, r5
 8007aa8:	d007      	beq.n	8007aba <sbrk_aligned+0x3a>
 8007aaa:	1a29      	subs	r1, r5, r0
 8007aac:	0020      	movs	r0, r4
 8007aae:	f001 fe47 	bl	8009740 <_sbrk_r>
 8007ab2:	3001      	adds	r0, #1
 8007ab4:	d101      	bne.n	8007aba <sbrk_aligned+0x3a>
 8007ab6:	2501      	movs	r5, #1
 8007ab8:	426d      	negs	r5, r5
 8007aba:	0028      	movs	r0, r5
 8007abc:	bd70      	pop	{r4, r5, r6, pc}
 8007abe:	46c0      	nop			; (mov r8, r8)
 8007ac0:	200003c0 	.word	0x200003c0

08007ac4 <_malloc_r>:
 8007ac4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ac6:	2203      	movs	r2, #3
 8007ac8:	1ccb      	adds	r3, r1, #3
 8007aca:	4393      	bics	r3, r2
 8007acc:	3308      	adds	r3, #8
 8007ace:	0006      	movs	r6, r0
 8007ad0:	001f      	movs	r7, r3
 8007ad2:	2b0c      	cmp	r3, #12
 8007ad4:	d238      	bcs.n	8007b48 <_malloc_r+0x84>
 8007ad6:	270c      	movs	r7, #12
 8007ad8:	42b9      	cmp	r1, r7
 8007ada:	d837      	bhi.n	8007b4c <_malloc_r+0x88>
 8007adc:	0030      	movs	r0, r6
 8007ade:	f000 f873 	bl	8007bc8 <__malloc_lock>
 8007ae2:	4b38      	ldr	r3, [pc, #224]	; (8007bc4 <_malloc_r+0x100>)
 8007ae4:	9300      	str	r3, [sp, #0]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	001c      	movs	r4, r3
 8007aea:	2c00      	cmp	r4, #0
 8007aec:	d133      	bne.n	8007b56 <_malloc_r+0x92>
 8007aee:	0039      	movs	r1, r7
 8007af0:	0030      	movs	r0, r6
 8007af2:	f7ff ffc5 	bl	8007a80 <sbrk_aligned>
 8007af6:	0004      	movs	r4, r0
 8007af8:	1c43      	adds	r3, r0, #1
 8007afa:	d15e      	bne.n	8007bba <_malloc_r+0xf6>
 8007afc:	9b00      	ldr	r3, [sp, #0]
 8007afe:	681c      	ldr	r4, [r3, #0]
 8007b00:	0025      	movs	r5, r4
 8007b02:	2d00      	cmp	r5, #0
 8007b04:	d14e      	bne.n	8007ba4 <_malloc_r+0xe0>
 8007b06:	2c00      	cmp	r4, #0
 8007b08:	d051      	beq.n	8007bae <_malloc_r+0xea>
 8007b0a:	6823      	ldr	r3, [r4, #0]
 8007b0c:	0029      	movs	r1, r5
 8007b0e:	18e3      	adds	r3, r4, r3
 8007b10:	0030      	movs	r0, r6
 8007b12:	9301      	str	r3, [sp, #4]
 8007b14:	f001 fe14 	bl	8009740 <_sbrk_r>
 8007b18:	9b01      	ldr	r3, [sp, #4]
 8007b1a:	4283      	cmp	r3, r0
 8007b1c:	d147      	bne.n	8007bae <_malloc_r+0xea>
 8007b1e:	6823      	ldr	r3, [r4, #0]
 8007b20:	0030      	movs	r0, r6
 8007b22:	1aff      	subs	r7, r7, r3
 8007b24:	0039      	movs	r1, r7
 8007b26:	f7ff ffab 	bl	8007a80 <sbrk_aligned>
 8007b2a:	3001      	adds	r0, #1
 8007b2c:	d03f      	beq.n	8007bae <_malloc_r+0xea>
 8007b2e:	6823      	ldr	r3, [r4, #0]
 8007b30:	19db      	adds	r3, r3, r7
 8007b32:	6023      	str	r3, [r4, #0]
 8007b34:	9b00      	ldr	r3, [sp, #0]
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	2b00      	cmp	r3, #0
 8007b3a:	d040      	beq.n	8007bbe <_malloc_r+0xfa>
 8007b3c:	685a      	ldr	r2, [r3, #4]
 8007b3e:	42a2      	cmp	r2, r4
 8007b40:	d133      	bne.n	8007baa <_malloc_r+0xe6>
 8007b42:	2200      	movs	r2, #0
 8007b44:	605a      	str	r2, [r3, #4]
 8007b46:	e014      	b.n	8007b72 <_malloc_r+0xae>
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	dac5      	bge.n	8007ad8 <_malloc_r+0x14>
 8007b4c:	230c      	movs	r3, #12
 8007b4e:	2500      	movs	r5, #0
 8007b50:	6033      	str	r3, [r6, #0]
 8007b52:	0028      	movs	r0, r5
 8007b54:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007b56:	6821      	ldr	r1, [r4, #0]
 8007b58:	1bc9      	subs	r1, r1, r7
 8007b5a:	d420      	bmi.n	8007b9e <_malloc_r+0xda>
 8007b5c:	290b      	cmp	r1, #11
 8007b5e:	d918      	bls.n	8007b92 <_malloc_r+0xce>
 8007b60:	19e2      	adds	r2, r4, r7
 8007b62:	6027      	str	r7, [r4, #0]
 8007b64:	42a3      	cmp	r3, r4
 8007b66:	d112      	bne.n	8007b8e <_malloc_r+0xca>
 8007b68:	9b00      	ldr	r3, [sp, #0]
 8007b6a:	601a      	str	r2, [r3, #0]
 8007b6c:	6863      	ldr	r3, [r4, #4]
 8007b6e:	6011      	str	r1, [r2, #0]
 8007b70:	6053      	str	r3, [r2, #4]
 8007b72:	0030      	movs	r0, r6
 8007b74:	0025      	movs	r5, r4
 8007b76:	f000 f82f 	bl	8007bd8 <__malloc_unlock>
 8007b7a:	2207      	movs	r2, #7
 8007b7c:	350b      	adds	r5, #11
 8007b7e:	1d23      	adds	r3, r4, #4
 8007b80:	4395      	bics	r5, r2
 8007b82:	1aea      	subs	r2, r5, r3
 8007b84:	429d      	cmp	r5, r3
 8007b86:	d0e4      	beq.n	8007b52 <_malloc_r+0x8e>
 8007b88:	1b5b      	subs	r3, r3, r5
 8007b8a:	50a3      	str	r3, [r4, r2]
 8007b8c:	e7e1      	b.n	8007b52 <_malloc_r+0x8e>
 8007b8e:	605a      	str	r2, [r3, #4]
 8007b90:	e7ec      	b.n	8007b6c <_malloc_r+0xa8>
 8007b92:	6862      	ldr	r2, [r4, #4]
 8007b94:	42a3      	cmp	r3, r4
 8007b96:	d1d5      	bne.n	8007b44 <_malloc_r+0x80>
 8007b98:	9b00      	ldr	r3, [sp, #0]
 8007b9a:	601a      	str	r2, [r3, #0]
 8007b9c:	e7e9      	b.n	8007b72 <_malloc_r+0xae>
 8007b9e:	0023      	movs	r3, r4
 8007ba0:	6864      	ldr	r4, [r4, #4]
 8007ba2:	e7a2      	b.n	8007aea <_malloc_r+0x26>
 8007ba4:	002c      	movs	r4, r5
 8007ba6:	686d      	ldr	r5, [r5, #4]
 8007ba8:	e7ab      	b.n	8007b02 <_malloc_r+0x3e>
 8007baa:	0013      	movs	r3, r2
 8007bac:	e7c4      	b.n	8007b38 <_malloc_r+0x74>
 8007bae:	230c      	movs	r3, #12
 8007bb0:	0030      	movs	r0, r6
 8007bb2:	6033      	str	r3, [r6, #0]
 8007bb4:	f000 f810 	bl	8007bd8 <__malloc_unlock>
 8007bb8:	e7cb      	b.n	8007b52 <_malloc_r+0x8e>
 8007bba:	6027      	str	r7, [r4, #0]
 8007bbc:	e7d9      	b.n	8007b72 <_malloc_r+0xae>
 8007bbe:	605b      	str	r3, [r3, #4]
 8007bc0:	deff      	udf	#255	; 0xff
 8007bc2:	46c0      	nop			; (mov r8, r8)
 8007bc4:	200003bc 	.word	0x200003bc

08007bc8 <__malloc_lock>:
 8007bc8:	b510      	push	{r4, lr}
 8007bca:	4802      	ldr	r0, [pc, #8]	; (8007bd4 <__malloc_lock+0xc>)
 8007bcc:	f7ff f855 	bl	8006c7a <__retarget_lock_acquire_recursive>
 8007bd0:	bd10      	pop	{r4, pc}
 8007bd2:	46c0      	nop			; (mov r8, r8)
 8007bd4:	200003b8 	.word	0x200003b8

08007bd8 <__malloc_unlock>:
 8007bd8:	b510      	push	{r4, lr}
 8007bda:	4802      	ldr	r0, [pc, #8]	; (8007be4 <__malloc_unlock+0xc>)
 8007bdc:	f7ff f84e 	bl	8006c7c <__retarget_lock_release_recursive>
 8007be0:	bd10      	pop	{r4, pc}
 8007be2:	46c0      	nop			; (mov r8, r8)
 8007be4:	200003b8 	.word	0x200003b8

08007be8 <_Balloc>:
 8007be8:	b570      	push	{r4, r5, r6, lr}
 8007bea:	69c5      	ldr	r5, [r0, #28]
 8007bec:	0006      	movs	r6, r0
 8007bee:	000c      	movs	r4, r1
 8007bf0:	2d00      	cmp	r5, #0
 8007bf2:	d10e      	bne.n	8007c12 <_Balloc+0x2a>
 8007bf4:	2010      	movs	r0, #16
 8007bf6:	f7ff ff39 	bl	8007a6c <malloc>
 8007bfa:	1e02      	subs	r2, r0, #0
 8007bfc:	61f0      	str	r0, [r6, #28]
 8007bfe:	d104      	bne.n	8007c0a <_Balloc+0x22>
 8007c00:	216b      	movs	r1, #107	; 0x6b
 8007c02:	4b19      	ldr	r3, [pc, #100]	; (8007c68 <_Balloc+0x80>)
 8007c04:	4819      	ldr	r0, [pc, #100]	; (8007c6c <_Balloc+0x84>)
 8007c06:	f001 fdbd 	bl	8009784 <__assert_func>
 8007c0a:	6045      	str	r5, [r0, #4]
 8007c0c:	6085      	str	r5, [r0, #8]
 8007c0e:	6005      	str	r5, [r0, #0]
 8007c10:	60c5      	str	r5, [r0, #12]
 8007c12:	69f5      	ldr	r5, [r6, #28]
 8007c14:	68eb      	ldr	r3, [r5, #12]
 8007c16:	2b00      	cmp	r3, #0
 8007c18:	d013      	beq.n	8007c42 <_Balloc+0x5a>
 8007c1a:	69f3      	ldr	r3, [r6, #28]
 8007c1c:	00a2      	lsls	r2, r4, #2
 8007c1e:	68db      	ldr	r3, [r3, #12]
 8007c20:	189b      	adds	r3, r3, r2
 8007c22:	6818      	ldr	r0, [r3, #0]
 8007c24:	2800      	cmp	r0, #0
 8007c26:	d118      	bne.n	8007c5a <_Balloc+0x72>
 8007c28:	2101      	movs	r1, #1
 8007c2a:	000d      	movs	r5, r1
 8007c2c:	40a5      	lsls	r5, r4
 8007c2e:	1d6a      	adds	r2, r5, #5
 8007c30:	0030      	movs	r0, r6
 8007c32:	0092      	lsls	r2, r2, #2
 8007c34:	f001 fdc4 	bl	80097c0 <_calloc_r>
 8007c38:	2800      	cmp	r0, #0
 8007c3a:	d00c      	beq.n	8007c56 <_Balloc+0x6e>
 8007c3c:	6044      	str	r4, [r0, #4]
 8007c3e:	6085      	str	r5, [r0, #8]
 8007c40:	e00d      	b.n	8007c5e <_Balloc+0x76>
 8007c42:	2221      	movs	r2, #33	; 0x21
 8007c44:	2104      	movs	r1, #4
 8007c46:	0030      	movs	r0, r6
 8007c48:	f001 fdba 	bl	80097c0 <_calloc_r>
 8007c4c:	69f3      	ldr	r3, [r6, #28]
 8007c4e:	60e8      	str	r0, [r5, #12]
 8007c50:	68db      	ldr	r3, [r3, #12]
 8007c52:	2b00      	cmp	r3, #0
 8007c54:	d1e1      	bne.n	8007c1a <_Balloc+0x32>
 8007c56:	2000      	movs	r0, #0
 8007c58:	bd70      	pop	{r4, r5, r6, pc}
 8007c5a:	6802      	ldr	r2, [r0, #0]
 8007c5c:	601a      	str	r2, [r3, #0]
 8007c5e:	2300      	movs	r3, #0
 8007c60:	6103      	str	r3, [r0, #16]
 8007c62:	60c3      	str	r3, [r0, #12]
 8007c64:	e7f8      	b.n	8007c58 <_Balloc+0x70>
 8007c66:	46c0      	nop			; (mov r8, r8)
 8007c68:	0800a65f 	.word	0x0800a65f
 8007c6c:	0800a6df 	.word	0x0800a6df

08007c70 <_Bfree>:
 8007c70:	b570      	push	{r4, r5, r6, lr}
 8007c72:	69c6      	ldr	r6, [r0, #28]
 8007c74:	0005      	movs	r5, r0
 8007c76:	000c      	movs	r4, r1
 8007c78:	2e00      	cmp	r6, #0
 8007c7a:	d10e      	bne.n	8007c9a <_Bfree+0x2a>
 8007c7c:	2010      	movs	r0, #16
 8007c7e:	f7ff fef5 	bl	8007a6c <malloc>
 8007c82:	1e02      	subs	r2, r0, #0
 8007c84:	61e8      	str	r0, [r5, #28]
 8007c86:	d104      	bne.n	8007c92 <_Bfree+0x22>
 8007c88:	218f      	movs	r1, #143	; 0x8f
 8007c8a:	4b09      	ldr	r3, [pc, #36]	; (8007cb0 <_Bfree+0x40>)
 8007c8c:	4809      	ldr	r0, [pc, #36]	; (8007cb4 <_Bfree+0x44>)
 8007c8e:	f001 fd79 	bl	8009784 <__assert_func>
 8007c92:	6046      	str	r6, [r0, #4]
 8007c94:	6086      	str	r6, [r0, #8]
 8007c96:	6006      	str	r6, [r0, #0]
 8007c98:	60c6      	str	r6, [r0, #12]
 8007c9a:	2c00      	cmp	r4, #0
 8007c9c:	d007      	beq.n	8007cae <_Bfree+0x3e>
 8007c9e:	69eb      	ldr	r3, [r5, #28]
 8007ca0:	6862      	ldr	r2, [r4, #4]
 8007ca2:	68db      	ldr	r3, [r3, #12]
 8007ca4:	0092      	lsls	r2, r2, #2
 8007ca6:	189b      	adds	r3, r3, r2
 8007ca8:	681a      	ldr	r2, [r3, #0]
 8007caa:	6022      	str	r2, [r4, #0]
 8007cac:	601c      	str	r4, [r3, #0]
 8007cae:	bd70      	pop	{r4, r5, r6, pc}
 8007cb0:	0800a65f 	.word	0x0800a65f
 8007cb4:	0800a6df 	.word	0x0800a6df

08007cb8 <__multadd>:
 8007cb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007cba:	000e      	movs	r6, r1
 8007cbc:	9001      	str	r0, [sp, #4]
 8007cbe:	000c      	movs	r4, r1
 8007cc0:	001d      	movs	r5, r3
 8007cc2:	2000      	movs	r0, #0
 8007cc4:	690f      	ldr	r7, [r1, #16]
 8007cc6:	3614      	adds	r6, #20
 8007cc8:	6833      	ldr	r3, [r6, #0]
 8007cca:	3001      	adds	r0, #1
 8007ccc:	b299      	uxth	r1, r3
 8007cce:	4351      	muls	r1, r2
 8007cd0:	0c1b      	lsrs	r3, r3, #16
 8007cd2:	4353      	muls	r3, r2
 8007cd4:	1949      	adds	r1, r1, r5
 8007cd6:	0c0d      	lsrs	r5, r1, #16
 8007cd8:	195b      	adds	r3, r3, r5
 8007cda:	0c1d      	lsrs	r5, r3, #16
 8007cdc:	b289      	uxth	r1, r1
 8007cde:	041b      	lsls	r3, r3, #16
 8007ce0:	185b      	adds	r3, r3, r1
 8007ce2:	c608      	stmia	r6!, {r3}
 8007ce4:	4287      	cmp	r7, r0
 8007ce6:	dcef      	bgt.n	8007cc8 <__multadd+0x10>
 8007ce8:	2d00      	cmp	r5, #0
 8007cea:	d022      	beq.n	8007d32 <__multadd+0x7a>
 8007cec:	68a3      	ldr	r3, [r4, #8]
 8007cee:	42bb      	cmp	r3, r7
 8007cf0:	dc19      	bgt.n	8007d26 <__multadd+0x6e>
 8007cf2:	6861      	ldr	r1, [r4, #4]
 8007cf4:	9801      	ldr	r0, [sp, #4]
 8007cf6:	3101      	adds	r1, #1
 8007cf8:	f7ff ff76 	bl	8007be8 <_Balloc>
 8007cfc:	1e06      	subs	r6, r0, #0
 8007cfe:	d105      	bne.n	8007d0c <__multadd+0x54>
 8007d00:	0032      	movs	r2, r6
 8007d02:	21ba      	movs	r1, #186	; 0xba
 8007d04:	4b0c      	ldr	r3, [pc, #48]	; (8007d38 <__multadd+0x80>)
 8007d06:	480d      	ldr	r0, [pc, #52]	; (8007d3c <__multadd+0x84>)
 8007d08:	f001 fd3c 	bl	8009784 <__assert_func>
 8007d0c:	0021      	movs	r1, r4
 8007d0e:	6922      	ldr	r2, [r4, #16]
 8007d10:	310c      	adds	r1, #12
 8007d12:	3202      	adds	r2, #2
 8007d14:	0092      	lsls	r2, r2, #2
 8007d16:	300c      	adds	r0, #12
 8007d18:	f001 fd24 	bl	8009764 <memcpy>
 8007d1c:	0021      	movs	r1, r4
 8007d1e:	9801      	ldr	r0, [sp, #4]
 8007d20:	f7ff ffa6 	bl	8007c70 <_Bfree>
 8007d24:	0034      	movs	r4, r6
 8007d26:	1d3b      	adds	r3, r7, #4
 8007d28:	009b      	lsls	r3, r3, #2
 8007d2a:	18e3      	adds	r3, r4, r3
 8007d2c:	605d      	str	r5, [r3, #4]
 8007d2e:	1c7b      	adds	r3, r7, #1
 8007d30:	6123      	str	r3, [r4, #16]
 8007d32:	0020      	movs	r0, r4
 8007d34:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007d36:	46c0      	nop			; (mov r8, r8)
 8007d38:	0800a6ce 	.word	0x0800a6ce
 8007d3c:	0800a6df 	.word	0x0800a6df

08007d40 <__s2b>:
 8007d40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007d42:	0006      	movs	r6, r0
 8007d44:	0018      	movs	r0, r3
 8007d46:	000c      	movs	r4, r1
 8007d48:	3008      	adds	r0, #8
 8007d4a:	2109      	movs	r1, #9
 8007d4c:	9301      	str	r3, [sp, #4]
 8007d4e:	0015      	movs	r5, r2
 8007d50:	f7f8 fa80 	bl	8000254 <__divsi3>
 8007d54:	2301      	movs	r3, #1
 8007d56:	2100      	movs	r1, #0
 8007d58:	4283      	cmp	r3, r0
 8007d5a:	db0a      	blt.n	8007d72 <__s2b+0x32>
 8007d5c:	0030      	movs	r0, r6
 8007d5e:	f7ff ff43 	bl	8007be8 <_Balloc>
 8007d62:	1e01      	subs	r1, r0, #0
 8007d64:	d108      	bne.n	8007d78 <__s2b+0x38>
 8007d66:	000a      	movs	r2, r1
 8007d68:	4b19      	ldr	r3, [pc, #100]	; (8007dd0 <__s2b+0x90>)
 8007d6a:	481a      	ldr	r0, [pc, #104]	; (8007dd4 <__s2b+0x94>)
 8007d6c:	31d3      	adds	r1, #211	; 0xd3
 8007d6e:	f001 fd09 	bl	8009784 <__assert_func>
 8007d72:	005b      	lsls	r3, r3, #1
 8007d74:	3101      	adds	r1, #1
 8007d76:	e7ef      	b.n	8007d58 <__s2b+0x18>
 8007d78:	9b08      	ldr	r3, [sp, #32]
 8007d7a:	6143      	str	r3, [r0, #20]
 8007d7c:	2301      	movs	r3, #1
 8007d7e:	6103      	str	r3, [r0, #16]
 8007d80:	2d09      	cmp	r5, #9
 8007d82:	dd18      	ble.n	8007db6 <__s2b+0x76>
 8007d84:	0023      	movs	r3, r4
 8007d86:	3309      	adds	r3, #9
 8007d88:	001f      	movs	r7, r3
 8007d8a:	9300      	str	r3, [sp, #0]
 8007d8c:	1964      	adds	r4, r4, r5
 8007d8e:	783b      	ldrb	r3, [r7, #0]
 8007d90:	220a      	movs	r2, #10
 8007d92:	0030      	movs	r0, r6
 8007d94:	3b30      	subs	r3, #48	; 0x30
 8007d96:	f7ff ff8f 	bl	8007cb8 <__multadd>
 8007d9a:	3701      	adds	r7, #1
 8007d9c:	0001      	movs	r1, r0
 8007d9e:	42a7      	cmp	r7, r4
 8007da0:	d1f5      	bne.n	8007d8e <__s2b+0x4e>
 8007da2:	002c      	movs	r4, r5
 8007da4:	9b00      	ldr	r3, [sp, #0]
 8007da6:	3c08      	subs	r4, #8
 8007da8:	191c      	adds	r4, r3, r4
 8007daa:	002f      	movs	r7, r5
 8007dac:	9b01      	ldr	r3, [sp, #4]
 8007dae:	429f      	cmp	r7, r3
 8007db0:	db04      	blt.n	8007dbc <__s2b+0x7c>
 8007db2:	0008      	movs	r0, r1
 8007db4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007db6:	2509      	movs	r5, #9
 8007db8:	340a      	adds	r4, #10
 8007dba:	e7f6      	b.n	8007daa <__s2b+0x6a>
 8007dbc:	1b63      	subs	r3, r4, r5
 8007dbe:	5ddb      	ldrb	r3, [r3, r7]
 8007dc0:	220a      	movs	r2, #10
 8007dc2:	0030      	movs	r0, r6
 8007dc4:	3b30      	subs	r3, #48	; 0x30
 8007dc6:	f7ff ff77 	bl	8007cb8 <__multadd>
 8007dca:	3701      	adds	r7, #1
 8007dcc:	0001      	movs	r1, r0
 8007dce:	e7ed      	b.n	8007dac <__s2b+0x6c>
 8007dd0:	0800a6ce 	.word	0x0800a6ce
 8007dd4:	0800a6df 	.word	0x0800a6df

08007dd8 <__hi0bits>:
 8007dd8:	0003      	movs	r3, r0
 8007dda:	0c02      	lsrs	r2, r0, #16
 8007ddc:	2000      	movs	r0, #0
 8007dde:	4282      	cmp	r2, r0
 8007de0:	d101      	bne.n	8007de6 <__hi0bits+0xe>
 8007de2:	041b      	lsls	r3, r3, #16
 8007de4:	3010      	adds	r0, #16
 8007de6:	0e1a      	lsrs	r2, r3, #24
 8007de8:	d101      	bne.n	8007dee <__hi0bits+0x16>
 8007dea:	3008      	adds	r0, #8
 8007dec:	021b      	lsls	r3, r3, #8
 8007dee:	0f1a      	lsrs	r2, r3, #28
 8007df0:	d101      	bne.n	8007df6 <__hi0bits+0x1e>
 8007df2:	3004      	adds	r0, #4
 8007df4:	011b      	lsls	r3, r3, #4
 8007df6:	0f9a      	lsrs	r2, r3, #30
 8007df8:	d101      	bne.n	8007dfe <__hi0bits+0x26>
 8007dfa:	3002      	adds	r0, #2
 8007dfc:	009b      	lsls	r3, r3, #2
 8007dfe:	2b00      	cmp	r3, #0
 8007e00:	db03      	blt.n	8007e0a <__hi0bits+0x32>
 8007e02:	3001      	adds	r0, #1
 8007e04:	005b      	lsls	r3, r3, #1
 8007e06:	d400      	bmi.n	8007e0a <__hi0bits+0x32>
 8007e08:	2020      	movs	r0, #32
 8007e0a:	4770      	bx	lr

08007e0c <__lo0bits>:
 8007e0c:	6803      	ldr	r3, [r0, #0]
 8007e0e:	0001      	movs	r1, r0
 8007e10:	2207      	movs	r2, #7
 8007e12:	0018      	movs	r0, r3
 8007e14:	4010      	ands	r0, r2
 8007e16:	4213      	tst	r3, r2
 8007e18:	d00d      	beq.n	8007e36 <__lo0bits+0x2a>
 8007e1a:	3a06      	subs	r2, #6
 8007e1c:	2000      	movs	r0, #0
 8007e1e:	4213      	tst	r3, r2
 8007e20:	d105      	bne.n	8007e2e <__lo0bits+0x22>
 8007e22:	3002      	adds	r0, #2
 8007e24:	4203      	tst	r3, r0
 8007e26:	d003      	beq.n	8007e30 <__lo0bits+0x24>
 8007e28:	40d3      	lsrs	r3, r2
 8007e2a:	0010      	movs	r0, r2
 8007e2c:	600b      	str	r3, [r1, #0]
 8007e2e:	4770      	bx	lr
 8007e30:	089b      	lsrs	r3, r3, #2
 8007e32:	600b      	str	r3, [r1, #0]
 8007e34:	e7fb      	b.n	8007e2e <__lo0bits+0x22>
 8007e36:	b29a      	uxth	r2, r3
 8007e38:	2a00      	cmp	r2, #0
 8007e3a:	d101      	bne.n	8007e40 <__lo0bits+0x34>
 8007e3c:	2010      	movs	r0, #16
 8007e3e:	0c1b      	lsrs	r3, r3, #16
 8007e40:	b2da      	uxtb	r2, r3
 8007e42:	2a00      	cmp	r2, #0
 8007e44:	d101      	bne.n	8007e4a <__lo0bits+0x3e>
 8007e46:	3008      	adds	r0, #8
 8007e48:	0a1b      	lsrs	r3, r3, #8
 8007e4a:	071a      	lsls	r2, r3, #28
 8007e4c:	d101      	bne.n	8007e52 <__lo0bits+0x46>
 8007e4e:	3004      	adds	r0, #4
 8007e50:	091b      	lsrs	r3, r3, #4
 8007e52:	079a      	lsls	r2, r3, #30
 8007e54:	d101      	bne.n	8007e5a <__lo0bits+0x4e>
 8007e56:	3002      	adds	r0, #2
 8007e58:	089b      	lsrs	r3, r3, #2
 8007e5a:	07da      	lsls	r2, r3, #31
 8007e5c:	d4e9      	bmi.n	8007e32 <__lo0bits+0x26>
 8007e5e:	3001      	adds	r0, #1
 8007e60:	085b      	lsrs	r3, r3, #1
 8007e62:	d1e6      	bne.n	8007e32 <__lo0bits+0x26>
 8007e64:	2020      	movs	r0, #32
 8007e66:	e7e2      	b.n	8007e2e <__lo0bits+0x22>

08007e68 <__i2b>:
 8007e68:	b510      	push	{r4, lr}
 8007e6a:	000c      	movs	r4, r1
 8007e6c:	2101      	movs	r1, #1
 8007e6e:	f7ff febb 	bl	8007be8 <_Balloc>
 8007e72:	2800      	cmp	r0, #0
 8007e74:	d107      	bne.n	8007e86 <__i2b+0x1e>
 8007e76:	2146      	movs	r1, #70	; 0x46
 8007e78:	4c05      	ldr	r4, [pc, #20]	; (8007e90 <__i2b+0x28>)
 8007e7a:	0002      	movs	r2, r0
 8007e7c:	4b05      	ldr	r3, [pc, #20]	; (8007e94 <__i2b+0x2c>)
 8007e7e:	0020      	movs	r0, r4
 8007e80:	31ff      	adds	r1, #255	; 0xff
 8007e82:	f001 fc7f 	bl	8009784 <__assert_func>
 8007e86:	2301      	movs	r3, #1
 8007e88:	6144      	str	r4, [r0, #20]
 8007e8a:	6103      	str	r3, [r0, #16]
 8007e8c:	bd10      	pop	{r4, pc}
 8007e8e:	46c0      	nop			; (mov r8, r8)
 8007e90:	0800a6df 	.word	0x0800a6df
 8007e94:	0800a6ce 	.word	0x0800a6ce

08007e98 <__multiply>:
 8007e98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e9a:	0015      	movs	r5, r2
 8007e9c:	690a      	ldr	r2, [r1, #16]
 8007e9e:	692b      	ldr	r3, [r5, #16]
 8007ea0:	000c      	movs	r4, r1
 8007ea2:	b08b      	sub	sp, #44	; 0x2c
 8007ea4:	429a      	cmp	r2, r3
 8007ea6:	da01      	bge.n	8007eac <__multiply+0x14>
 8007ea8:	002c      	movs	r4, r5
 8007eaa:	000d      	movs	r5, r1
 8007eac:	6927      	ldr	r7, [r4, #16]
 8007eae:	692e      	ldr	r6, [r5, #16]
 8007eb0:	6861      	ldr	r1, [r4, #4]
 8007eb2:	19bb      	adds	r3, r7, r6
 8007eb4:	9303      	str	r3, [sp, #12]
 8007eb6:	68a3      	ldr	r3, [r4, #8]
 8007eb8:	19ba      	adds	r2, r7, r6
 8007eba:	4293      	cmp	r3, r2
 8007ebc:	da00      	bge.n	8007ec0 <__multiply+0x28>
 8007ebe:	3101      	adds	r1, #1
 8007ec0:	f7ff fe92 	bl	8007be8 <_Balloc>
 8007ec4:	9002      	str	r0, [sp, #8]
 8007ec6:	2800      	cmp	r0, #0
 8007ec8:	d106      	bne.n	8007ed8 <__multiply+0x40>
 8007eca:	21b1      	movs	r1, #177	; 0xb1
 8007ecc:	4b48      	ldr	r3, [pc, #288]	; (8007ff0 <__multiply+0x158>)
 8007ece:	4849      	ldr	r0, [pc, #292]	; (8007ff4 <__multiply+0x15c>)
 8007ed0:	9a02      	ldr	r2, [sp, #8]
 8007ed2:	0049      	lsls	r1, r1, #1
 8007ed4:	f001 fc56 	bl	8009784 <__assert_func>
 8007ed8:	9b02      	ldr	r3, [sp, #8]
 8007eda:	2200      	movs	r2, #0
 8007edc:	3314      	adds	r3, #20
 8007ede:	469c      	mov	ip, r3
 8007ee0:	19bb      	adds	r3, r7, r6
 8007ee2:	009b      	lsls	r3, r3, #2
 8007ee4:	4463      	add	r3, ip
 8007ee6:	9304      	str	r3, [sp, #16]
 8007ee8:	4663      	mov	r3, ip
 8007eea:	9904      	ldr	r1, [sp, #16]
 8007eec:	428b      	cmp	r3, r1
 8007eee:	d32a      	bcc.n	8007f46 <__multiply+0xae>
 8007ef0:	0023      	movs	r3, r4
 8007ef2:	00bf      	lsls	r7, r7, #2
 8007ef4:	3314      	adds	r3, #20
 8007ef6:	3514      	adds	r5, #20
 8007ef8:	9308      	str	r3, [sp, #32]
 8007efa:	00b6      	lsls	r6, r6, #2
 8007efc:	19db      	adds	r3, r3, r7
 8007efe:	9305      	str	r3, [sp, #20]
 8007f00:	19ab      	adds	r3, r5, r6
 8007f02:	9309      	str	r3, [sp, #36]	; 0x24
 8007f04:	2304      	movs	r3, #4
 8007f06:	9306      	str	r3, [sp, #24]
 8007f08:	0023      	movs	r3, r4
 8007f0a:	9a05      	ldr	r2, [sp, #20]
 8007f0c:	3315      	adds	r3, #21
 8007f0e:	9501      	str	r5, [sp, #4]
 8007f10:	429a      	cmp	r2, r3
 8007f12:	d305      	bcc.n	8007f20 <__multiply+0x88>
 8007f14:	1b13      	subs	r3, r2, r4
 8007f16:	3b15      	subs	r3, #21
 8007f18:	089b      	lsrs	r3, r3, #2
 8007f1a:	3301      	adds	r3, #1
 8007f1c:	009b      	lsls	r3, r3, #2
 8007f1e:	9306      	str	r3, [sp, #24]
 8007f20:	9b01      	ldr	r3, [sp, #4]
 8007f22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007f24:	4293      	cmp	r3, r2
 8007f26:	d310      	bcc.n	8007f4a <__multiply+0xb2>
 8007f28:	9b03      	ldr	r3, [sp, #12]
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	dd05      	ble.n	8007f3a <__multiply+0xa2>
 8007f2e:	9b04      	ldr	r3, [sp, #16]
 8007f30:	3b04      	subs	r3, #4
 8007f32:	9304      	str	r3, [sp, #16]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	2b00      	cmp	r3, #0
 8007f38:	d056      	beq.n	8007fe8 <__multiply+0x150>
 8007f3a:	9b02      	ldr	r3, [sp, #8]
 8007f3c:	9a03      	ldr	r2, [sp, #12]
 8007f3e:	0018      	movs	r0, r3
 8007f40:	611a      	str	r2, [r3, #16]
 8007f42:	b00b      	add	sp, #44	; 0x2c
 8007f44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007f46:	c304      	stmia	r3!, {r2}
 8007f48:	e7cf      	b.n	8007eea <__multiply+0x52>
 8007f4a:	9b01      	ldr	r3, [sp, #4]
 8007f4c:	6818      	ldr	r0, [r3, #0]
 8007f4e:	b280      	uxth	r0, r0
 8007f50:	2800      	cmp	r0, #0
 8007f52:	d01e      	beq.n	8007f92 <__multiply+0xfa>
 8007f54:	4667      	mov	r7, ip
 8007f56:	2500      	movs	r5, #0
 8007f58:	9e08      	ldr	r6, [sp, #32]
 8007f5a:	ce02      	ldmia	r6!, {r1}
 8007f5c:	683b      	ldr	r3, [r7, #0]
 8007f5e:	9307      	str	r3, [sp, #28]
 8007f60:	b28b      	uxth	r3, r1
 8007f62:	4343      	muls	r3, r0
 8007f64:	001a      	movs	r2, r3
 8007f66:	466b      	mov	r3, sp
 8007f68:	8b9b      	ldrh	r3, [r3, #28]
 8007f6a:	18d3      	adds	r3, r2, r3
 8007f6c:	195b      	adds	r3, r3, r5
 8007f6e:	0c0d      	lsrs	r5, r1, #16
 8007f70:	4345      	muls	r5, r0
 8007f72:	9a07      	ldr	r2, [sp, #28]
 8007f74:	0c11      	lsrs	r1, r2, #16
 8007f76:	1869      	adds	r1, r5, r1
 8007f78:	0c1a      	lsrs	r2, r3, #16
 8007f7a:	188a      	adds	r2, r1, r2
 8007f7c:	b29b      	uxth	r3, r3
 8007f7e:	0c15      	lsrs	r5, r2, #16
 8007f80:	0412      	lsls	r2, r2, #16
 8007f82:	431a      	orrs	r2, r3
 8007f84:	9b05      	ldr	r3, [sp, #20]
 8007f86:	c704      	stmia	r7!, {r2}
 8007f88:	42b3      	cmp	r3, r6
 8007f8a:	d8e6      	bhi.n	8007f5a <__multiply+0xc2>
 8007f8c:	4663      	mov	r3, ip
 8007f8e:	9a06      	ldr	r2, [sp, #24]
 8007f90:	509d      	str	r5, [r3, r2]
 8007f92:	9b01      	ldr	r3, [sp, #4]
 8007f94:	6818      	ldr	r0, [r3, #0]
 8007f96:	0c00      	lsrs	r0, r0, #16
 8007f98:	d020      	beq.n	8007fdc <__multiply+0x144>
 8007f9a:	4663      	mov	r3, ip
 8007f9c:	0025      	movs	r5, r4
 8007f9e:	4661      	mov	r1, ip
 8007fa0:	2700      	movs	r7, #0
 8007fa2:	681b      	ldr	r3, [r3, #0]
 8007fa4:	3514      	adds	r5, #20
 8007fa6:	682a      	ldr	r2, [r5, #0]
 8007fa8:	680e      	ldr	r6, [r1, #0]
 8007faa:	b292      	uxth	r2, r2
 8007fac:	4342      	muls	r2, r0
 8007fae:	0c36      	lsrs	r6, r6, #16
 8007fb0:	1992      	adds	r2, r2, r6
 8007fb2:	19d2      	adds	r2, r2, r7
 8007fb4:	0416      	lsls	r6, r2, #16
 8007fb6:	b29b      	uxth	r3, r3
 8007fb8:	431e      	orrs	r6, r3
 8007fba:	600e      	str	r6, [r1, #0]
 8007fbc:	cd40      	ldmia	r5!, {r6}
 8007fbe:	684b      	ldr	r3, [r1, #4]
 8007fc0:	0c36      	lsrs	r6, r6, #16
 8007fc2:	4346      	muls	r6, r0
 8007fc4:	b29b      	uxth	r3, r3
 8007fc6:	0c12      	lsrs	r2, r2, #16
 8007fc8:	18f3      	adds	r3, r6, r3
 8007fca:	189b      	adds	r3, r3, r2
 8007fcc:	9a05      	ldr	r2, [sp, #20]
 8007fce:	0c1f      	lsrs	r7, r3, #16
 8007fd0:	3104      	adds	r1, #4
 8007fd2:	42aa      	cmp	r2, r5
 8007fd4:	d8e7      	bhi.n	8007fa6 <__multiply+0x10e>
 8007fd6:	4662      	mov	r2, ip
 8007fd8:	9906      	ldr	r1, [sp, #24]
 8007fda:	5053      	str	r3, [r2, r1]
 8007fdc:	9b01      	ldr	r3, [sp, #4]
 8007fde:	3304      	adds	r3, #4
 8007fe0:	9301      	str	r3, [sp, #4]
 8007fe2:	2304      	movs	r3, #4
 8007fe4:	449c      	add	ip, r3
 8007fe6:	e79b      	b.n	8007f20 <__multiply+0x88>
 8007fe8:	9b03      	ldr	r3, [sp, #12]
 8007fea:	3b01      	subs	r3, #1
 8007fec:	9303      	str	r3, [sp, #12]
 8007fee:	e79b      	b.n	8007f28 <__multiply+0x90>
 8007ff0:	0800a6ce 	.word	0x0800a6ce
 8007ff4:	0800a6df 	.word	0x0800a6df

08007ff8 <__pow5mult>:
 8007ff8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ffa:	2303      	movs	r3, #3
 8007ffc:	0015      	movs	r5, r2
 8007ffe:	0007      	movs	r7, r0
 8008000:	000e      	movs	r6, r1
 8008002:	401a      	ands	r2, r3
 8008004:	421d      	tst	r5, r3
 8008006:	d008      	beq.n	800801a <__pow5mult+0x22>
 8008008:	4925      	ldr	r1, [pc, #148]	; (80080a0 <__pow5mult+0xa8>)
 800800a:	3a01      	subs	r2, #1
 800800c:	0092      	lsls	r2, r2, #2
 800800e:	5852      	ldr	r2, [r2, r1]
 8008010:	2300      	movs	r3, #0
 8008012:	0031      	movs	r1, r6
 8008014:	f7ff fe50 	bl	8007cb8 <__multadd>
 8008018:	0006      	movs	r6, r0
 800801a:	10ad      	asrs	r5, r5, #2
 800801c:	d03d      	beq.n	800809a <__pow5mult+0xa2>
 800801e:	69fc      	ldr	r4, [r7, #28]
 8008020:	2c00      	cmp	r4, #0
 8008022:	d10f      	bne.n	8008044 <__pow5mult+0x4c>
 8008024:	2010      	movs	r0, #16
 8008026:	f7ff fd21 	bl	8007a6c <malloc>
 800802a:	1e02      	subs	r2, r0, #0
 800802c:	61f8      	str	r0, [r7, #28]
 800802e:	d105      	bne.n	800803c <__pow5mult+0x44>
 8008030:	21b4      	movs	r1, #180	; 0xb4
 8008032:	4b1c      	ldr	r3, [pc, #112]	; (80080a4 <__pow5mult+0xac>)
 8008034:	481c      	ldr	r0, [pc, #112]	; (80080a8 <__pow5mult+0xb0>)
 8008036:	31ff      	adds	r1, #255	; 0xff
 8008038:	f001 fba4 	bl	8009784 <__assert_func>
 800803c:	6044      	str	r4, [r0, #4]
 800803e:	6084      	str	r4, [r0, #8]
 8008040:	6004      	str	r4, [r0, #0]
 8008042:	60c4      	str	r4, [r0, #12]
 8008044:	69fb      	ldr	r3, [r7, #28]
 8008046:	689c      	ldr	r4, [r3, #8]
 8008048:	9301      	str	r3, [sp, #4]
 800804a:	2c00      	cmp	r4, #0
 800804c:	d108      	bne.n	8008060 <__pow5mult+0x68>
 800804e:	0038      	movs	r0, r7
 8008050:	4916      	ldr	r1, [pc, #88]	; (80080ac <__pow5mult+0xb4>)
 8008052:	f7ff ff09 	bl	8007e68 <__i2b>
 8008056:	9b01      	ldr	r3, [sp, #4]
 8008058:	0004      	movs	r4, r0
 800805a:	6098      	str	r0, [r3, #8]
 800805c:	2300      	movs	r3, #0
 800805e:	6003      	str	r3, [r0, #0]
 8008060:	2301      	movs	r3, #1
 8008062:	421d      	tst	r5, r3
 8008064:	d00a      	beq.n	800807c <__pow5mult+0x84>
 8008066:	0031      	movs	r1, r6
 8008068:	0022      	movs	r2, r4
 800806a:	0038      	movs	r0, r7
 800806c:	f7ff ff14 	bl	8007e98 <__multiply>
 8008070:	0031      	movs	r1, r6
 8008072:	9001      	str	r0, [sp, #4]
 8008074:	0038      	movs	r0, r7
 8008076:	f7ff fdfb 	bl	8007c70 <_Bfree>
 800807a:	9e01      	ldr	r6, [sp, #4]
 800807c:	106d      	asrs	r5, r5, #1
 800807e:	d00c      	beq.n	800809a <__pow5mult+0xa2>
 8008080:	6820      	ldr	r0, [r4, #0]
 8008082:	2800      	cmp	r0, #0
 8008084:	d107      	bne.n	8008096 <__pow5mult+0x9e>
 8008086:	0022      	movs	r2, r4
 8008088:	0021      	movs	r1, r4
 800808a:	0038      	movs	r0, r7
 800808c:	f7ff ff04 	bl	8007e98 <__multiply>
 8008090:	2300      	movs	r3, #0
 8008092:	6020      	str	r0, [r4, #0]
 8008094:	6003      	str	r3, [r0, #0]
 8008096:	0004      	movs	r4, r0
 8008098:	e7e2      	b.n	8008060 <__pow5mult+0x68>
 800809a:	0030      	movs	r0, r6
 800809c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800809e:	46c0      	nop			; (mov r8, r8)
 80080a0:	0800a828 	.word	0x0800a828
 80080a4:	0800a65f 	.word	0x0800a65f
 80080a8:	0800a6df 	.word	0x0800a6df
 80080ac:	00000271 	.word	0x00000271

080080b0 <__lshift>:
 80080b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80080b2:	000c      	movs	r4, r1
 80080b4:	0017      	movs	r7, r2
 80080b6:	6923      	ldr	r3, [r4, #16]
 80080b8:	1155      	asrs	r5, r2, #5
 80080ba:	b087      	sub	sp, #28
 80080bc:	18eb      	adds	r3, r5, r3
 80080be:	9302      	str	r3, [sp, #8]
 80080c0:	3301      	adds	r3, #1
 80080c2:	9301      	str	r3, [sp, #4]
 80080c4:	6849      	ldr	r1, [r1, #4]
 80080c6:	68a3      	ldr	r3, [r4, #8]
 80080c8:	9004      	str	r0, [sp, #16]
 80080ca:	9a01      	ldr	r2, [sp, #4]
 80080cc:	4293      	cmp	r3, r2
 80080ce:	db10      	blt.n	80080f2 <__lshift+0x42>
 80080d0:	9804      	ldr	r0, [sp, #16]
 80080d2:	f7ff fd89 	bl	8007be8 <_Balloc>
 80080d6:	2300      	movs	r3, #0
 80080d8:	0002      	movs	r2, r0
 80080da:	0006      	movs	r6, r0
 80080dc:	0019      	movs	r1, r3
 80080de:	3214      	adds	r2, #20
 80080e0:	4298      	cmp	r0, r3
 80080e2:	d10c      	bne.n	80080fe <__lshift+0x4e>
 80080e4:	31df      	adds	r1, #223	; 0xdf
 80080e6:	0032      	movs	r2, r6
 80080e8:	4b26      	ldr	r3, [pc, #152]	; (8008184 <__lshift+0xd4>)
 80080ea:	4827      	ldr	r0, [pc, #156]	; (8008188 <__lshift+0xd8>)
 80080ec:	31ff      	adds	r1, #255	; 0xff
 80080ee:	f001 fb49 	bl	8009784 <__assert_func>
 80080f2:	3101      	adds	r1, #1
 80080f4:	005b      	lsls	r3, r3, #1
 80080f6:	e7e8      	b.n	80080ca <__lshift+0x1a>
 80080f8:	0098      	lsls	r0, r3, #2
 80080fa:	5011      	str	r1, [r2, r0]
 80080fc:	3301      	adds	r3, #1
 80080fe:	42ab      	cmp	r3, r5
 8008100:	dbfa      	blt.n	80080f8 <__lshift+0x48>
 8008102:	43eb      	mvns	r3, r5
 8008104:	17db      	asrs	r3, r3, #31
 8008106:	401d      	ands	r5, r3
 8008108:	211f      	movs	r1, #31
 800810a:	0023      	movs	r3, r4
 800810c:	0038      	movs	r0, r7
 800810e:	00ad      	lsls	r5, r5, #2
 8008110:	1955      	adds	r5, r2, r5
 8008112:	6922      	ldr	r2, [r4, #16]
 8008114:	3314      	adds	r3, #20
 8008116:	0092      	lsls	r2, r2, #2
 8008118:	4008      	ands	r0, r1
 800811a:	4684      	mov	ip, r0
 800811c:	189a      	adds	r2, r3, r2
 800811e:	420f      	tst	r7, r1
 8008120:	d02a      	beq.n	8008178 <__lshift+0xc8>
 8008122:	3101      	adds	r1, #1
 8008124:	1a09      	subs	r1, r1, r0
 8008126:	9105      	str	r1, [sp, #20]
 8008128:	2100      	movs	r1, #0
 800812a:	9503      	str	r5, [sp, #12]
 800812c:	4667      	mov	r7, ip
 800812e:	6818      	ldr	r0, [r3, #0]
 8008130:	40b8      	lsls	r0, r7
 8008132:	4308      	orrs	r0, r1
 8008134:	9903      	ldr	r1, [sp, #12]
 8008136:	c101      	stmia	r1!, {r0}
 8008138:	9103      	str	r1, [sp, #12]
 800813a:	9805      	ldr	r0, [sp, #20]
 800813c:	cb02      	ldmia	r3!, {r1}
 800813e:	40c1      	lsrs	r1, r0
 8008140:	429a      	cmp	r2, r3
 8008142:	d8f3      	bhi.n	800812c <__lshift+0x7c>
 8008144:	0020      	movs	r0, r4
 8008146:	3015      	adds	r0, #21
 8008148:	2304      	movs	r3, #4
 800814a:	4282      	cmp	r2, r0
 800814c:	d304      	bcc.n	8008158 <__lshift+0xa8>
 800814e:	1b13      	subs	r3, r2, r4
 8008150:	3b15      	subs	r3, #21
 8008152:	089b      	lsrs	r3, r3, #2
 8008154:	3301      	adds	r3, #1
 8008156:	009b      	lsls	r3, r3, #2
 8008158:	50e9      	str	r1, [r5, r3]
 800815a:	2900      	cmp	r1, #0
 800815c:	d002      	beq.n	8008164 <__lshift+0xb4>
 800815e:	9b02      	ldr	r3, [sp, #8]
 8008160:	3302      	adds	r3, #2
 8008162:	9301      	str	r3, [sp, #4]
 8008164:	9b01      	ldr	r3, [sp, #4]
 8008166:	9804      	ldr	r0, [sp, #16]
 8008168:	3b01      	subs	r3, #1
 800816a:	0021      	movs	r1, r4
 800816c:	6133      	str	r3, [r6, #16]
 800816e:	f7ff fd7f 	bl	8007c70 <_Bfree>
 8008172:	0030      	movs	r0, r6
 8008174:	b007      	add	sp, #28
 8008176:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008178:	cb02      	ldmia	r3!, {r1}
 800817a:	c502      	stmia	r5!, {r1}
 800817c:	429a      	cmp	r2, r3
 800817e:	d8fb      	bhi.n	8008178 <__lshift+0xc8>
 8008180:	e7f0      	b.n	8008164 <__lshift+0xb4>
 8008182:	46c0      	nop			; (mov r8, r8)
 8008184:	0800a6ce 	.word	0x0800a6ce
 8008188:	0800a6df 	.word	0x0800a6df

0800818c <__mcmp>:
 800818c:	b530      	push	{r4, r5, lr}
 800818e:	690b      	ldr	r3, [r1, #16]
 8008190:	6904      	ldr	r4, [r0, #16]
 8008192:	0002      	movs	r2, r0
 8008194:	1ae0      	subs	r0, r4, r3
 8008196:	429c      	cmp	r4, r3
 8008198:	d10e      	bne.n	80081b8 <__mcmp+0x2c>
 800819a:	3214      	adds	r2, #20
 800819c:	009b      	lsls	r3, r3, #2
 800819e:	3114      	adds	r1, #20
 80081a0:	0014      	movs	r4, r2
 80081a2:	18c9      	adds	r1, r1, r3
 80081a4:	18d2      	adds	r2, r2, r3
 80081a6:	3a04      	subs	r2, #4
 80081a8:	3904      	subs	r1, #4
 80081aa:	6815      	ldr	r5, [r2, #0]
 80081ac:	680b      	ldr	r3, [r1, #0]
 80081ae:	429d      	cmp	r5, r3
 80081b0:	d003      	beq.n	80081ba <__mcmp+0x2e>
 80081b2:	2001      	movs	r0, #1
 80081b4:	429d      	cmp	r5, r3
 80081b6:	d303      	bcc.n	80081c0 <__mcmp+0x34>
 80081b8:	bd30      	pop	{r4, r5, pc}
 80081ba:	4294      	cmp	r4, r2
 80081bc:	d3f3      	bcc.n	80081a6 <__mcmp+0x1a>
 80081be:	e7fb      	b.n	80081b8 <__mcmp+0x2c>
 80081c0:	4240      	negs	r0, r0
 80081c2:	e7f9      	b.n	80081b8 <__mcmp+0x2c>

080081c4 <__mdiff>:
 80081c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80081c6:	000e      	movs	r6, r1
 80081c8:	0007      	movs	r7, r0
 80081ca:	0011      	movs	r1, r2
 80081cc:	0030      	movs	r0, r6
 80081ce:	b087      	sub	sp, #28
 80081d0:	0014      	movs	r4, r2
 80081d2:	f7ff ffdb 	bl	800818c <__mcmp>
 80081d6:	1e05      	subs	r5, r0, #0
 80081d8:	d110      	bne.n	80081fc <__mdiff+0x38>
 80081da:	0001      	movs	r1, r0
 80081dc:	0038      	movs	r0, r7
 80081de:	f7ff fd03 	bl	8007be8 <_Balloc>
 80081e2:	1e02      	subs	r2, r0, #0
 80081e4:	d104      	bne.n	80081f0 <__mdiff+0x2c>
 80081e6:	4b3f      	ldr	r3, [pc, #252]	; (80082e4 <__mdiff+0x120>)
 80081e8:	483f      	ldr	r0, [pc, #252]	; (80082e8 <__mdiff+0x124>)
 80081ea:	4940      	ldr	r1, [pc, #256]	; (80082ec <__mdiff+0x128>)
 80081ec:	f001 faca 	bl	8009784 <__assert_func>
 80081f0:	2301      	movs	r3, #1
 80081f2:	6145      	str	r5, [r0, #20]
 80081f4:	6103      	str	r3, [r0, #16]
 80081f6:	0010      	movs	r0, r2
 80081f8:	b007      	add	sp, #28
 80081fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80081fc:	2301      	movs	r3, #1
 80081fe:	9301      	str	r3, [sp, #4]
 8008200:	2800      	cmp	r0, #0
 8008202:	db04      	blt.n	800820e <__mdiff+0x4a>
 8008204:	0023      	movs	r3, r4
 8008206:	0034      	movs	r4, r6
 8008208:	001e      	movs	r6, r3
 800820a:	2300      	movs	r3, #0
 800820c:	9301      	str	r3, [sp, #4]
 800820e:	0038      	movs	r0, r7
 8008210:	6861      	ldr	r1, [r4, #4]
 8008212:	f7ff fce9 	bl	8007be8 <_Balloc>
 8008216:	1e02      	subs	r2, r0, #0
 8008218:	d103      	bne.n	8008222 <__mdiff+0x5e>
 800821a:	4b32      	ldr	r3, [pc, #200]	; (80082e4 <__mdiff+0x120>)
 800821c:	4832      	ldr	r0, [pc, #200]	; (80082e8 <__mdiff+0x124>)
 800821e:	4934      	ldr	r1, [pc, #208]	; (80082f0 <__mdiff+0x12c>)
 8008220:	e7e4      	b.n	80081ec <__mdiff+0x28>
 8008222:	9b01      	ldr	r3, [sp, #4]
 8008224:	2700      	movs	r7, #0
 8008226:	60c3      	str	r3, [r0, #12]
 8008228:	6920      	ldr	r0, [r4, #16]
 800822a:	3414      	adds	r4, #20
 800822c:	0083      	lsls	r3, r0, #2
 800822e:	18e3      	adds	r3, r4, r3
 8008230:	0021      	movs	r1, r4
 8008232:	9401      	str	r4, [sp, #4]
 8008234:	0034      	movs	r4, r6
 8008236:	9302      	str	r3, [sp, #8]
 8008238:	6933      	ldr	r3, [r6, #16]
 800823a:	3414      	adds	r4, #20
 800823c:	009b      	lsls	r3, r3, #2
 800823e:	18e3      	adds	r3, r4, r3
 8008240:	9303      	str	r3, [sp, #12]
 8008242:	0013      	movs	r3, r2
 8008244:	3314      	adds	r3, #20
 8008246:	469c      	mov	ip, r3
 8008248:	9305      	str	r3, [sp, #20]
 800824a:	9104      	str	r1, [sp, #16]
 800824c:	9b04      	ldr	r3, [sp, #16]
 800824e:	cc02      	ldmia	r4!, {r1}
 8008250:	cb20      	ldmia	r3!, {r5}
 8008252:	9304      	str	r3, [sp, #16]
 8008254:	b2ab      	uxth	r3, r5
 8008256:	19df      	adds	r7, r3, r7
 8008258:	b28b      	uxth	r3, r1
 800825a:	1afb      	subs	r3, r7, r3
 800825c:	0c09      	lsrs	r1, r1, #16
 800825e:	0c2d      	lsrs	r5, r5, #16
 8008260:	1a6d      	subs	r5, r5, r1
 8008262:	1419      	asrs	r1, r3, #16
 8008264:	1869      	adds	r1, r5, r1
 8008266:	b29b      	uxth	r3, r3
 8008268:	140f      	asrs	r7, r1, #16
 800826a:	0409      	lsls	r1, r1, #16
 800826c:	4319      	orrs	r1, r3
 800826e:	4663      	mov	r3, ip
 8008270:	c302      	stmia	r3!, {r1}
 8008272:	469c      	mov	ip, r3
 8008274:	9b03      	ldr	r3, [sp, #12]
 8008276:	42a3      	cmp	r3, r4
 8008278:	d8e8      	bhi.n	800824c <__mdiff+0x88>
 800827a:	0031      	movs	r1, r6
 800827c:	9c03      	ldr	r4, [sp, #12]
 800827e:	3115      	adds	r1, #21
 8008280:	2304      	movs	r3, #4
 8008282:	428c      	cmp	r4, r1
 8008284:	d304      	bcc.n	8008290 <__mdiff+0xcc>
 8008286:	1ba3      	subs	r3, r4, r6
 8008288:	3b15      	subs	r3, #21
 800828a:	089b      	lsrs	r3, r3, #2
 800828c:	3301      	adds	r3, #1
 800828e:	009b      	lsls	r3, r3, #2
 8008290:	9901      	ldr	r1, [sp, #4]
 8008292:	18cd      	adds	r5, r1, r3
 8008294:	9905      	ldr	r1, [sp, #20]
 8008296:	002e      	movs	r6, r5
 8008298:	18cb      	adds	r3, r1, r3
 800829a:	469c      	mov	ip, r3
 800829c:	9902      	ldr	r1, [sp, #8]
 800829e:	428e      	cmp	r6, r1
 80082a0:	d310      	bcc.n	80082c4 <__mdiff+0x100>
 80082a2:	9e02      	ldr	r6, [sp, #8]
 80082a4:	1ee9      	subs	r1, r5, #3
 80082a6:	2400      	movs	r4, #0
 80082a8:	428e      	cmp	r6, r1
 80082aa:	d304      	bcc.n	80082b6 <__mdiff+0xf2>
 80082ac:	0031      	movs	r1, r6
 80082ae:	3103      	adds	r1, #3
 80082b0:	1b49      	subs	r1, r1, r5
 80082b2:	0889      	lsrs	r1, r1, #2
 80082b4:	008c      	lsls	r4, r1, #2
 80082b6:	191b      	adds	r3, r3, r4
 80082b8:	3b04      	subs	r3, #4
 80082ba:	6819      	ldr	r1, [r3, #0]
 80082bc:	2900      	cmp	r1, #0
 80082be:	d00f      	beq.n	80082e0 <__mdiff+0x11c>
 80082c0:	6110      	str	r0, [r2, #16]
 80082c2:	e798      	b.n	80081f6 <__mdiff+0x32>
 80082c4:	ce02      	ldmia	r6!, {r1}
 80082c6:	b28c      	uxth	r4, r1
 80082c8:	19e4      	adds	r4, r4, r7
 80082ca:	0c0f      	lsrs	r7, r1, #16
 80082cc:	1421      	asrs	r1, r4, #16
 80082ce:	1879      	adds	r1, r7, r1
 80082d0:	b2a4      	uxth	r4, r4
 80082d2:	140f      	asrs	r7, r1, #16
 80082d4:	0409      	lsls	r1, r1, #16
 80082d6:	4321      	orrs	r1, r4
 80082d8:	4664      	mov	r4, ip
 80082da:	c402      	stmia	r4!, {r1}
 80082dc:	46a4      	mov	ip, r4
 80082de:	e7dd      	b.n	800829c <__mdiff+0xd8>
 80082e0:	3801      	subs	r0, #1
 80082e2:	e7e9      	b.n	80082b8 <__mdiff+0xf4>
 80082e4:	0800a6ce 	.word	0x0800a6ce
 80082e8:	0800a6df 	.word	0x0800a6df
 80082ec:	00000237 	.word	0x00000237
 80082f0:	00000245 	.word	0x00000245

080082f4 <__ulp>:
 80082f4:	2000      	movs	r0, #0
 80082f6:	4b0b      	ldr	r3, [pc, #44]	; (8008324 <__ulp+0x30>)
 80082f8:	4019      	ands	r1, r3
 80082fa:	4b0b      	ldr	r3, [pc, #44]	; (8008328 <__ulp+0x34>)
 80082fc:	18c9      	adds	r1, r1, r3
 80082fe:	4281      	cmp	r1, r0
 8008300:	dc06      	bgt.n	8008310 <__ulp+0x1c>
 8008302:	4249      	negs	r1, r1
 8008304:	150b      	asrs	r3, r1, #20
 8008306:	2b13      	cmp	r3, #19
 8008308:	dc03      	bgt.n	8008312 <__ulp+0x1e>
 800830a:	2180      	movs	r1, #128	; 0x80
 800830c:	0309      	lsls	r1, r1, #12
 800830e:	4119      	asrs	r1, r3
 8008310:	4770      	bx	lr
 8008312:	3b14      	subs	r3, #20
 8008314:	2001      	movs	r0, #1
 8008316:	2b1e      	cmp	r3, #30
 8008318:	dc02      	bgt.n	8008320 <__ulp+0x2c>
 800831a:	2080      	movs	r0, #128	; 0x80
 800831c:	0600      	lsls	r0, r0, #24
 800831e:	40d8      	lsrs	r0, r3
 8008320:	2100      	movs	r1, #0
 8008322:	e7f5      	b.n	8008310 <__ulp+0x1c>
 8008324:	7ff00000 	.word	0x7ff00000
 8008328:	fcc00000 	.word	0xfcc00000

0800832c <__b2d>:
 800832c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800832e:	0006      	movs	r6, r0
 8008330:	6903      	ldr	r3, [r0, #16]
 8008332:	3614      	adds	r6, #20
 8008334:	009b      	lsls	r3, r3, #2
 8008336:	18f3      	adds	r3, r6, r3
 8008338:	1f1d      	subs	r5, r3, #4
 800833a:	682c      	ldr	r4, [r5, #0]
 800833c:	000f      	movs	r7, r1
 800833e:	0020      	movs	r0, r4
 8008340:	9301      	str	r3, [sp, #4]
 8008342:	f7ff fd49 	bl	8007dd8 <__hi0bits>
 8008346:	2220      	movs	r2, #32
 8008348:	1a12      	subs	r2, r2, r0
 800834a:	603a      	str	r2, [r7, #0]
 800834c:	0003      	movs	r3, r0
 800834e:	4a1c      	ldr	r2, [pc, #112]	; (80083c0 <__b2d+0x94>)
 8008350:	280a      	cmp	r0, #10
 8008352:	dc15      	bgt.n	8008380 <__b2d+0x54>
 8008354:	210b      	movs	r1, #11
 8008356:	0027      	movs	r7, r4
 8008358:	1a09      	subs	r1, r1, r0
 800835a:	40cf      	lsrs	r7, r1
 800835c:	433a      	orrs	r2, r7
 800835e:	468c      	mov	ip, r1
 8008360:	0011      	movs	r1, r2
 8008362:	2200      	movs	r2, #0
 8008364:	42ae      	cmp	r6, r5
 8008366:	d202      	bcs.n	800836e <__b2d+0x42>
 8008368:	9a01      	ldr	r2, [sp, #4]
 800836a:	3a08      	subs	r2, #8
 800836c:	6812      	ldr	r2, [r2, #0]
 800836e:	3315      	adds	r3, #21
 8008370:	409c      	lsls	r4, r3
 8008372:	4663      	mov	r3, ip
 8008374:	0027      	movs	r7, r4
 8008376:	40da      	lsrs	r2, r3
 8008378:	4317      	orrs	r7, r2
 800837a:	0038      	movs	r0, r7
 800837c:	b003      	add	sp, #12
 800837e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008380:	2700      	movs	r7, #0
 8008382:	42ae      	cmp	r6, r5
 8008384:	d202      	bcs.n	800838c <__b2d+0x60>
 8008386:	9d01      	ldr	r5, [sp, #4]
 8008388:	3d08      	subs	r5, #8
 800838a:	682f      	ldr	r7, [r5, #0]
 800838c:	210b      	movs	r1, #11
 800838e:	4249      	negs	r1, r1
 8008390:	468c      	mov	ip, r1
 8008392:	449c      	add	ip, r3
 8008394:	2b0b      	cmp	r3, #11
 8008396:	d010      	beq.n	80083ba <__b2d+0x8e>
 8008398:	4661      	mov	r1, ip
 800839a:	2320      	movs	r3, #32
 800839c:	408c      	lsls	r4, r1
 800839e:	1a5b      	subs	r3, r3, r1
 80083a0:	0039      	movs	r1, r7
 80083a2:	40d9      	lsrs	r1, r3
 80083a4:	430c      	orrs	r4, r1
 80083a6:	4322      	orrs	r2, r4
 80083a8:	0011      	movs	r1, r2
 80083aa:	2200      	movs	r2, #0
 80083ac:	42b5      	cmp	r5, r6
 80083ae:	d901      	bls.n	80083b4 <__b2d+0x88>
 80083b0:	3d04      	subs	r5, #4
 80083b2:	682a      	ldr	r2, [r5, #0]
 80083b4:	4664      	mov	r4, ip
 80083b6:	40a7      	lsls	r7, r4
 80083b8:	e7dd      	b.n	8008376 <__b2d+0x4a>
 80083ba:	4322      	orrs	r2, r4
 80083bc:	0011      	movs	r1, r2
 80083be:	e7dc      	b.n	800837a <__b2d+0x4e>
 80083c0:	3ff00000 	.word	0x3ff00000

080083c4 <__d2b>:
 80083c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80083c6:	2101      	movs	r1, #1
 80083c8:	0014      	movs	r4, r2
 80083ca:	001d      	movs	r5, r3
 80083cc:	9f08      	ldr	r7, [sp, #32]
 80083ce:	f7ff fc0b 	bl	8007be8 <_Balloc>
 80083d2:	1e06      	subs	r6, r0, #0
 80083d4:	d105      	bne.n	80083e2 <__d2b+0x1e>
 80083d6:	0032      	movs	r2, r6
 80083d8:	4b24      	ldr	r3, [pc, #144]	; (800846c <__d2b+0xa8>)
 80083da:	4825      	ldr	r0, [pc, #148]	; (8008470 <__d2b+0xac>)
 80083dc:	4925      	ldr	r1, [pc, #148]	; (8008474 <__d2b+0xb0>)
 80083de:	f001 f9d1 	bl	8009784 <__assert_func>
 80083e2:	032b      	lsls	r3, r5, #12
 80083e4:	006d      	lsls	r5, r5, #1
 80083e6:	0b1b      	lsrs	r3, r3, #12
 80083e8:	0d6d      	lsrs	r5, r5, #21
 80083ea:	d125      	bne.n	8008438 <__d2b+0x74>
 80083ec:	9301      	str	r3, [sp, #4]
 80083ee:	2c00      	cmp	r4, #0
 80083f0:	d028      	beq.n	8008444 <__d2b+0x80>
 80083f2:	4668      	mov	r0, sp
 80083f4:	9400      	str	r4, [sp, #0]
 80083f6:	f7ff fd09 	bl	8007e0c <__lo0bits>
 80083fa:	9b01      	ldr	r3, [sp, #4]
 80083fc:	9900      	ldr	r1, [sp, #0]
 80083fe:	2800      	cmp	r0, #0
 8008400:	d01e      	beq.n	8008440 <__d2b+0x7c>
 8008402:	2220      	movs	r2, #32
 8008404:	001c      	movs	r4, r3
 8008406:	1a12      	subs	r2, r2, r0
 8008408:	4094      	lsls	r4, r2
 800840a:	0022      	movs	r2, r4
 800840c:	40c3      	lsrs	r3, r0
 800840e:	430a      	orrs	r2, r1
 8008410:	6172      	str	r2, [r6, #20]
 8008412:	9301      	str	r3, [sp, #4]
 8008414:	9c01      	ldr	r4, [sp, #4]
 8008416:	61b4      	str	r4, [r6, #24]
 8008418:	1e63      	subs	r3, r4, #1
 800841a:	419c      	sbcs	r4, r3
 800841c:	3401      	adds	r4, #1
 800841e:	6134      	str	r4, [r6, #16]
 8008420:	2d00      	cmp	r5, #0
 8008422:	d017      	beq.n	8008454 <__d2b+0x90>
 8008424:	2435      	movs	r4, #53	; 0x35
 8008426:	4b14      	ldr	r3, [pc, #80]	; (8008478 <__d2b+0xb4>)
 8008428:	18ed      	adds	r5, r5, r3
 800842a:	182d      	adds	r5, r5, r0
 800842c:	603d      	str	r5, [r7, #0]
 800842e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008430:	1a24      	subs	r4, r4, r0
 8008432:	601c      	str	r4, [r3, #0]
 8008434:	0030      	movs	r0, r6
 8008436:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008438:	2280      	movs	r2, #128	; 0x80
 800843a:	0352      	lsls	r2, r2, #13
 800843c:	4313      	orrs	r3, r2
 800843e:	e7d5      	b.n	80083ec <__d2b+0x28>
 8008440:	6171      	str	r1, [r6, #20]
 8008442:	e7e7      	b.n	8008414 <__d2b+0x50>
 8008444:	a801      	add	r0, sp, #4
 8008446:	f7ff fce1 	bl	8007e0c <__lo0bits>
 800844a:	9b01      	ldr	r3, [sp, #4]
 800844c:	2401      	movs	r4, #1
 800844e:	6173      	str	r3, [r6, #20]
 8008450:	3020      	adds	r0, #32
 8008452:	e7e4      	b.n	800841e <__d2b+0x5a>
 8008454:	4b09      	ldr	r3, [pc, #36]	; (800847c <__d2b+0xb8>)
 8008456:	18c0      	adds	r0, r0, r3
 8008458:	4b09      	ldr	r3, [pc, #36]	; (8008480 <__d2b+0xbc>)
 800845a:	6038      	str	r0, [r7, #0]
 800845c:	18e3      	adds	r3, r4, r3
 800845e:	009b      	lsls	r3, r3, #2
 8008460:	18f3      	adds	r3, r6, r3
 8008462:	6958      	ldr	r0, [r3, #20]
 8008464:	f7ff fcb8 	bl	8007dd8 <__hi0bits>
 8008468:	0164      	lsls	r4, r4, #5
 800846a:	e7e0      	b.n	800842e <__d2b+0x6a>
 800846c:	0800a6ce 	.word	0x0800a6ce
 8008470:	0800a6df 	.word	0x0800a6df
 8008474:	0000030f 	.word	0x0000030f
 8008478:	fffffbcd 	.word	0xfffffbcd
 800847c:	fffffbce 	.word	0xfffffbce
 8008480:	3fffffff 	.word	0x3fffffff

08008484 <__ratio>:
 8008484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008486:	b087      	sub	sp, #28
 8008488:	000f      	movs	r7, r1
 800848a:	a904      	add	r1, sp, #16
 800848c:	0006      	movs	r6, r0
 800848e:	f7ff ff4d 	bl	800832c <__b2d>
 8008492:	9000      	str	r0, [sp, #0]
 8008494:	9101      	str	r1, [sp, #4]
 8008496:	9c00      	ldr	r4, [sp, #0]
 8008498:	9d01      	ldr	r5, [sp, #4]
 800849a:	0038      	movs	r0, r7
 800849c:	a905      	add	r1, sp, #20
 800849e:	f7ff ff45 	bl	800832c <__b2d>
 80084a2:	9002      	str	r0, [sp, #8]
 80084a4:	9103      	str	r1, [sp, #12]
 80084a6:	9a02      	ldr	r2, [sp, #8]
 80084a8:	9b03      	ldr	r3, [sp, #12]
 80084aa:	6930      	ldr	r0, [r6, #16]
 80084ac:	6939      	ldr	r1, [r7, #16]
 80084ae:	9e04      	ldr	r6, [sp, #16]
 80084b0:	1a40      	subs	r0, r0, r1
 80084b2:	9905      	ldr	r1, [sp, #20]
 80084b4:	0140      	lsls	r0, r0, #5
 80084b6:	1a71      	subs	r1, r6, r1
 80084b8:	1841      	adds	r1, r0, r1
 80084ba:	0508      	lsls	r0, r1, #20
 80084bc:	2900      	cmp	r1, #0
 80084be:	dd07      	ble.n	80084d0 <__ratio+0x4c>
 80084c0:	9901      	ldr	r1, [sp, #4]
 80084c2:	1845      	adds	r5, r0, r1
 80084c4:	0020      	movs	r0, r4
 80084c6:	0029      	movs	r1, r5
 80084c8:	f7f9 fbbc 	bl	8001c44 <__aeabi_ddiv>
 80084cc:	b007      	add	sp, #28
 80084ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80084d0:	9903      	ldr	r1, [sp, #12]
 80084d2:	1a0b      	subs	r3, r1, r0
 80084d4:	e7f6      	b.n	80084c4 <__ratio+0x40>

080084d6 <__copybits>:
 80084d6:	b570      	push	{r4, r5, r6, lr}
 80084d8:	0014      	movs	r4, r2
 80084da:	0005      	movs	r5, r0
 80084dc:	3901      	subs	r1, #1
 80084de:	6913      	ldr	r3, [r2, #16]
 80084e0:	1149      	asrs	r1, r1, #5
 80084e2:	3101      	adds	r1, #1
 80084e4:	0089      	lsls	r1, r1, #2
 80084e6:	3414      	adds	r4, #20
 80084e8:	009b      	lsls	r3, r3, #2
 80084ea:	1841      	adds	r1, r0, r1
 80084ec:	18e3      	adds	r3, r4, r3
 80084ee:	42a3      	cmp	r3, r4
 80084f0:	d80d      	bhi.n	800850e <__copybits+0x38>
 80084f2:	0014      	movs	r4, r2
 80084f4:	3411      	adds	r4, #17
 80084f6:	2500      	movs	r5, #0
 80084f8:	429c      	cmp	r4, r3
 80084fa:	d803      	bhi.n	8008504 <__copybits+0x2e>
 80084fc:	1a9b      	subs	r3, r3, r2
 80084fe:	3b11      	subs	r3, #17
 8008500:	089b      	lsrs	r3, r3, #2
 8008502:	009d      	lsls	r5, r3, #2
 8008504:	2300      	movs	r3, #0
 8008506:	1940      	adds	r0, r0, r5
 8008508:	4281      	cmp	r1, r0
 800850a:	d803      	bhi.n	8008514 <__copybits+0x3e>
 800850c:	bd70      	pop	{r4, r5, r6, pc}
 800850e:	cc40      	ldmia	r4!, {r6}
 8008510:	c540      	stmia	r5!, {r6}
 8008512:	e7ec      	b.n	80084ee <__copybits+0x18>
 8008514:	c008      	stmia	r0!, {r3}
 8008516:	e7f7      	b.n	8008508 <__copybits+0x32>

08008518 <__any_on>:
 8008518:	0002      	movs	r2, r0
 800851a:	6900      	ldr	r0, [r0, #16]
 800851c:	b510      	push	{r4, lr}
 800851e:	3214      	adds	r2, #20
 8008520:	114b      	asrs	r3, r1, #5
 8008522:	4298      	cmp	r0, r3
 8008524:	db13      	blt.n	800854e <__any_on+0x36>
 8008526:	dd0c      	ble.n	8008542 <__any_on+0x2a>
 8008528:	241f      	movs	r4, #31
 800852a:	0008      	movs	r0, r1
 800852c:	4020      	ands	r0, r4
 800852e:	4221      	tst	r1, r4
 8008530:	d007      	beq.n	8008542 <__any_on+0x2a>
 8008532:	0099      	lsls	r1, r3, #2
 8008534:	588c      	ldr	r4, [r1, r2]
 8008536:	0021      	movs	r1, r4
 8008538:	40c1      	lsrs	r1, r0
 800853a:	4081      	lsls	r1, r0
 800853c:	2001      	movs	r0, #1
 800853e:	428c      	cmp	r4, r1
 8008540:	d104      	bne.n	800854c <__any_on+0x34>
 8008542:	009b      	lsls	r3, r3, #2
 8008544:	18d3      	adds	r3, r2, r3
 8008546:	4293      	cmp	r3, r2
 8008548:	d803      	bhi.n	8008552 <__any_on+0x3a>
 800854a:	2000      	movs	r0, #0
 800854c:	bd10      	pop	{r4, pc}
 800854e:	0003      	movs	r3, r0
 8008550:	e7f7      	b.n	8008542 <__any_on+0x2a>
 8008552:	3b04      	subs	r3, #4
 8008554:	6819      	ldr	r1, [r3, #0]
 8008556:	2900      	cmp	r1, #0
 8008558:	d0f5      	beq.n	8008546 <__any_on+0x2e>
 800855a:	2001      	movs	r0, #1
 800855c:	e7f6      	b.n	800854c <__any_on+0x34>
	...

08008560 <sulp>:
 8008560:	b570      	push	{r4, r5, r6, lr}
 8008562:	0016      	movs	r6, r2
 8008564:	000d      	movs	r5, r1
 8008566:	f7ff fec5 	bl	80082f4 <__ulp>
 800856a:	2e00      	cmp	r6, #0
 800856c:	d00d      	beq.n	800858a <sulp+0x2a>
 800856e:	236b      	movs	r3, #107	; 0x6b
 8008570:	006a      	lsls	r2, r5, #1
 8008572:	0d52      	lsrs	r2, r2, #21
 8008574:	1a9b      	subs	r3, r3, r2
 8008576:	2b00      	cmp	r3, #0
 8008578:	dd07      	ble.n	800858a <sulp+0x2a>
 800857a:	2400      	movs	r4, #0
 800857c:	4a03      	ldr	r2, [pc, #12]	; (800858c <sulp+0x2c>)
 800857e:	051b      	lsls	r3, r3, #20
 8008580:	189d      	adds	r5, r3, r2
 8008582:	002b      	movs	r3, r5
 8008584:	0022      	movs	r2, r4
 8008586:	f7f9 ff57 	bl	8002438 <__aeabi_dmul>
 800858a:	bd70      	pop	{r4, r5, r6, pc}
 800858c:	3ff00000 	.word	0x3ff00000

08008590 <_strtod_l>:
 8008590:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008592:	b0a1      	sub	sp, #132	; 0x84
 8008594:	9219      	str	r2, [sp, #100]	; 0x64
 8008596:	2200      	movs	r2, #0
 8008598:	2600      	movs	r6, #0
 800859a:	2700      	movs	r7, #0
 800859c:	9004      	str	r0, [sp, #16]
 800859e:	9107      	str	r1, [sp, #28]
 80085a0:	921c      	str	r2, [sp, #112]	; 0x70
 80085a2:	911b      	str	r1, [sp, #108]	; 0x6c
 80085a4:	780a      	ldrb	r2, [r1, #0]
 80085a6:	2a2b      	cmp	r2, #43	; 0x2b
 80085a8:	d055      	beq.n	8008656 <_strtod_l+0xc6>
 80085aa:	d841      	bhi.n	8008630 <_strtod_l+0xa0>
 80085ac:	2a0d      	cmp	r2, #13
 80085ae:	d83b      	bhi.n	8008628 <_strtod_l+0x98>
 80085b0:	2a08      	cmp	r2, #8
 80085b2:	d83b      	bhi.n	800862c <_strtod_l+0x9c>
 80085b4:	2a00      	cmp	r2, #0
 80085b6:	d044      	beq.n	8008642 <_strtod_l+0xb2>
 80085b8:	2200      	movs	r2, #0
 80085ba:	920f      	str	r2, [sp, #60]	; 0x3c
 80085bc:	2100      	movs	r1, #0
 80085be:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80085c0:	9109      	str	r1, [sp, #36]	; 0x24
 80085c2:	782a      	ldrb	r2, [r5, #0]
 80085c4:	2a30      	cmp	r2, #48	; 0x30
 80085c6:	d000      	beq.n	80085ca <_strtod_l+0x3a>
 80085c8:	e085      	b.n	80086d6 <_strtod_l+0x146>
 80085ca:	786a      	ldrb	r2, [r5, #1]
 80085cc:	3120      	adds	r1, #32
 80085ce:	438a      	bics	r2, r1
 80085d0:	2a58      	cmp	r2, #88	; 0x58
 80085d2:	d000      	beq.n	80085d6 <_strtod_l+0x46>
 80085d4:	e075      	b.n	80086c2 <_strtod_l+0x132>
 80085d6:	9302      	str	r3, [sp, #8]
 80085d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80085da:	4a97      	ldr	r2, [pc, #604]	; (8008838 <_strtod_l+0x2a8>)
 80085dc:	9301      	str	r3, [sp, #4]
 80085de:	ab1c      	add	r3, sp, #112	; 0x70
 80085e0:	9300      	str	r3, [sp, #0]
 80085e2:	9804      	ldr	r0, [sp, #16]
 80085e4:	ab1d      	add	r3, sp, #116	; 0x74
 80085e6:	a91b      	add	r1, sp, #108	; 0x6c
 80085e8:	f001 f982 	bl	80098f0 <__gethex>
 80085ec:	230f      	movs	r3, #15
 80085ee:	0002      	movs	r2, r0
 80085f0:	401a      	ands	r2, r3
 80085f2:	0004      	movs	r4, r0
 80085f4:	9205      	str	r2, [sp, #20]
 80085f6:	4218      	tst	r0, r3
 80085f8:	d005      	beq.n	8008606 <_strtod_l+0x76>
 80085fa:	2a06      	cmp	r2, #6
 80085fc:	d12d      	bne.n	800865a <_strtod_l+0xca>
 80085fe:	1c6b      	adds	r3, r5, #1
 8008600:	931b      	str	r3, [sp, #108]	; 0x6c
 8008602:	2300      	movs	r3, #0
 8008604:	930f      	str	r3, [sp, #60]	; 0x3c
 8008606:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008608:	2b00      	cmp	r3, #0
 800860a:	d002      	beq.n	8008612 <_strtod_l+0x82>
 800860c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800860e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008610:	6013      	str	r3, [r2, #0]
 8008612:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008614:	2b00      	cmp	r3, #0
 8008616:	d01b      	beq.n	8008650 <_strtod_l+0xc0>
 8008618:	2380      	movs	r3, #128	; 0x80
 800861a:	0032      	movs	r2, r6
 800861c:	061b      	lsls	r3, r3, #24
 800861e:	18fb      	adds	r3, r7, r3
 8008620:	0010      	movs	r0, r2
 8008622:	0019      	movs	r1, r3
 8008624:	b021      	add	sp, #132	; 0x84
 8008626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008628:	2a20      	cmp	r2, #32
 800862a:	d1c5      	bne.n	80085b8 <_strtod_l+0x28>
 800862c:	3101      	adds	r1, #1
 800862e:	e7b8      	b.n	80085a2 <_strtod_l+0x12>
 8008630:	2a2d      	cmp	r2, #45	; 0x2d
 8008632:	d1c1      	bne.n	80085b8 <_strtod_l+0x28>
 8008634:	3a2c      	subs	r2, #44	; 0x2c
 8008636:	920f      	str	r2, [sp, #60]	; 0x3c
 8008638:	1c4a      	adds	r2, r1, #1
 800863a:	921b      	str	r2, [sp, #108]	; 0x6c
 800863c:	784a      	ldrb	r2, [r1, #1]
 800863e:	2a00      	cmp	r2, #0
 8008640:	d1bc      	bne.n	80085bc <_strtod_l+0x2c>
 8008642:	9b07      	ldr	r3, [sp, #28]
 8008644:	931b      	str	r3, [sp, #108]	; 0x6c
 8008646:	2300      	movs	r3, #0
 8008648:	930f      	str	r3, [sp, #60]	; 0x3c
 800864a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800864c:	2b00      	cmp	r3, #0
 800864e:	d1dd      	bne.n	800860c <_strtod_l+0x7c>
 8008650:	0032      	movs	r2, r6
 8008652:	003b      	movs	r3, r7
 8008654:	e7e4      	b.n	8008620 <_strtod_l+0x90>
 8008656:	2200      	movs	r2, #0
 8008658:	e7ed      	b.n	8008636 <_strtod_l+0xa6>
 800865a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800865c:	2a00      	cmp	r2, #0
 800865e:	d007      	beq.n	8008670 <_strtod_l+0xe0>
 8008660:	2135      	movs	r1, #53	; 0x35
 8008662:	a81e      	add	r0, sp, #120	; 0x78
 8008664:	f7ff ff37 	bl	80084d6 <__copybits>
 8008668:	991c      	ldr	r1, [sp, #112]	; 0x70
 800866a:	9804      	ldr	r0, [sp, #16]
 800866c:	f7ff fb00 	bl	8007c70 <_Bfree>
 8008670:	9805      	ldr	r0, [sp, #20]
 8008672:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8008674:	3801      	subs	r0, #1
 8008676:	2804      	cmp	r0, #4
 8008678:	d806      	bhi.n	8008688 <_strtod_l+0xf8>
 800867a:	f7f7 fd4d 	bl	8000118 <__gnu_thumb1_case_uqi>
 800867e:	0312      	.short	0x0312
 8008680:	1e1c      	.short	0x1e1c
 8008682:	12          	.byte	0x12
 8008683:	00          	.byte	0x00
 8008684:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8008686:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8008688:	05e4      	lsls	r4, r4, #23
 800868a:	d502      	bpl.n	8008692 <_strtod_l+0x102>
 800868c:	2380      	movs	r3, #128	; 0x80
 800868e:	061b      	lsls	r3, r3, #24
 8008690:	431f      	orrs	r7, r3
 8008692:	4b6a      	ldr	r3, [pc, #424]	; (800883c <_strtod_l+0x2ac>)
 8008694:	423b      	tst	r3, r7
 8008696:	d1b6      	bne.n	8008606 <_strtod_l+0x76>
 8008698:	f7fe fac4 	bl	8006c24 <__errno>
 800869c:	2322      	movs	r3, #34	; 0x22
 800869e:	6003      	str	r3, [r0, #0]
 80086a0:	e7b1      	b.n	8008606 <_strtod_l+0x76>
 80086a2:	4967      	ldr	r1, [pc, #412]	; (8008840 <_strtod_l+0x2b0>)
 80086a4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80086a6:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 80086a8:	400a      	ands	r2, r1
 80086aa:	4966      	ldr	r1, [pc, #408]	; (8008844 <_strtod_l+0x2b4>)
 80086ac:	185b      	adds	r3, r3, r1
 80086ae:	051b      	lsls	r3, r3, #20
 80086b0:	431a      	orrs	r2, r3
 80086b2:	0017      	movs	r7, r2
 80086b4:	e7e8      	b.n	8008688 <_strtod_l+0xf8>
 80086b6:	4f61      	ldr	r7, [pc, #388]	; (800883c <_strtod_l+0x2ac>)
 80086b8:	e7e6      	b.n	8008688 <_strtod_l+0xf8>
 80086ba:	2601      	movs	r6, #1
 80086bc:	4f62      	ldr	r7, [pc, #392]	; (8008848 <_strtod_l+0x2b8>)
 80086be:	4276      	negs	r6, r6
 80086c0:	e7e2      	b.n	8008688 <_strtod_l+0xf8>
 80086c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80086c4:	1c5a      	adds	r2, r3, #1
 80086c6:	921b      	str	r2, [sp, #108]	; 0x6c
 80086c8:	785b      	ldrb	r3, [r3, #1]
 80086ca:	2b30      	cmp	r3, #48	; 0x30
 80086cc:	d0f9      	beq.n	80086c2 <_strtod_l+0x132>
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	d099      	beq.n	8008606 <_strtod_l+0x76>
 80086d2:	2301      	movs	r3, #1
 80086d4:	9309      	str	r3, [sp, #36]	; 0x24
 80086d6:	2500      	movs	r5, #0
 80086d8:	220a      	movs	r2, #10
 80086da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80086dc:	950d      	str	r5, [sp, #52]	; 0x34
 80086de:	9310      	str	r3, [sp, #64]	; 0x40
 80086e0:	9508      	str	r5, [sp, #32]
 80086e2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80086e4:	7804      	ldrb	r4, [r0, #0]
 80086e6:	0023      	movs	r3, r4
 80086e8:	3b30      	subs	r3, #48	; 0x30
 80086ea:	b2d9      	uxtb	r1, r3
 80086ec:	2909      	cmp	r1, #9
 80086ee:	d927      	bls.n	8008740 <_strtod_l+0x1b0>
 80086f0:	2201      	movs	r2, #1
 80086f2:	4956      	ldr	r1, [pc, #344]	; (800884c <_strtod_l+0x2bc>)
 80086f4:	f001 f812 	bl	800971c <strncmp>
 80086f8:	2800      	cmp	r0, #0
 80086fa:	d031      	beq.n	8008760 <_strtod_l+0x1d0>
 80086fc:	2000      	movs	r0, #0
 80086fe:	0023      	movs	r3, r4
 8008700:	4684      	mov	ip, r0
 8008702:	9a08      	ldr	r2, [sp, #32]
 8008704:	900c      	str	r0, [sp, #48]	; 0x30
 8008706:	9205      	str	r2, [sp, #20]
 8008708:	2220      	movs	r2, #32
 800870a:	0019      	movs	r1, r3
 800870c:	4391      	bics	r1, r2
 800870e:	000a      	movs	r2, r1
 8008710:	2100      	movs	r1, #0
 8008712:	9106      	str	r1, [sp, #24]
 8008714:	2a45      	cmp	r2, #69	; 0x45
 8008716:	d000      	beq.n	800871a <_strtod_l+0x18a>
 8008718:	e0c2      	b.n	80088a0 <_strtod_l+0x310>
 800871a:	9b05      	ldr	r3, [sp, #20]
 800871c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800871e:	4303      	orrs	r3, r0
 8008720:	4313      	orrs	r3, r2
 8008722:	428b      	cmp	r3, r1
 8008724:	d08d      	beq.n	8008642 <_strtod_l+0xb2>
 8008726:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008728:	9307      	str	r3, [sp, #28]
 800872a:	3301      	adds	r3, #1
 800872c:	931b      	str	r3, [sp, #108]	; 0x6c
 800872e:	9b07      	ldr	r3, [sp, #28]
 8008730:	785b      	ldrb	r3, [r3, #1]
 8008732:	2b2b      	cmp	r3, #43	; 0x2b
 8008734:	d071      	beq.n	800881a <_strtod_l+0x28a>
 8008736:	000c      	movs	r4, r1
 8008738:	2b2d      	cmp	r3, #45	; 0x2d
 800873a:	d174      	bne.n	8008826 <_strtod_l+0x296>
 800873c:	2401      	movs	r4, #1
 800873e:	e06d      	b.n	800881c <_strtod_l+0x28c>
 8008740:	9908      	ldr	r1, [sp, #32]
 8008742:	2908      	cmp	r1, #8
 8008744:	dc09      	bgt.n	800875a <_strtod_l+0x1ca>
 8008746:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008748:	4351      	muls	r1, r2
 800874a:	185b      	adds	r3, r3, r1
 800874c:	930d      	str	r3, [sp, #52]	; 0x34
 800874e:	9b08      	ldr	r3, [sp, #32]
 8008750:	3001      	adds	r0, #1
 8008752:	3301      	adds	r3, #1
 8008754:	9308      	str	r3, [sp, #32]
 8008756:	901b      	str	r0, [sp, #108]	; 0x6c
 8008758:	e7c3      	b.n	80086e2 <_strtod_l+0x152>
 800875a:	4355      	muls	r5, r2
 800875c:	195d      	adds	r5, r3, r5
 800875e:	e7f6      	b.n	800874e <_strtod_l+0x1be>
 8008760:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008762:	1c5a      	adds	r2, r3, #1
 8008764:	921b      	str	r2, [sp, #108]	; 0x6c
 8008766:	9a08      	ldr	r2, [sp, #32]
 8008768:	785b      	ldrb	r3, [r3, #1]
 800876a:	2a00      	cmp	r2, #0
 800876c:	d03a      	beq.n	80087e4 <_strtod_l+0x254>
 800876e:	900c      	str	r0, [sp, #48]	; 0x30
 8008770:	9205      	str	r2, [sp, #20]
 8008772:	001a      	movs	r2, r3
 8008774:	3a30      	subs	r2, #48	; 0x30
 8008776:	2a09      	cmp	r2, #9
 8008778:	d912      	bls.n	80087a0 <_strtod_l+0x210>
 800877a:	2201      	movs	r2, #1
 800877c:	4694      	mov	ip, r2
 800877e:	e7c3      	b.n	8008708 <_strtod_l+0x178>
 8008780:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008782:	3001      	adds	r0, #1
 8008784:	1c5a      	adds	r2, r3, #1
 8008786:	921b      	str	r2, [sp, #108]	; 0x6c
 8008788:	785b      	ldrb	r3, [r3, #1]
 800878a:	2b30      	cmp	r3, #48	; 0x30
 800878c:	d0f8      	beq.n	8008780 <_strtod_l+0x1f0>
 800878e:	001a      	movs	r2, r3
 8008790:	3a31      	subs	r2, #49	; 0x31
 8008792:	2a08      	cmp	r2, #8
 8008794:	d83c      	bhi.n	8008810 <_strtod_l+0x280>
 8008796:	900c      	str	r0, [sp, #48]	; 0x30
 8008798:	2000      	movs	r0, #0
 800879a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800879c:	9005      	str	r0, [sp, #20]
 800879e:	9210      	str	r2, [sp, #64]	; 0x40
 80087a0:	001a      	movs	r2, r3
 80087a2:	1c41      	adds	r1, r0, #1
 80087a4:	3a30      	subs	r2, #48	; 0x30
 80087a6:	2b30      	cmp	r3, #48	; 0x30
 80087a8:	d016      	beq.n	80087d8 <_strtod_l+0x248>
 80087aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80087ac:	185b      	adds	r3, r3, r1
 80087ae:	930c      	str	r3, [sp, #48]	; 0x30
 80087b0:	9b05      	ldr	r3, [sp, #20]
 80087b2:	210a      	movs	r1, #10
 80087b4:	469c      	mov	ip, r3
 80087b6:	4484      	add	ip, r0
 80087b8:	4563      	cmp	r3, ip
 80087ba:	d115      	bne.n	80087e8 <_strtod_l+0x258>
 80087bc:	9905      	ldr	r1, [sp, #20]
 80087be:	9b05      	ldr	r3, [sp, #20]
 80087c0:	3101      	adds	r1, #1
 80087c2:	1809      	adds	r1, r1, r0
 80087c4:	181b      	adds	r3, r3, r0
 80087c6:	9105      	str	r1, [sp, #20]
 80087c8:	2b08      	cmp	r3, #8
 80087ca:	dc19      	bgt.n	8008800 <_strtod_l+0x270>
 80087cc:	230a      	movs	r3, #10
 80087ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 80087d0:	434b      	muls	r3, r1
 80087d2:	2100      	movs	r1, #0
 80087d4:	18d3      	adds	r3, r2, r3
 80087d6:	930d      	str	r3, [sp, #52]	; 0x34
 80087d8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80087da:	0008      	movs	r0, r1
 80087dc:	1c5a      	adds	r2, r3, #1
 80087de:	921b      	str	r2, [sp, #108]	; 0x6c
 80087e0:	785b      	ldrb	r3, [r3, #1]
 80087e2:	e7c6      	b.n	8008772 <_strtod_l+0x1e2>
 80087e4:	9808      	ldr	r0, [sp, #32]
 80087e6:	e7d0      	b.n	800878a <_strtod_l+0x1fa>
 80087e8:	1c5c      	adds	r4, r3, #1
 80087ea:	2b08      	cmp	r3, #8
 80087ec:	dc04      	bgt.n	80087f8 <_strtod_l+0x268>
 80087ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80087f0:	434b      	muls	r3, r1
 80087f2:	930d      	str	r3, [sp, #52]	; 0x34
 80087f4:	0023      	movs	r3, r4
 80087f6:	e7df      	b.n	80087b8 <_strtod_l+0x228>
 80087f8:	2c10      	cmp	r4, #16
 80087fa:	dcfb      	bgt.n	80087f4 <_strtod_l+0x264>
 80087fc:	434d      	muls	r5, r1
 80087fe:	e7f9      	b.n	80087f4 <_strtod_l+0x264>
 8008800:	9b05      	ldr	r3, [sp, #20]
 8008802:	2100      	movs	r1, #0
 8008804:	2b10      	cmp	r3, #16
 8008806:	dce7      	bgt.n	80087d8 <_strtod_l+0x248>
 8008808:	230a      	movs	r3, #10
 800880a:	435d      	muls	r5, r3
 800880c:	1955      	adds	r5, r2, r5
 800880e:	e7e3      	b.n	80087d8 <_strtod_l+0x248>
 8008810:	2200      	movs	r2, #0
 8008812:	920c      	str	r2, [sp, #48]	; 0x30
 8008814:	9205      	str	r2, [sp, #20]
 8008816:	3201      	adds	r2, #1
 8008818:	e7b0      	b.n	800877c <_strtod_l+0x1ec>
 800881a:	2400      	movs	r4, #0
 800881c:	9b07      	ldr	r3, [sp, #28]
 800881e:	3302      	adds	r3, #2
 8008820:	931b      	str	r3, [sp, #108]	; 0x6c
 8008822:	9b07      	ldr	r3, [sp, #28]
 8008824:	789b      	ldrb	r3, [r3, #2]
 8008826:	001a      	movs	r2, r3
 8008828:	3a30      	subs	r2, #48	; 0x30
 800882a:	2a09      	cmp	r2, #9
 800882c:	d914      	bls.n	8008858 <_strtod_l+0x2c8>
 800882e:	9a07      	ldr	r2, [sp, #28]
 8008830:	921b      	str	r2, [sp, #108]	; 0x6c
 8008832:	2200      	movs	r2, #0
 8008834:	e033      	b.n	800889e <_strtod_l+0x30e>
 8008836:	46c0      	nop			; (mov r8, r8)
 8008838:	0800a838 	.word	0x0800a838
 800883c:	7ff00000 	.word	0x7ff00000
 8008840:	ffefffff 	.word	0xffefffff
 8008844:	00000433 	.word	0x00000433
 8008848:	7fffffff 	.word	0x7fffffff
 800884c:	0800a834 	.word	0x0800a834
 8008850:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008852:	1c5a      	adds	r2, r3, #1
 8008854:	921b      	str	r2, [sp, #108]	; 0x6c
 8008856:	785b      	ldrb	r3, [r3, #1]
 8008858:	2b30      	cmp	r3, #48	; 0x30
 800885a:	d0f9      	beq.n	8008850 <_strtod_l+0x2c0>
 800885c:	2200      	movs	r2, #0
 800885e:	9206      	str	r2, [sp, #24]
 8008860:	001a      	movs	r2, r3
 8008862:	3a31      	subs	r2, #49	; 0x31
 8008864:	2a08      	cmp	r2, #8
 8008866:	d81b      	bhi.n	80088a0 <_strtod_l+0x310>
 8008868:	3b30      	subs	r3, #48	; 0x30
 800886a:	930e      	str	r3, [sp, #56]	; 0x38
 800886c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800886e:	9306      	str	r3, [sp, #24]
 8008870:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008872:	1c59      	adds	r1, r3, #1
 8008874:	911b      	str	r1, [sp, #108]	; 0x6c
 8008876:	785b      	ldrb	r3, [r3, #1]
 8008878:	001a      	movs	r2, r3
 800887a:	3a30      	subs	r2, #48	; 0x30
 800887c:	2a09      	cmp	r2, #9
 800887e:	d93a      	bls.n	80088f6 <_strtod_l+0x366>
 8008880:	9a06      	ldr	r2, [sp, #24]
 8008882:	1a8a      	subs	r2, r1, r2
 8008884:	49b2      	ldr	r1, [pc, #712]	; (8008b50 <_strtod_l+0x5c0>)
 8008886:	9106      	str	r1, [sp, #24]
 8008888:	2a08      	cmp	r2, #8
 800888a:	dc04      	bgt.n	8008896 <_strtod_l+0x306>
 800888c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800888e:	9206      	str	r2, [sp, #24]
 8008890:	428a      	cmp	r2, r1
 8008892:	dd00      	ble.n	8008896 <_strtod_l+0x306>
 8008894:	9106      	str	r1, [sp, #24]
 8008896:	2c00      	cmp	r4, #0
 8008898:	d002      	beq.n	80088a0 <_strtod_l+0x310>
 800889a:	9a06      	ldr	r2, [sp, #24]
 800889c:	4252      	negs	r2, r2
 800889e:	9206      	str	r2, [sp, #24]
 80088a0:	9a05      	ldr	r2, [sp, #20]
 80088a2:	2a00      	cmp	r2, #0
 80088a4:	d14d      	bne.n	8008942 <_strtod_l+0x3b2>
 80088a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80088a8:	4310      	orrs	r0, r2
 80088aa:	d000      	beq.n	80088ae <_strtod_l+0x31e>
 80088ac:	e6ab      	b.n	8008606 <_strtod_l+0x76>
 80088ae:	4662      	mov	r2, ip
 80088b0:	2a00      	cmp	r2, #0
 80088b2:	d000      	beq.n	80088b6 <_strtod_l+0x326>
 80088b4:	e6c5      	b.n	8008642 <_strtod_l+0xb2>
 80088b6:	2b69      	cmp	r3, #105	; 0x69
 80088b8:	d027      	beq.n	800890a <_strtod_l+0x37a>
 80088ba:	dc23      	bgt.n	8008904 <_strtod_l+0x374>
 80088bc:	2b49      	cmp	r3, #73	; 0x49
 80088be:	d024      	beq.n	800890a <_strtod_l+0x37a>
 80088c0:	2b4e      	cmp	r3, #78	; 0x4e
 80088c2:	d000      	beq.n	80088c6 <_strtod_l+0x336>
 80088c4:	e6bd      	b.n	8008642 <_strtod_l+0xb2>
 80088c6:	49a3      	ldr	r1, [pc, #652]	; (8008b54 <_strtod_l+0x5c4>)
 80088c8:	a81b      	add	r0, sp, #108	; 0x6c
 80088ca:	f001 fa47 	bl	8009d5c <__match>
 80088ce:	2800      	cmp	r0, #0
 80088d0:	d100      	bne.n	80088d4 <_strtod_l+0x344>
 80088d2:	e6b6      	b.n	8008642 <_strtod_l+0xb2>
 80088d4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80088d6:	781b      	ldrb	r3, [r3, #0]
 80088d8:	2b28      	cmp	r3, #40	; 0x28
 80088da:	d12c      	bne.n	8008936 <_strtod_l+0x3a6>
 80088dc:	499e      	ldr	r1, [pc, #632]	; (8008b58 <_strtod_l+0x5c8>)
 80088de:	aa1e      	add	r2, sp, #120	; 0x78
 80088e0:	a81b      	add	r0, sp, #108	; 0x6c
 80088e2:	f001 fa4f 	bl	8009d84 <__hexnan>
 80088e6:	2805      	cmp	r0, #5
 80088e8:	d125      	bne.n	8008936 <_strtod_l+0x3a6>
 80088ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80088ec:	4a9b      	ldr	r2, [pc, #620]	; (8008b5c <_strtod_l+0x5cc>)
 80088ee:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 80088f0:	431a      	orrs	r2, r3
 80088f2:	0017      	movs	r7, r2
 80088f4:	e687      	b.n	8008606 <_strtod_l+0x76>
 80088f6:	220a      	movs	r2, #10
 80088f8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80088fa:	434a      	muls	r2, r1
 80088fc:	18d2      	adds	r2, r2, r3
 80088fe:	3a30      	subs	r2, #48	; 0x30
 8008900:	920e      	str	r2, [sp, #56]	; 0x38
 8008902:	e7b5      	b.n	8008870 <_strtod_l+0x2e0>
 8008904:	2b6e      	cmp	r3, #110	; 0x6e
 8008906:	d0de      	beq.n	80088c6 <_strtod_l+0x336>
 8008908:	e69b      	b.n	8008642 <_strtod_l+0xb2>
 800890a:	4995      	ldr	r1, [pc, #596]	; (8008b60 <_strtod_l+0x5d0>)
 800890c:	a81b      	add	r0, sp, #108	; 0x6c
 800890e:	f001 fa25 	bl	8009d5c <__match>
 8008912:	2800      	cmp	r0, #0
 8008914:	d100      	bne.n	8008918 <_strtod_l+0x388>
 8008916:	e694      	b.n	8008642 <_strtod_l+0xb2>
 8008918:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800891a:	4992      	ldr	r1, [pc, #584]	; (8008b64 <_strtod_l+0x5d4>)
 800891c:	3b01      	subs	r3, #1
 800891e:	a81b      	add	r0, sp, #108	; 0x6c
 8008920:	931b      	str	r3, [sp, #108]	; 0x6c
 8008922:	f001 fa1b 	bl	8009d5c <__match>
 8008926:	2800      	cmp	r0, #0
 8008928:	d102      	bne.n	8008930 <_strtod_l+0x3a0>
 800892a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800892c:	3301      	adds	r3, #1
 800892e:	931b      	str	r3, [sp, #108]	; 0x6c
 8008930:	2600      	movs	r6, #0
 8008932:	4f8a      	ldr	r7, [pc, #552]	; (8008b5c <_strtod_l+0x5cc>)
 8008934:	e667      	b.n	8008606 <_strtod_l+0x76>
 8008936:	488c      	ldr	r0, [pc, #560]	; (8008b68 <_strtod_l+0x5d8>)
 8008938:	f000 ff1e 	bl	8009778 <nan>
 800893c:	0006      	movs	r6, r0
 800893e:	000f      	movs	r7, r1
 8008940:	e661      	b.n	8008606 <_strtod_l+0x76>
 8008942:	9b06      	ldr	r3, [sp, #24]
 8008944:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008946:	1a9b      	subs	r3, r3, r2
 8008948:	9309      	str	r3, [sp, #36]	; 0x24
 800894a:	9b08      	ldr	r3, [sp, #32]
 800894c:	2b00      	cmp	r3, #0
 800894e:	d101      	bne.n	8008954 <_strtod_l+0x3c4>
 8008950:	9b05      	ldr	r3, [sp, #20]
 8008952:	9308      	str	r3, [sp, #32]
 8008954:	9c05      	ldr	r4, [sp, #20]
 8008956:	2c10      	cmp	r4, #16
 8008958:	dd00      	ble.n	800895c <_strtod_l+0x3cc>
 800895a:	2410      	movs	r4, #16
 800895c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800895e:	f7fa fc33 	bl	80031c8 <__aeabi_ui2d>
 8008962:	9b05      	ldr	r3, [sp, #20]
 8008964:	0006      	movs	r6, r0
 8008966:	000f      	movs	r7, r1
 8008968:	2b09      	cmp	r3, #9
 800896a:	dd15      	ble.n	8008998 <_strtod_l+0x408>
 800896c:	0022      	movs	r2, r4
 800896e:	4b7f      	ldr	r3, [pc, #508]	; (8008b6c <_strtod_l+0x5dc>)
 8008970:	3a09      	subs	r2, #9
 8008972:	00d2      	lsls	r2, r2, #3
 8008974:	189b      	adds	r3, r3, r2
 8008976:	681a      	ldr	r2, [r3, #0]
 8008978:	685b      	ldr	r3, [r3, #4]
 800897a:	f7f9 fd5d 	bl	8002438 <__aeabi_dmul>
 800897e:	0006      	movs	r6, r0
 8008980:	0028      	movs	r0, r5
 8008982:	000f      	movs	r7, r1
 8008984:	f7fa fc20 	bl	80031c8 <__aeabi_ui2d>
 8008988:	0002      	movs	r2, r0
 800898a:	000b      	movs	r3, r1
 800898c:	0030      	movs	r0, r6
 800898e:	0039      	movs	r1, r7
 8008990:	f7f8 fdf8 	bl	8001584 <__aeabi_dadd>
 8008994:	0006      	movs	r6, r0
 8008996:	000f      	movs	r7, r1
 8008998:	9b05      	ldr	r3, [sp, #20]
 800899a:	2b0f      	cmp	r3, #15
 800899c:	dc39      	bgt.n	8008a12 <_strtod_l+0x482>
 800899e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80089a0:	2b00      	cmp	r3, #0
 80089a2:	d100      	bne.n	80089a6 <_strtod_l+0x416>
 80089a4:	e62f      	b.n	8008606 <_strtod_l+0x76>
 80089a6:	dd24      	ble.n	80089f2 <_strtod_l+0x462>
 80089a8:	2b16      	cmp	r3, #22
 80089aa:	dc09      	bgt.n	80089c0 <_strtod_l+0x430>
 80089ac:	496f      	ldr	r1, [pc, #444]	; (8008b6c <_strtod_l+0x5dc>)
 80089ae:	00db      	lsls	r3, r3, #3
 80089b0:	18c9      	adds	r1, r1, r3
 80089b2:	0032      	movs	r2, r6
 80089b4:	6808      	ldr	r0, [r1, #0]
 80089b6:	6849      	ldr	r1, [r1, #4]
 80089b8:	003b      	movs	r3, r7
 80089ba:	f7f9 fd3d 	bl	8002438 <__aeabi_dmul>
 80089be:	e7bd      	b.n	800893c <_strtod_l+0x3ac>
 80089c0:	2325      	movs	r3, #37	; 0x25
 80089c2:	9a05      	ldr	r2, [sp, #20]
 80089c4:	1a9b      	subs	r3, r3, r2
 80089c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80089c8:	4293      	cmp	r3, r2
 80089ca:	db22      	blt.n	8008a12 <_strtod_l+0x482>
 80089cc:	240f      	movs	r4, #15
 80089ce:	9b05      	ldr	r3, [sp, #20]
 80089d0:	4d66      	ldr	r5, [pc, #408]	; (8008b6c <_strtod_l+0x5dc>)
 80089d2:	1ae4      	subs	r4, r4, r3
 80089d4:	00e1      	lsls	r1, r4, #3
 80089d6:	1869      	adds	r1, r5, r1
 80089d8:	0032      	movs	r2, r6
 80089da:	6808      	ldr	r0, [r1, #0]
 80089dc:	6849      	ldr	r1, [r1, #4]
 80089de:	003b      	movs	r3, r7
 80089e0:	f7f9 fd2a 	bl	8002438 <__aeabi_dmul>
 80089e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80089e6:	1b1c      	subs	r4, r3, r4
 80089e8:	00e4      	lsls	r4, r4, #3
 80089ea:	192d      	adds	r5, r5, r4
 80089ec:	682a      	ldr	r2, [r5, #0]
 80089ee:	686b      	ldr	r3, [r5, #4]
 80089f0:	e7e3      	b.n	80089ba <_strtod_l+0x42a>
 80089f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80089f4:	3316      	adds	r3, #22
 80089f6:	db0c      	blt.n	8008a12 <_strtod_l+0x482>
 80089f8:	9906      	ldr	r1, [sp, #24]
 80089fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80089fc:	4b5b      	ldr	r3, [pc, #364]	; (8008b6c <_strtod_l+0x5dc>)
 80089fe:	1a52      	subs	r2, r2, r1
 8008a00:	00d2      	lsls	r2, r2, #3
 8008a02:	189b      	adds	r3, r3, r2
 8008a04:	0030      	movs	r0, r6
 8008a06:	681a      	ldr	r2, [r3, #0]
 8008a08:	685b      	ldr	r3, [r3, #4]
 8008a0a:	0039      	movs	r1, r7
 8008a0c:	f7f9 f91a 	bl	8001c44 <__aeabi_ddiv>
 8008a10:	e794      	b.n	800893c <_strtod_l+0x3ac>
 8008a12:	9b05      	ldr	r3, [sp, #20]
 8008a14:	1b1c      	subs	r4, r3, r4
 8008a16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008a18:	18e4      	adds	r4, r4, r3
 8008a1a:	2c00      	cmp	r4, #0
 8008a1c:	dd72      	ble.n	8008b04 <_strtod_l+0x574>
 8008a1e:	220f      	movs	r2, #15
 8008a20:	0023      	movs	r3, r4
 8008a22:	4013      	ands	r3, r2
 8008a24:	4214      	tst	r4, r2
 8008a26:	d00a      	beq.n	8008a3e <_strtod_l+0x4ae>
 8008a28:	4950      	ldr	r1, [pc, #320]	; (8008b6c <_strtod_l+0x5dc>)
 8008a2a:	00db      	lsls	r3, r3, #3
 8008a2c:	18c9      	adds	r1, r1, r3
 8008a2e:	0032      	movs	r2, r6
 8008a30:	6808      	ldr	r0, [r1, #0]
 8008a32:	6849      	ldr	r1, [r1, #4]
 8008a34:	003b      	movs	r3, r7
 8008a36:	f7f9 fcff 	bl	8002438 <__aeabi_dmul>
 8008a3a:	0006      	movs	r6, r0
 8008a3c:	000f      	movs	r7, r1
 8008a3e:	230f      	movs	r3, #15
 8008a40:	439c      	bics	r4, r3
 8008a42:	d04a      	beq.n	8008ada <_strtod_l+0x54a>
 8008a44:	3326      	adds	r3, #38	; 0x26
 8008a46:	33ff      	adds	r3, #255	; 0xff
 8008a48:	429c      	cmp	r4, r3
 8008a4a:	dd22      	ble.n	8008a92 <_strtod_l+0x502>
 8008a4c:	2300      	movs	r3, #0
 8008a4e:	9305      	str	r3, [sp, #20]
 8008a50:	9306      	str	r3, [sp, #24]
 8008a52:	930d      	str	r3, [sp, #52]	; 0x34
 8008a54:	9308      	str	r3, [sp, #32]
 8008a56:	2322      	movs	r3, #34	; 0x22
 8008a58:	2600      	movs	r6, #0
 8008a5a:	9a04      	ldr	r2, [sp, #16]
 8008a5c:	4f3f      	ldr	r7, [pc, #252]	; (8008b5c <_strtod_l+0x5cc>)
 8008a5e:	6013      	str	r3, [r2, #0]
 8008a60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008a62:	42b3      	cmp	r3, r6
 8008a64:	d100      	bne.n	8008a68 <_strtod_l+0x4d8>
 8008a66:	e5ce      	b.n	8008606 <_strtod_l+0x76>
 8008a68:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008a6a:	9804      	ldr	r0, [sp, #16]
 8008a6c:	f7ff f900 	bl	8007c70 <_Bfree>
 8008a70:	9908      	ldr	r1, [sp, #32]
 8008a72:	9804      	ldr	r0, [sp, #16]
 8008a74:	f7ff f8fc 	bl	8007c70 <_Bfree>
 8008a78:	9906      	ldr	r1, [sp, #24]
 8008a7a:	9804      	ldr	r0, [sp, #16]
 8008a7c:	f7ff f8f8 	bl	8007c70 <_Bfree>
 8008a80:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008a82:	9804      	ldr	r0, [sp, #16]
 8008a84:	f7ff f8f4 	bl	8007c70 <_Bfree>
 8008a88:	9905      	ldr	r1, [sp, #20]
 8008a8a:	9804      	ldr	r0, [sp, #16]
 8008a8c:	f7ff f8f0 	bl	8007c70 <_Bfree>
 8008a90:	e5b9      	b.n	8008606 <_strtod_l+0x76>
 8008a92:	2300      	movs	r3, #0
 8008a94:	0030      	movs	r0, r6
 8008a96:	0039      	movs	r1, r7
 8008a98:	4d35      	ldr	r5, [pc, #212]	; (8008b70 <_strtod_l+0x5e0>)
 8008a9a:	1124      	asrs	r4, r4, #4
 8008a9c:	9307      	str	r3, [sp, #28]
 8008a9e:	2c01      	cmp	r4, #1
 8008aa0:	dc1e      	bgt.n	8008ae0 <_strtod_l+0x550>
 8008aa2:	2b00      	cmp	r3, #0
 8008aa4:	d001      	beq.n	8008aaa <_strtod_l+0x51a>
 8008aa6:	0006      	movs	r6, r0
 8008aa8:	000f      	movs	r7, r1
 8008aaa:	4b32      	ldr	r3, [pc, #200]	; (8008b74 <_strtod_l+0x5e4>)
 8008aac:	9a07      	ldr	r2, [sp, #28]
 8008aae:	18ff      	adds	r7, r7, r3
 8008ab0:	4b2f      	ldr	r3, [pc, #188]	; (8008b70 <_strtod_l+0x5e0>)
 8008ab2:	00d2      	lsls	r2, r2, #3
 8008ab4:	189d      	adds	r5, r3, r2
 8008ab6:	6828      	ldr	r0, [r5, #0]
 8008ab8:	6869      	ldr	r1, [r5, #4]
 8008aba:	0032      	movs	r2, r6
 8008abc:	003b      	movs	r3, r7
 8008abe:	f7f9 fcbb 	bl	8002438 <__aeabi_dmul>
 8008ac2:	4b26      	ldr	r3, [pc, #152]	; (8008b5c <_strtod_l+0x5cc>)
 8008ac4:	4a2c      	ldr	r2, [pc, #176]	; (8008b78 <_strtod_l+0x5e8>)
 8008ac6:	0006      	movs	r6, r0
 8008ac8:	400b      	ands	r3, r1
 8008aca:	4293      	cmp	r3, r2
 8008acc:	d8be      	bhi.n	8008a4c <_strtod_l+0x4bc>
 8008ace:	4a2b      	ldr	r2, [pc, #172]	; (8008b7c <_strtod_l+0x5ec>)
 8008ad0:	4293      	cmp	r3, r2
 8008ad2:	d913      	bls.n	8008afc <_strtod_l+0x56c>
 8008ad4:	2601      	movs	r6, #1
 8008ad6:	4f2a      	ldr	r7, [pc, #168]	; (8008b80 <_strtod_l+0x5f0>)
 8008ad8:	4276      	negs	r6, r6
 8008ada:	2300      	movs	r3, #0
 8008adc:	9307      	str	r3, [sp, #28]
 8008ade:	e088      	b.n	8008bf2 <_strtod_l+0x662>
 8008ae0:	2201      	movs	r2, #1
 8008ae2:	4214      	tst	r4, r2
 8008ae4:	d004      	beq.n	8008af0 <_strtod_l+0x560>
 8008ae6:	682a      	ldr	r2, [r5, #0]
 8008ae8:	686b      	ldr	r3, [r5, #4]
 8008aea:	f7f9 fca5 	bl	8002438 <__aeabi_dmul>
 8008aee:	2301      	movs	r3, #1
 8008af0:	9a07      	ldr	r2, [sp, #28]
 8008af2:	1064      	asrs	r4, r4, #1
 8008af4:	3201      	adds	r2, #1
 8008af6:	9207      	str	r2, [sp, #28]
 8008af8:	3508      	adds	r5, #8
 8008afa:	e7d0      	b.n	8008a9e <_strtod_l+0x50e>
 8008afc:	23d4      	movs	r3, #212	; 0xd4
 8008afe:	049b      	lsls	r3, r3, #18
 8008b00:	18cf      	adds	r7, r1, r3
 8008b02:	e7ea      	b.n	8008ada <_strtod_l+0x54a>
 8008b04:	2c00      	cmp	r4, #0
 8008b06:	d0e8      	beq.n	8008ada <_strtod_l+0x54a>
 8008b08:	4264      	negs	r4, r4
 8008b0a:	230f      	movs	r3, #15
 8008b0c:	0022      	movs	r2, r4
 8008b0e:	401a      	ands	r2, r3
 8008b10:	421c      	tst	r4, r3
 8008b12:	d00a      	beq.n	8008b2a <_strtod_l+0x59a>
 8008b14:	4b15      	ldr	r3, [pc, #84]	; (8008b6c <_strtod_l+0x5dc>)
 8008b16:	00d2      	lsls	r2, r2, #3
 8008b18:	189b      	adds	r3, r3, r2
 8008b1a:	0030      	movs	r0, r6
 8008b1c:	681a      	ldr	r2, [r3, #0]
 8008b1e:	685b      	ldr	r3, [r3, #4]
 8008b20:	0039      	movs	r1, r7
 8008b22:	f7f9 f88f 	bl	8001c44 <__aeabi_ddiv>
 8008b26:	0006      	movs	r6, r0
 8008b28:	000f      	movs	r7, r1
 8008b2a:	1124      	asrs	r4, r4, #4
 8008b2c:	d0d5      	beq.n	8008ada <_strtod_l+0x54a>
 8008b2e:	2c1f      	cmp	r4, #31
 8008b30:	dd28      	ble.n	8008b84 <_strtod_l+0x5f4>
 8008b32:	2300      	movs	r3, #0
 8008b34:	9305      	str	r3, [sp, #20]
 8008b36:	9306      	str	r3, [sp, #24]
 8008b38:	930d      	str	r3, [sp, #52]	; 0x34
 8008b3a:	9308      	str	r3, [sp, #32]
 8008b3c:	2322      	movs	r3, #34	; 0x22
 8008b3e:	9a04      	ldr	r2, [sp, #16]
 8008b40:	2600      	movs	r6, #0
 8008b42:	6013      	str	r3, [r2, #0]
 8008b44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008b46:	2700      	movs	r7, #0
 8008b48:	2b00      	cmp	r3, #0
 8008b4a:	d18d      	bne.n	8008a68 <_strtod_l+0x4d8>
 8008b4c:	e55b      	b.n	8008606 <_strtod_l+0x76>
 8008b4e:	46c0      	nop			; (mov r8, r8)
 8008b50:	00004e1f 	.word	0x00004e1f
 8008b54:	0800a626 	.word	0x0800a626
 8008b58:	0800a84c 	.word	0x0800a84c
 8008b5c:	7ff00000 	.word	0x7ff00000
 8008b60:	0800a61e 	.word	0x0800a61e
 8008b64:	0800a655 	.word	0x0800a655
 8008b68:	0800a9dd 	.word	0x0800a9dd
 8008b6c:	0800a760 	.word	0x0800a760
 8008b70:	0800a738 	.word	0x0800a738
 8008b74:	fcb00000 	.word	0xfcb00000
 8008b78:	7ca00000 	.word	0x7ca00000
 8008b7c:	7c900000 	.word	0x7c900000
 8008b80:	7fefffff 	.word	0x7fefffff
 8008b84:	2310      	movs	r3, #16
 8008b86:	0022      	movs	r2, r4
 8008b88:	401a      	ands	r2, r3
 8008b8a:	9207      	str	r2, [sp, #28]
 8008b8c:	421c      	tst	r4, r3
 8008b8e:	d001      	beq.n	8008b94 <_strtod_l+0x604>
 8008b90:	335a      	adds	r3, #90	; 0x5a
 8008b92:	9307      	str	r3, [sp, #28]
 8008b94:	0030      	movs	r0, r6
 8008b96:	0039      	movs	r1, r7
 8008b98:	2300      	movs	r3, #0
 8008b9a:	4dc4      	ldr	r5, [pc, #784]	; (8008eac <_strtod_l+0x91c>)
 8008b9c:	2201      	movs	r2, #1
 8008b9e:	4214      	tst	r4, r2
 8008ba0:	d004      	beq.n	8008bac <_strtod_l+0x61c>
 8008ba2:	682a      	ldr	r2, [r5, #0]
 8008ba4:	686b      	ldr	r3, [r5, #4]
 8008ba6:	f7f9 fc47 	bl	8002438 <__aeabi_dmul>
 8008baa:	2301      	movs	r3, #1
 8008bac:	1064      	asrs	r4, r4, #1
 8008bae:	3508      	adds	r5, #8
 8008bb0:	2c00      	cmp	r4, #0
 8008bb2:	d1f3      	bne.n	8008b9c <_strtod_l+0x60c>
 8008bb4:	2b00      	cmp	r3, #0
 8008bb6:	d001      	beq.n	8008bbc <_strtod_l+0x62c>
 8008bb8:	0006      	movs	r6, r0
 8008bba:	000f      	movs	r7, r1
 8008bbc:	9b07      	ldr	r3, [sp, #28]
 8008bbe:	2b00      	cmp	r3, #0
 8008bc0:	d00f      	beq.n	8008be2 <_strtod_l+0x652>
 8008bc2:	236b      	movs	r3, #107	; 0x6b
 8008bc4:	007a      	lsls	r2, r7, #1
 8008bc6:	0d52      	lsrs	r2, r2, #21
 8008bc8:	0039      	movs	r1, r7
 8008bca:	1a9b      	subs	r3, r3, r2
 8008bcc:	2b00      	cmp	r3, #0
 8008bce:	dd08      	ble.n	8008be2 <_strtod_l+0x652>
 8008bd0:	2b1f      	cmp	r3, #31
 8008bd2:	dc00      	bgt.n	8008bd6 <_strtod_l+0x646>
 8008bd4:	e121      	b.n	8008e1a <_strtod_l+0x88a>
 8008bd6:	2600      	movs	r6, #0
 8008bd8:	2b34      	cmp	r3, #52	; 0x34
 8008bda:	dc00      	bgt.n	8008bde <_strtod_l+0x64e>
 8008bdc:	e116      	b.n	8008e0c <_strtod_l+0x87c>
 8008bde:	27dc      	movs	r7, #220	; 0xdc
 8008be0:	04bf      	lsls	r7, r7, #18
 8008be2:	2200      	movs	r2, #0
 8008be4:	2300      	movs	r3, #0
 8008be6:	0030      	movs	r0, r6
 8008be8:	0039      	movs	r1, r7
 8008bea:	f7f7 fc2f 	bl	800044c <__aeabi_dcmpeq>
 8008bee:	2800      	cmp	r0, #0
 8008bf0:	d19f      	bne.n	8008b32 <_strtod_l+0x5a2>
 8008bf2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008bf4:	9a08      	ldr	r2, [sp, #32]
 8008bf6:	9300      	str	r3, [sp, #0]
 8008bf8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8008bfa:	9b05      	ldr	r3, [sp, #20]
 8008bfc:	9804      	ldr	r0, [sp, #16]
 8008bfe:	f7ff f89f 	bl	8007d40 <__s2b>
 8008c02:	900d      	str	r0, [sp, #52]	; 0x34
 8008c04:	2800      	cmp	r0, #0
 8008c06:	d100      	bne.n	8008c0a <_strtod_l+0x67a>
 8008c08:	e720      	b.n	8008a4c <_strtod_l+0x4bc>
 8008c0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c0c:	9906      	ldr	r1, [sp, #24]
 8008c0e:	17da      	asrs	r2, r3, #31
 8008c10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008c12:	1a5b      	subs	r3, r3, r1
 8008c14:	401a      	ands	r2, r3
 8008c16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c18:	9215      	str	r2, [sp, #84]	; 0x54
 8008c1a:	43db      	mvns	r3, r3
 8008c1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008c1e:	17db      	asrs	r3, r3, #31
 8008c20:	401a      	ands	r2, r3
 8008c22:	2300      	movs	r3, #0
 8008c24:	9218      	str	r2, [sp, #96]	; 0x60
 8008c26:	9305      	str	r3, [sp, #20]
 8008c28:	9306      	str	r3, [sp, #24]
 8008c2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008c2c:	9804      	ldr	r0, [sp, #16]
 8008c2e:	6859      	ldr	r1, [r3, #4]
 8008c30:	f7fe ffda 	bl	8007be8 <_Balloc>
 8008c34:	9008      	str	r0, [sp, #32]
 8008c36:	2800      	cmp	r0, #0
 8008c38:	d100      	bne.n	8008c3c <_strtod_l+0x6ac>
 8008c3a:	e70c      	b.n	8008a56 <_strtod_l+0x4c6>
 8008c3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008c3e:	300c      	adds	r0, #12
 8008c40:	0019      	movs	r1, r3
 8008c42:	691a      	ldr	r2, [r3, #16]
 8008c44:	310c      	adds	r1, #12
 8008c46:	3202      	adds	r2, #2
 8008c48:	0092      	lsls	r2, r2, #2
 8008c4a:	f000 fd8b 	bl	8009764 <memcpy>
 8008c4e:	ab1e      	add	r3, sp, #120	; 0x78
 8008c50:	9301      	str	r3, [sp, #4]
 8008c52:	ab1d      	add	r3, sp, #116	; 0x74
 8008c54:	9300      	str	r3, [sp, #0]
 8008c56:	0032      	movs	r2, r6
 8008c58:	003b      	movs	r3, r7
 8008c5a:	9804      	ldr	r0, [sp, #16]
 8008c5c:	9610      	str	r6, [sp, #64]	; 0x40
 8008c5e:	9711      	str	r7, [sp, #68]	; 0x44
 8008c60:	f7ff fbb0 	bl	80083c4 <__d2b>
 8008c64:	901c      	str	r0, [sp, #112]	; 0x70
 8008c66:	2800      	cmp	r0, #0
 8008c68:	d100      	bne.n	8008c6c <_strtod_l+0x6dc>
 8008c6a:	e6f4      	b.n	8008a56 <_strtod_l+0x4c6>
 8008c6c:	2101      	movs	r1, #1
 8008c6e:	9804      	ldr	r0, [sp, #16]
 8008c70:	f7ff f8fa 	bl	8007e68 <__i2b>
 8008c74:	9006      	str	r0, [sp, #24]
 8008c76:	2800      	cmp	r0, #0
 8008c78:	d100      	bne.n	8008c7c <_strtod_l+0x6ec>
 8008c7a:	e6ec      	b.n	8008a56 <_strtod_l+0x4c6>
 8008c7c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8008c7e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008c80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8008c82:	1ad4      	subs	r4, r2, r3
 8008c84:	2b00      	cmp	r3, #0
 8008c86:	db01      	blt.n	8008c8c <_strtod_l+0x6fc>
 8008c88:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8008c8a:	195d      	adds	r5, r3, r5
 8008c8c:	9907      	ldr	r1, [sp, #28]
 8008c8e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8008c90:	1a5b      	subs	r3, r3, r1
 8008c92:	2136      	movs	r1, #54	; 0x36
 8008c94:	189b      	adds	r3, r3, r2
 8008c96:	1a8a      	subs	r2, r1, r2
 8008c98:	4985      	ldr	r1, [pc, #532]	; (8008eb0 <_strtod_l+0x920>)
 8008c9a:	2001      	movs	r0, #1
 8008c9c:	468c      	mov	ip, r1
 8008c9e:	2100      	movs	r1, #0
 8008ca0:	3b01      	subs	r3, #1
 8008ca2:	9114      	str	r1, [sp, #80]	; 0x50
 8008ca4:	9012      	str	r0, [sp, #72]	; 0x48
 8008ca6:	4563      	cmp	r3, ip
 8008ca8:	da07      	bge.n	8008cba <_strtod_l+0x72a>
 8008caa:	4661      	mov	r1, ip
 8008cac:	1ac9      	subs	r1, r1, r3
 8008cae:	1a52      	subs	r2, r2, r1
 8008cb0:	291f      	cmp	r1, #31
 8008cb2:	dd00      	ble.n	8008cb6 <_strtod_l+0x726>
 8008cb4:	e0b6      	b.n	8008e24 <_strtod_l+0x894>
 8008cb6:	4088      	lsls	r0, r1
 8008cb8:	9012      	str	r0, [sp, #72]	; 0x48
 8008cba:	18ab      	adds	r3, r5, r2
 8008cbc:	930c      	str	r3, [sp, #48]	; 0x30
 8008cbe:	18a4      	adds	r4, r4, r2
 8008cc0:	9b07      	ldr	r3, [sp, #28]
 8008cc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008cc4:	191c      	adds	r4, r3, r4
 8008cc6:	002b      	movs	r3, r5
 8008cc8:	4295      	cmp	r5, r2
 8008cca:	dd00      	ble.n	8008cce <_strtod_l+0x73e>
 8008ccc:	0013      	movs	r3, r2
 8008cce:	42a3      	cmp	r3, r4
 8008cd0:	dd00      	ble.n	8008cd4 <_strtod_l+0x744>
 8008cd2:	0023      	movs	r3, r4
 8008cd4:	2b00      	cmp	r3, #0
 8008cd6:	dd04      	ble.n	8008ce2 <_strtod_l+0x752>
 8008cd8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008cda:	1ae4      	subs	r4, r4, r3
 8008cdc:	1ad2      	subs	r2, r2, r3
 8008cde:	920c      	str	r2, [sp, #48]	; 0x30
 8008ce0:	1aed      	subs	r5, r5, r3
 8008ce2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008ce4:	2b00      	cmp	r3, #0
 8008ce6:	dd17      	ble.n	8008d18 <_strtod_l+0x788>
 8008ce8:	001a      	movs	r2, r3
 8008cea:	9906      	ldr	r1, [sp, #24]
 8008cec:	9804      	ldr	r0, [sp, #16]
 8008cee:	f7ff f983 	bl	8007ff8 <__pow5mult>
 8008cf2:	9006      	str	r0, [sp, #24]
 8008cf4:	2800      	cmp	r0, #0
 8008cf6:	d100      	bne.n	8008cfa <_strtod_l+0x76a>
 8008cf8:	e6ad      	b.n	8008a56 <_strtod_l+0x4c6>
 8008cfa:	0001      	movs	r1, r0
 8008cfc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8008cfe:	9804      	ldr	r0, [sp, #16]
 8008d00:	f7ff f8ca 	bl	8007e98 <__multiply>
 8008d04:	900e      	str	r0, [sp, #56]	; 0x38
 8008d06:	2800      	cmp	r0, #0
 8008d08:	d100      	bne.n	8008d0c <_strtod_l+0x77c>
 8008d0a:	e6a4      	b.n	8008a56 <_strtod_l+0x4c6>
 8008d0c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008d0e:	9804      	ldr	r0, [sp, #16]
 8008d10:	f7fe ffae 	bl	8007c70 <_Bfree>
 8008d14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008d16:	931c      	str	r3, [sp, #112]	; 0x70
 8008d18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008d1a:	2b00      	cmp	r3, #0
 8008d1c:	dd00      	ble.n	8008d20 <_strtod_l+0x790>
 8008d1e:	e087      	b.n	8008e30 <_strtod_l+0x8a0>
 8008d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008d22:	2b00      	cmp	r3, #0
 8008d24:	dd08      	ble.n	8008d38 <_strtod_l+0x7a8>
 8008d26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008d28:	9908      	ldr	r1, [sp, #32]
 8008d2a:	9804      	ldr	r0, [sp, #16]
 8008d2c:	f7ff f964 	bl	8007ff8 <__pow5mult>
 8008d30:	9008      	str	r0, [sp, #32]
 8008d32:	2800      	cmp	r0, #0
 8008d34:	d100      	bne.n	8008d38 <_strtod_l+0x7a8>
 8008d36:	e68e      	b.n	8008a56 <_strtod_l+0x4c6>
 8008d38:	2c00      	cmp	r4, #0
 8008d3a:	dd08      	ble.n	8008d4e <_strtod_l+0x7be>
 8008d3c:	0022      	movs	r2, r4
 8008d3e:	9908      	ldr	r1, [sp, #32]
 8008d40:	9804      	ldr	r0, [sp, #16]
 8008d42:	f7ff f9b5 	bl	80080b0 <__lshift>
 8008d46:	9008      	str	r0, [sp, #32]
 8008d48:	2800      	cmp	r0, #0
 8008d4a:	d100      	bne.n	8008d4e <_strtod_l+0x7be>
 8008d4c:	e683      	b.n	8008a56 <_strtod_l+0x4c6>
 8008d4e:	2d00      	cmp	r5, #0
 8008d50:	dd08      	ble.n	8008d64 <_strtod_l+0x7d4>
 8008d52:	002a      	movs	r2, r5
 8008d54:	9906      	ldr	r1, [sp, #24]
 8008d56:	9804      	ldr	r0, [sp, #16]
 8008d58:	f7ff f9aa 	bl	80080b0 <__lshift>
 8008d5c:	9006      	str	r0, [sp, #24]
 8008d5e:	2800      	cmp	r0, #0
 8008d60:	d100      	bne.n	8008d64 <_strtod_l+0x7d4>
 8008d62:	e678      	b.n	8008a56 <_strtod_l+0x4c6>
 8008d64:	9a08      	ldr	r2, [sp, #32]
 8008d66:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008d68:	9804      	ldr	r0, [sp, #16]
 8008d6a:	f7ff fa2b 	bl	80081c4 <__mdiff>
 8008d6e:	9005      	str	r0, [sp, #20]
 8008d70:	2800      	cmp	r0, #0
 8008d72:	d100      	bne.n	8008d76 <_strtod_l+0x7e6>
 8008d74:	e66f      	b.n	8008a56 <_strtod_l+0x4c6>
 8008d76:	2200      	movs	r2, #0
 8008d78:	68c3      	ldr	r3, [r0, #12]
 8008d7a:	9906      	ldr	r1, [sp, #24]
 8008d7c:	60c2      	str	r2, [r0, #12]
 8008d7e:	930c      	str	r3, [sp, #48]	; 0x30
 8008d80:	f7ff fa04 	bl	800818c <__mcmp>
 8008d84:	2800      	cmp	r0, #0
 8008d86:	da5d      	bge.n	8008e44 <_strtod_l+0x8b4>
 8008d88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008d8a:	4333      	orrs	r3, r6
 8008d8c:	d000      	beq.n	8008d90 <_strtod_l+0x800>
 8008d8e:	e088      	b.n	8008ea2 <_strtod_l+0x912>
 8008d90:	033b      	lsls	r3, r7, #12
 8008d92:	d000      	beq.n	8008d96 <_strtod_l+0x806>
 8008d94:	e085      	b.n	8008ea2 <_strtod_l+0x912>
 8008d96:	22d6      	movs	r2, #214	; 0xd6
 8008d98:	4b46      	ldr	r3, [pc, #280]	; (8008eb4 <_strtod_l+0x924>)
 8008d9a:	04d2      	lsls	r2, r2, #19
 8008d9c:	403b      	ands	r3, r7
 8008d9e:	4293      	cmp	r3, r2
 8008da0:	d97f      	bls.n	8008ea2 <_strtod_l+0x912>
 8008da2:	9b05      	ldr	r3, [sp, #20]
 8008da4:	695b      	ldr	r3, [r3, #20]
 8008da6:	2b00      	cmp	r3, #0
 8008da8:	d103      	bne.n	8008db2 <_strtod_l+0x822>
 8008daa:	9b05      	ldr	r3, [sp, #20]
 8008dac:	691b      	ldr	r3, [r3, #16]
 8008dae:	2b01      	cmp	r3, #1
 8008db0:	dd77      	ble.n	8008ea2 <_strtod_l+0x912>
 8008db2:	9905      	ldr	r1, [sp, #20]
 8008db4:	2201      	movs	r2, #1
 8008db6:	9804      	ldr	r0, [sp, #16]
 8008db8:	f7ff f97a 	bl	80080b0 <__lshift>
 8008dbc:	9906      	ldr	r1, [sp, #24]
 8008dbe:	9005      	str	r0, [sp, #20]
 8008dc0:	f7ff f9e4 	bl	800818c <__mcmp>
 8008dc4:	2800      	cmp	r0, #0
 8008dc6:	dd6c      	ble.n	8008ea2 <_strtod_l+0x912>
 8008dc8:	9907      	ldr	r1, [sp, #28]
 8008dca:	003b      	movs	r3, r7
 8008dcc:	4a39      	ldr	r2, [pc, #228]	; (8008eb4 <_strtod_l+0x924>)
 8008dce:	2900      	cmp	r1, #0
 8008dd0:	d100      	bne.n	8008dd4 <_strtod_l+0x844>
 8008dd2:	e094      	b.n	8008efe <_strtod_l+0x96e>
 8008dd4:	0011      	movs	r1, r2
 8008dd6:	20d6      	movs	r0, #214	; 0xd6
 8008dd8:	4039      	ands	r1, r7
 8008dda:	04c0      	lsls	r0, r0, #19
 8008ddc:	4281      	cmp	r1, r0
 8008dde:	dd00      	ble.n	8008de2 <_strtod_l+0x852>
 8008de0:	e08d      	b.n	8008efe <_strtod_l+0x96e>
 8008de2:	23dc      	movs	r3, #220	; 0xdc
 8008de4:	049b      	lsls	r3, r3, #18
 8008de6:	4299      	cmp	r1, r3
 8008de8:	dc00      	bgt.n	8008dec <_strtod_l+0x85c>
 8008dea:	e6a7      	b.n	8008b3c <_strtod_l+0x5ac>
 8008dec:	0030      	movs	r0, r6
 8008dee:	0039      	movs	r1, r7
 8008df0:	4b31      	ldr	r3, [pc, #196]	; (8008eb8 <_strtod_l+0x928>)
 8008df2:	2200      	movs	r2, #0
 8008df4:	f7f9 fb20 	bl	8002438 <__aeabi_dmul>
 8008df8:	4b2e      	ldr	r3, [pc, #184]	; (8008eb4 <_strtod_l+0x924>)
 8008dfa:	0006      	movs	r6, r0
 8008dfc:	000f      	movs	r7, r1
 8008dfe:	420b      	tst	r3, r1
 8008e00:	d000      	beq.n	8008e04 <_strtod_l+0x874>
 8008e02:	e631      	b.n	8008a68 <_strtod_l+0x4d8>
 8008e04:	2322      	movs	r3, #34	; 0x22
 8008e06:	9a04      	ldr	r2, [sp, #16]
 8008e08:	6013      	str	r3, [r2, #0]
 8008e0a:	e62d      	b.n	8008a68 <_strtod_l+0x4d8>
 8008e0c:	234b      	movs	r3, #75	; 0x4b
 8008e0e:	1a9a      	subs	r2, r3, r2
 8008e10:	3b4c      	subs	r3, #76	; 0x4c
 8008e12:	4093      	lsls	r3, r2
 8008e14:	4019      	ands	r1, r3
 8008e16:	000f      	movs	r7, r1
 8008e18:	e6e3      	b.n	8008be2 <_strtod_l+0x652>
 8008e1a:	2201      	movs	r2, #1
 8008e1c:	4252      	negs	r2, r2
 8008e1e:	409a      	lsls	r2, r3
 8008e20:	4016      	ands	r6, r2
 8008e22:	e6de      	b.n	8008be2 <_strtod_l+0x652>
 8008e24:	4925      	ldr	r1, [pc, #148]	; (8008ebc <_strtod_l+0x92c>)
 8008e26:	1acb      	subs	r3, r1, r3
 8008e28:	0001      	movs	r1, r0
 8008e2a:	4099      	lsls	r1, r3
 8008e2c:	9114      	str	r1, [sp, #80]	; 0x50
 8008e2e:	e743      	b.n	8008cb8 <_strtod_l+0x728>
 8008e30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008e32:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008e34:	9804      	ldr	r0, [sp, #16]
 8008e36:	f7ff f93b 	bl	80080b0 <__lshift>
 8008e3a:	901c      	str	r0, [sp, #112]	; 0x70
 8008e3c:	2800      	cmp	r0, #0
 8008e3e:	d000      	beq.n	8008e42 <_strtod_l+0x8b2>
 8008e40:	e76e      	b.n	8008d20 <_strtod_l+0x790>
 8008e42:	e608      	b.n	8008a56 <_strtod_l+0x4c6>
 8008e44:	970e      	str	r7, [sp, #56]	; 0x38
 8008e46:	2800      	cmp	r0, #0
 8008e48:	d177      	bne.n	8008f3a <_strtod_l+0x9aa>
 8008e4a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008e4c:	033b      	lsls	r3, r7, #12
 8008e4e:	0b1b      	lsrs	r3, r3, #12
 8008e50:	2a00      	cmp	r2, #0
 8008e52:	d039      	beq.n	8008ec8 <_strtod_l+0x938>
 8008e54:	4a1a      	ldr	r2, [pc, #104]	; (8008ec0 <_strtod_l+0x930>)
 8008e56:	4293      	cmp	r3, r2
 8008e58:	d139      	bne.n	8008ece <_strtod_l+0x93e>
 8008e5a:	2101      	movs	r1, #1
 8008e5c:	9b07      	ldr	r3, [sp, #28]
 8008e5e:	4249      	negs	r1, r1
 8008e60:	0032      	movs	r2, r6
 8008e62:	0008      	movs	r0, r1
 8008e64:	2b00      	cmp	r3, #0
 8008e66:	d00b      	beq.n	8008e80 <_strtod_l+0x8f0>
 8008e68:	24d4      	movs	r4, #212	; 0xd4
 8008e6a:	4b12      	ldr	r3, [pc, #72]	; (8008eb4 <_strtod_l+0x924>)
 8008e6c:	0008      	movs	r0, r1
 8008e6e:	403b      	ands	r3, r7
 8008e70:	04e4      	lsls	r4, r4, #19
 8008e72:	42a3      	cmp	r3, r4
 8008e74:	d804      	bhi.n	8008e80 <_strtod_l+0x8f0>
 8008e76:	306c      	adds	r0, #108	; 0x6c
 8008e78:	0d1b      	lsrs	r3, r3, #20
 8008e7a:	1ac3      	subs	r3, r0, r3
 8008e7c:	4099      	lsls	r1, r3
 8008e7e:	0008      	movs	r0, r1
 8008e80:	4282      	cmp	r2, r0
 8008e82:	d124      	bne.n	8008ece <_strtod_l+0x93e>
 8008e84:	4b0f      	ldr	r3, [pc, #60]	; (8008ec4 <_strtod_l+0x934>)
 8008e86:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008e88:	4299      	cmp	r1, r3
 8008e8a:	d102      	bne.n	8008e92 <_strtod_l+0x902>
 8008e8c:	3201      	adds	r2, #1
 8008e8e:	d100      	bne.n	8008e92 <_strtod_l+0x902>
 8008e90:	e5e1      	b.n	8008a56 <_strtod_l+0x4c6>
 8008e92:	4b08      	ldr	r3, [pc, #32]	; (8008eb4 <_strtod_l+0x924>)
 8008e94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008e96:	2600      	movs	r6, #0
 8008e98:	401a      	ands	r2, r3
 8008e9a:	0013      	movs	r3, r2
 8008e9c:	2280      	movs	r2, #128	; 0x80
 8008e9e:	0352      	lsls	r2, r2, #13
 8008ea0:	189f      	adds	r7, r3, r2
 8008ea2:	9b07      	ldr	r3, [sp, #28]
 8008ea4:	2b00      	cmp	r3, #0
 8008ea6:	d1a1      	bne.n	8008dec <_strtod_l+0x85c>
 8008ea8:	e5de      	b.n	8008a68 <_strtod_l+0x4d8>
 8008eaa:	46c0      	nop			; (mov r8, r8)
 8008eac:	0800a860 	.word	0x0800a860
 8008eb0:	fffffc02 	.word	0xfffffc02
 8008eb4:	7ff00000 	.word	0x7ff00000
 8008eb8:	39500000 	.word	0x39500000
 8008ebc:	fffffbe2 	.word	0xfffffbe2
 8008ec0:	000fffff 	.word	0x000fffff
 8008ec4:	7fefffff 	.word	0x7fefffff
 8008ec8:	4333      	orrs	r3, r6
 8008eca:	d100      	bne.n	8008ece <_strtod_l+0x93e>
 8008ecc:	e77c      	b.n	8008dc8 <_strtod_l+0x838>
 8008ece:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008ed0:	2b00      	cmp	r3, #0
 8008ed2:	d01d      	beq.n	8008f10 <_strtod_l+0x980>
 8008ed4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008ed6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008ed8:	4213      	tst	r3, r2
 8008eda:	d0e2      	beq.n	8008ea2 <_strtod_l+0x912>
 8008edc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008ede:	0030      	movs	r0, r6
 8008ee0:	0039      	movs	r1, r7
 8008ee2:	9a07      	ldr	r2, [sp, #28]
 8008ee4:	2b00      	cmp	r3, #0
 8008ee6:	d017      	beq.n	8008f18 <_strtod_l+0x988>
 8008ee8:	f7ff fb3a 	bl	8008560 <sulp>
 8008eec:	0002      	movs	r2, r0
 8008eee:	000b      	movs	r3, r1
 8008ef0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8008ef2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008ef4:	f7f8 fb46 	bl	8001584 <__aeabi_dadd>
 8008ef8:	0006      	movs	r6, r0
 8008efa:	000f      	movs	r7, r1
 8008efc:	e7d1      	b.n	8008ea2 <_strtod_l+0x912>
 8008efe:	2601      	movs	r6, #1
 8008f00:	4013      	ands	r3, r2
 8008f02:	4a98      	ldr	r2, [pc, #608]	; (8009164 <_strtod_l+0xbd4>)
 8008f04:	4276      	negs	r6, r6
 8008f06:	189b      	adds	r3, r3, r2
 8008f08:	4a97      	ldr	r2, [pc, #604]	; (8009168 <_strtod_l+0xbd8>)
 8008f0a:	431a      	orrs	r2, r3
 8008f0c:	0017      	movs	r7, r2
 8008f0e:	e7c8      	b.n	8008ea2 <_strtod_l+0x912>
 8008f10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008f12:	4233      	tst	r3, r6
 8008f14:	d0c5      	beq.n	8008ea2 <_strtod_l+0x912>
 8008f16:	e7e1      	b.n	8008edc <_strtod_l+0x94c>
 8008f18:	f7ff fb22 	bl	8008560 <sulp>
 8008f1c:	0002      	movs	r2, r0
 8008f1e:	000b      	movs	r3, r1
 8008f20:	9810      	ldr	r0, [sp, #64]	; 0x40
 8008f22:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008f24:	f7f9 fd4a 	bl	80029bc <__aeabi_dsub>
 8008f28:	2200      	movs	r2, #0
 8008f2a:	2300      	movs	r3, #0
 8008f2c:	0006      	movs	r6, r0
 8008f2e:	000f      	movs	r7, r1
 8008f30:	f7f7 fa8c 	bl	800044c <__aeabi_dcmpeq>
 8008f34:	2800      	cmp	r0, #0
 8008f36:	d0b4      	beq.n	8008ea2 <_strtod_l+0x912>
 8008f38:	e600      	b.n	8008b3c <_strtod_l+0x5ac>
 8008f3a:	9906      	ldr	r1, [sp, #24]
 8008f3c:	9805      	ldr	r0, [sp, #20]
 8008f3e:	f7ff faa1 	bl	8008484 <__ratio>
 8008f42:	2380      	movs	r3, #128	; 0x80
 8008f44:	2200      	movs	r2, #0
 8008f46:	05db      	lsls	r3, r3, #23
 8008f48:	0004      	movs	r4, r0
 8008f4a:	000d      	movs	r5, r1
 8008f4c:	f7f7 fa8e 	bl	800046c <__aeabi_dcmple>
 8008f50:	2800      	cmp	r0, #0
 8008f52:	d06d      	beq.n	8009030 <_strtod_l+0xaa0>
 8008f54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008f56:	2b00      	cmp	r3, #0
 8008f58:	d000      	beq.n	8008f5c <_strtod_l+0x9cc>
 8008f5a:	e07e      	b.n	800905a <_strtod_l+0xaca>
 8008f5c:	2e00      	cmp	r6, #0
 8008f5e:	d158      	bne.n	8009012 <_strtod_l+0xa82>
 8008f60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008f62:	031b      	lsls	r3, r3, #12
 8008f64:	d000      	beq.n	8008f68 <_strtod_l+0x9d8>
 8008f66:	e07f      	b.n	8009068 <_strtod_l+0xad8>
 8008f68:	2200      	movs	r2, #0
 8008f6a:	0020      	movs	r0, r4
 8008f6c:	0029      	movs	r1, r5
 8008f6e:	4b7f      	ldr	r3, [pc, #508]	; (800916c <_strtod_l+0xbdc>)
 8008f70:	f7f7 fa72 	bl	8000458 <__aeabi_dcmplt>
 8008f74:	2800      	cmp	r0, #0
 8008f76:	d158      	bne.n	800902a <_strtod_l+0xa9a>
 8008f78:	0020      	movs	r0, r4
 8008f7a:	0029      	movs	r1, r5
 8008f7c:	2200      	movs	r2, #0
 8008f7e:	4b7c      	ldr	r3, [pc, #496]	; (8009170 <_strtod_l+0xbe0>)
 8008f80:	f7f9 fa5a 	bl	8002438 <__aeabi_dmul>
 8008f84:	0004      	movs	r4, r0
 8008f86:	000d      	movs	r5, r1
 8008f88:	2380      	movs	r3, #128	; 0x80
 8008f8a:	061b      	lsls	r3, r3, #24
 8008f8c:	940a      	str	r4, [sp, #40]	; 0x28
 8008f8e:	18eb      	adds	r3, r5, r3
 8008f90:	930b      	str	r3, [sp, #44]	; 0x2c
 8008f92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008f94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f96:	9212      	str	r2, [sp, #72]	; 0x48
 8008f98:	9313      	str	r3, [sp, #76]	; 0x4c
 8008f9a:	4a76      	ldr	r2, [pc, #472]	; (8009174 <_strtod_l+0xbe4>)
 8008f9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008f9e:	4013      	ands	r3, r2
 8008fa0:	9314      	str	r3, [sp, #80]	; 0x50
 8008fa2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008fa4:	4b74      	ldr	r3, [pc, #464]	; (8009178 <_strtod_l+0xbe8>)
 8008fa6:	429a      	cmp	r2, r3
 8008fa8:	d000      	beq.n	8008fac <_strtod_l+0xa1c>
 8008faa:	e091      	b.n	80090d0 <_strtod_l+0xb40>
 8008fac:	4a73      	ldr	r2, [pc, #460]	; (800917c <_strtod_l+0xbec>)
 8008fae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008fb0:	4694      	mov	ip, r2
 8008fb2:	4463      	add	r3, ip
 8008fb4:	001f      	movs	r7, r3
 8008fb6:	0030      	movs	r0, r6
 8008fb8:	0019      	movs	r1, r3
 8008fba:	f7ff f99b 	bl	80082f4 <__ulp>
 8008fbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008fc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008fc2:	f7f9 fa39 	bl	8002438 <__aeabi_dmul>
 8008fc6:	0032      	movs	r2, r6
 8008fc8:	003b      	movs	r3, r7
 8008fca:	f7f8 fadb 	bl	8001584 <__aeabi_dadd>
 8008fce:	4a69      	ldr	r2, [pc, #420]	; (8009174 <_strtod_l+0xbe4>)
 8008fd0:	4b6b      	ldr	r3, [pc, #428]	; (8009180 <_strtod_l+0xbf0>)
 8008fd2:	0006      	movs	r6, r0
 8008fd4:	400a      	ands	r2, r1
 8008fd6:	429a      	cmp	r2, r3
 8008fd8:	d949      	bls.n	800906e <_strtod_l+0xade>
 8008fda:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008fdc:	4b69      	ldr	r3, [pc, #420]	; (8009184 <_strtod_l+0xbf4>)
 8008fde:	429a      	cmp	r2, r3
 8008fe0:	d103      	bne.n	8008fea <_strtod_l+0xa5a>
 8008fe2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008fe4:	3301      	adds	r3, #1
 8008fe6:	d100      	bne.n	8008fea <_strtod_l+0xa5a>
 8008fe8:	e535      	b.n	8008a56 <_strtod_l+0x4c6>
 8008fea:	2601      	movs	r6, #1
 8008fec:	4f65      	ldr	r7, [pc, #404]	; (8009184 <_strtod_l+0xbf4>)
 8008fee:	4276      	negs	r6, r6
 8008ff0:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008ff2:	9804      	ldr	r0, [sp, #16]
 8008ff4:	f7fe fe3c 	bl	8007c70 <_Bfree>
 8008ff8:	9908      	ldr	r1, [sp, #32]
 8008ffa:	9804      	ldr	r0, [sp, #16]
 8008ffc:	f7fe fe38 	bl	8007c70 <_Bfree>
 8009000:	9906      	ldr	r1, [sp, #24]
 8009002:	9804      	ldr	r0, [sp, #16]
 8009004:	f7fe fe34 	bl	8007c70 <_Bfree>
 8009008:	9905      	ldr	r1, [sp, #20]
 800900a:	9804      	ldr	r0, [sp, #16]
 800900c:	f7fe fe30 	bl	8007c70 <_Bfree>
 8009010:	e60b      	b.n	8008c2a <_strtod_l+0x69a>
 8009012:	2e01      	cmp	r6, #1
 8009014:	d103      	bne.n	800901e <_strtod_l+0xa8e>
 8009016:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009018:	2b00      	cmp	r3, #0
 800901a:	d100      	bne.n	800901e <_strtod_l+0xa8e>
 800901c:	e58e      	b.n	8008b3c <_strtod_l+0x5ac>
 800901e:	2300      	movs	r3, #0
 8009020:	4c59      	ldr	r4, [pc, #356]	; (8009188 <_strtod_l+0xbf8>)
 8009022:	930a      	str	r3, [sp, #40]	; 0x28
 8009024:	940b      	str	r4, [sp, #44]	; 0x2c
 8009026:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8009028:	e01c      	b.n	8009064 <_strtod_l+0xad4>
 800902a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800902c:	4d50      	ldr	r5, [pc, #320]	; (8009170 <_strtod_l+0xbe0>)
 800902e:	e7ab      	b.n	8008f88 <_strtod_l+0x9f8>
 8009030:	2200      	movs	r2, #0
 8009032:	0020      	movs	r0, r4
 8009034:	0029      	movs	r1, r5
 8009036:	4b4e      	ldr	r3, [pc, #312]	; (8009170 <_strtod_l+0xbe0>)
 8009038:	f7f9 f9fe 	bl	8002438 <__aeabi_dmul>
 800903c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800903e:	0004      	movs	r4, r0
 8009040:	000b      	movs	r3, r1
 8009042:	000d      	movs	r5, r1
 8009044:	2a00      	cmp	r2, #0
 8009046:	d104      	bne.n	8009052 <_strtod_l+0xac2>
 8009048:	2280      	movs	r2, #128	; 0x80
 800904a:	0612      	lsls	r2, r2, #24
 800904c:	900a      	str	r0, [sp, #40]	; 0x28
 800904e:	188b      	adds	r3, r1, r2
 8009050:	e79e      	b.n	8008f90 <_strtod_l+0xa00>
 8009052:	0002      	movs	r2, r0
 8009054:	920a      	str	r2, [sp, #40]	; 0x28
 8009056:	930b      	str	r3, [sp, #44]	; 0x2c
 8009058:	e79b      	b.n	8008f92 <_strtod_l+0xa02>
 800905a:	2300      	movs	r3, #0
 800905c:	4c43      	ldr	r4, [pc, #268]	; (800916c <_strtod_l+0xbdc>)
 800905e:	930a      	str	r3, [sp, #40]	; 0x28
 8009060:	940b      	str	r4, [sp, #44]	; 0x2c
 8009062:	2400      	movs	r4, #0
 8009064:	4d41      	ldr	r5, [pc, #260]	; (800916c <_strtod_l+0xbdc>)
 8009066:	e794      	b.n	8008f92 <_strtod_l+0xa02>
 8009068:	2300      	movs	r3, #0
 800906a:	4c47      	ldr	r4, [pc, #284]	; (8009188 <_strtod_l+0xbf8>)
 800906c:	e7f7      	b.n	800905e <_strtod_l+0xace>
 800906e:	23d4      	movs	r3, #212	; 0xd4
 8009070:	049b      	lsls	r3, r3, #18
 8009072:	18cf      	adds	r7, r1, r3
 8009074:	9b07      	ldr	r3, [sp, #28]
 8009076:	970e      	str	r7, [sp, #56]	; 0x38
 8009078:	2b00      	cmp	r3, #0
 800907a:	d1b9      	bne.n	8008ff0 <_strtod_l+0xa60>
 800907c:	4b3d      	ldr	r3, [pc, #244]	; (8009174 <_strtod_l+0xbe4>)
 800907e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8009080:	403b      	ands	r3, r7
 8009082:	429a      	cmp	r2, r3
 8009084:	d1b4      	bne.n	8008ff0 <_strtod_l+0xa60>
 8009086:	0020      	movs	r0, r4
 8009088:	0029      	movs	r1, r5
 800908a:	f7f7 fab3 	bl	80005f4 <__aeabi_d2lz>
 800908e:	f7f7 faed 	bl	800066c <__aeabi_l2d>
 8009092:	0002      	movs	r2, r0
 8009094:	000b      	movs	r3, r1
 8009096:	0020      	movs	r0, r4
 8009098:	0029      	movs	r1, r5
 800909a:	f7f9 fc8f 	bl	80029bc <__aeabi_dsub>
 800909e:	033b      	lsls	r3, r7, #12
 80090a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80090a2:	0b1b      	lsrs	r3, r3, #12
 80090a4:	4333      	orrs	r3, r6
 80090a6:	4313      	orrs	r3, r2
 80090a8:	0004      	movs	r4, r0
 80090aa:	000d      	movs	r5, r1
 80090ac:	4a37      	ldr	r2, [pc, #220]	; (800918c <_strtod_l+0xbfc>)
 80090ae:	2b00      	cmp	r3, #0
 80090b0:	d054      	beq.n	800915c <_strtod_l+0xbcc>
 80090b2:	4b37      	ldr	r3, [pc, #220]	; (8009190 <_strtod_l+0xc00>)
 80090b4:	f7f7 f9d0 	bl	8000458 <__aeabi_dcmplt>
 80090b8:	2800      	cmp	r0, #0
 80090ba:	d000      	beq.n	80090be <_strtod_l+0xb2e>
 80090bc:	e4d4      	b.n	8008a68 <_strtod_l+0x4d8>
 80090be:	0020      	movs	r0, r4
 80090c0:	0029      	movs	r1, r5
 80090c2:	4a34      	ldr	r2, [pc, #208]	; (8009194 <_strtod_l+0xc04>)
 80090c4:	4b2a      	ldr	r3, [pc, #168]	; (8009170 <_strtod_l+0xbe0>)
 80090c6:	f7f7 f9db 	bl	8000480 <__aeabi_dcmpgt>
 80090ca:	2800      	cmp	r0, #0
 80090cc:	d090      	beq.n	8008ff0 <_strtod_l+0xa60>
 80090ce:	e4cb      	b.n	8008a68 <_strtod_l+0x4d8>
 80090d0:	9b07      	ldr	r3, [sp, #28]
 80090d2:	2b00      	cmp	r3, #0
 80090d4:	d02b      	beq.n	800912e <_strtod_l+0xb9e>
 80090d6:	23d4      	movs	r3, #212	; 0xd4
 80090d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80090da:	04db      	lsls	r3, r3, #19
 80090dc:	429a      	cmp	r2, r3
 80090de:	d826      	bhi.n	800912e <_strtod_l+0xb9e>
 80090e0:	0020      	movs	r0, r4
 80090e2:	0029      	movs	r1, r5
 80090e4:	4a2c      	ldr	r2, [pc, #176]	; (8009198 <_strtod_l+0xc08>)
 80090e6:	4b2d      	ldr	r3, [pc, #180]	; (800919c <_strtod_l+0xc0c>)
 80090e8:	f7f7 f9c0 	bl	800046c <__aeabi_dcmple>
 80090ec:	2800      	cmp	r0, #0
 80090ee:	d017      	beq.n	8009120 <_strtod_l+0xb90>
 80090f0:	0020      	movs	r0, r4
 80090f2:	0029      	movs	r1, r5
 80090f4:	f7f7 fa60 	bl	80005b8 <__aeabi_d2uiz>
 80090f8:	2800      	cmp	r0, #0
 80090fa:	d100      	bne.n	80090fe <_strtod_l+0xb6e>
 80090fc:	3001      	adds	r0, #1
 80090fe:	f7fa f863 	bl	80031c8 <__aeabi_ui2d>
 8009102:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009104:	0004      	movs	r4, r0
 8009106:	000b      	movs	r3, r1
 8009108:	000d      	movs	r5, r1
 800910a:	2a00      	cmp	r2, #0
 800910c:	d122      	bne.n	8009154 <_strtod_l+0xbc4>
 800910e:	2280      	movs	r2, #128	; 0x80
 8009110:	0612      	lsls	r2, r2, #24
 8009112:	188b      	adds	r3, r1, r2
 8009114:	9016      	str	r0, [sp, #88]	; 0x58
 8009116:	9317      	str	r3, [sp, #92]	; 0x5c
 8009118:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800911a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800911c:	9212      	str	r2, [sp, #72]	; 0x48
 800911e:	9313      	str	r3, [sp, #76]	; 0x4c
 8009120:	22d6      	movs	r2, #214	; 0xd6
 8009122:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009124:	04d2      	lsls	r2, r2, #19
 8009126:	189b      	adds	r3, r3, r2
 8009128:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800912a:	1a9b      	subs	r3, r3, r2
 800912c:	9313      	str	r3, [sp, #76]	; 0x4c
 800912e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009130:	9911      	ldr	r1, [sp, #68]	; 0x44
 8009132:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8009134:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8009136:	f7ff f8dd 	bl	80082f4 <__ulp>
 800913a:	0002      	movs	r2, r0
 800913c:	000b      	movs	r3, r1
 800913e:	0030      	movs	r0, r6
 8009140:	0039      	movs	r1, r7
 8009142:	f7f9 f979 	bl	8002438 <__aeabi_dmul>
 8009146:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8009148:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800914a:	f7f8 fa1b 	bl	8001584 <__aeabi_dadd>
 800914e:	0006      	movs	r6, r0
 8009150:	000f      	movs	r7, r1
 8009152:	e78f      	b.n	8009074 <_strtod_l+0xae4>
 8009154:	0002      	movs	r2, r0
 8009156:	9216      	str	r2, [sp, #88]	; 0x58
 8009158:	9317      	str	r3, [sp, #92]	; 0x5c
 800915a:	e7dd      	b.n	8009118 <_strtod_l+0xb88>
 800915c:	4b10      	ldr	r3, [pc, #64]	; (80091a0 <_strtod_l+0xc10>)
 800915e:	f7f7 f97b 	bl	8000458 <__aeabi_dcmplt>
 8009162:	e7b2      	b.n	80090ca <_strtod_l+0xb3a>
 8009164:	fff00000 	.word	0xfff00000
 8009168:	000fffff 	.word	0x000fffff
 800916c:	3ff00000 	.word	0x3ff00000
 8009170:	3fe00000 	.word	0x3fe00000
 8009174:	7ff00000 	.word	0x7ff00000
 8009178:	7fe00000 	.word	0x7fe00000
 800917c:	fcb00000 	.word	0xfcb00000
 8009180:	7c9fffff 	.word	0x7c9fffff
 8009184:	7fefffff 	.word	0x7fefffff
 8009188:	bff00000 	.word	0xbff00000
 800918c:	94a03595 	.word	0x94a03595
 8009190:	3fdfffff 	.word	0x3fdfffff
 8009194:	35afe535 	.word	0x35afe535
 8009198:	ffc00000 	.word	0xffc00000
 800919c:	41dfffff 	.word	0x41dfffff
 80091a0:	3fcfffff 	.word	0x3fcfffff

080091a4 <_strtod_r>:
 80091a4:	b510      	push	{r4, lr}
 80091a6:	4b02      	ldr	r3, [pc, #8]	; (80091b0 <_strtod_r+0xc>)
 80091a8:	f7ff f9f2 	bl	8008590 <_strtod_l>
 80091ac:	bd10      	pop	{r4, pc}
 80091ae:	46c0      	nop			; (mov r8, r8)
 80091b0:	20000068 	.word	0x20000068

080091b4 <_strtol_l.constprop.0>:
 80091b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091b6:	b087      	sub	sp, #28
 80091b8:	001e      	movs	r6, r3
 80091ba:	9005      	str	r0, [sp, #20]
 80091bc:	9101      	str	r1, [sp, #4]
 80091be:	9202      	str	r2, [sp, #8]
 80091c0:	2b01      	cmp	r3, #1
 80091c2:	d048      	beq.n	8009256 <_strtol_l.constprop.0+0xa2>
 80091c4:	000b      	movs	r3, r1
 80091c6:	2e24      	cmp	r6, #36	; 0x24
 80091c8:	d845      	bhi.n	8009256 <_strtol_l.constprop.0+0xa2>
 80091ca:	4a3b      	ldr	r2, [pc, #236]	; (80092b8 <_strtol_l.constprop.0+0x104>)
 80091cc:	2108      	movs	r1, #8
 80091ce:	4694      	mov	ip, r2
 80091d0:	001a      	movs	r2, r3
 80091d2:	4660      	mov	r0, ip
 80091d4:	7814      	ldrb	r4, [r2, #0]
 80091d6:	3301      	adds	r3, #1
 80091d8:	5d00      	ldrb	r0, [r0, r4]
 80091da:	001d      	movs	r5, r3
 80091dc:	0007      	movs	r7, r0
 80091de:	400f      	ands	r7, r1
 80091e0:	4208      	tst	r0, r1
 80091e2:	d1f5      	bne.n	80091d0 <_strtol_l.constprop.0+0x1c>
 80091e4:	2c2d      	cmp	r4, #45	; 0x2d
 80091e6:	d13d      	bne.n	8009264 <_strtol_l.constprop.0+0xb0>
 80091e8:	2701      	movs	r7, #1
 80091ea:	781c      	ldrb	r4, [r3, #0]
 80091ec:	1c95      	adds	r5, r2, #2
 80091ee:	2e00      	cmp	r6, #0
 80091f0:	d05e      	beq.n	80092b0 <_strtol_l.constprop.0+0xfc>
 80091f2:	2e10      	cmp	r6, #16
 80091f4:	d109      	bne.n	800920a <_strtol_l.constprop.0+0x56>
 80091f6:	2c30      	cmp	r4, #48	; 0x30
 80091f8:	d107      	bne.n	800920a <_strtol_l.constprop.0+0x56>
 80091fa:	2220      	movs	r2, #32
 80091fc:	782b      	ldrb	r3, [r5, #0]
 80091fe:	4393      	bics	r3, r2
 8009200:	2b58      	cmp	r3, #88	; 0x58
 8009202:	d150      	bne.n	80092a6 <_strtol_l.constprop.0+0xf2>
 8009204:	2610      	movs	r6, #16
 8009206:	786c      	ldrb	r4, [r5, #1]
 8009208:	3502      	adds	r5, #2
 800920a:	4b2c      	ldr	r3, [pc, #176]	; (80092bc <_strtol_l.constprop.0+0x108>)
 800920c:	0031      	movs	r1, r6
 800920e:	18fb      	adds	r3, r7, r3
 8009210:	0018      	movs	r0, r3
 8009212:	9303      	str	r3, [sp, #12]
 8009214:	f7f7 f81a 	bl	800024c <__aeabi_uidivmod>
 8009218:	2200      	movs	r2, #0
 800921a:	9104      	str	r1, [sp, #16]
 800921c:	2101      	movs	r1, #1
 800921e:	4684      	mov	ip, r0
 8009220:	0010      	movs	r0, r2
 8009222:	4249      	negs	r1, r1
 8009224:	0023      	movs	r3, r4
 8009226:	3b30      	subs	r3, #48	; 0x30
 8009228:	2b09      	cmp	r3, #9
 800922a:	d903      	bls.n	8009234 <_strtol_l.constprop.0+0x80>
 800922c:	3b11      	subs	r3, #17
 800922e:	2b19      	cmp	r3, #25
 8009230:	d81d      	bhi.n	800926e <_strtol_l.constprop.0+0xba>
 8009232:	330a      	adds	r3, #10
 8009234:	429e      	cmp	r6, r3
 8009236:	dd1e      	ble.n	8009276 <_strtol_l.constprop.0+0xc2>
 8009238:	1c54      	adds	r4, r2, #1
 800923a:	d009      	beq.n	8009250 <_strtol_l.constprop.0+0x9c>
 800923c:	000a      	movs	r2, r1
 800923e:	4584      	cmp	ip, r0
 8009240:	d306      	bcc.n	8009250 <_strtol_l.constprop.0+0x9c>
 8009242:	d102      	bne.n	800924a <_strtol_l.constprop.0+0x96>
 8009244:	9c04      	ldr	r4, [sp, #16]
 8009246:	429c      	cmp	r4, r3
 8009248:	db02      	blt.n	8009250 <_strtol_l.constprop.0+0x9c>
 800924a:	2201      	movs	r2, #1
 800924c:	4370      	muls	r0, r6
 800924e:	1818      	adds	r0, r3, r0
 8009250:	782c      	ldrb	r4, [r5, #0]
 8009252:	3501      	adds	r5, #1
 8009254:	e7e6      	b.n	8009224 <_strtol_l.constprop.0+0x70>
 8009256:	f7fd fce5 	bl	8006c24 <__errno>
 800925a:	2316      	movs	r3, #22
 800925c:	6003      	str	r3, [r0, #0]
 800925e:	2000      	movs	r0, #0
 8009260:	b007      	add	sp, #28
 8009262:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009264:	2c2b      	cmp	r4, #43	; 0x2b
 8009266:	d1c2      	bne.n	80091ee <_strtol_l.constprop.0+0x3a>
 8009268:	781c      	ldrb	r4, [r3, #0]
 800926a:	1c95      	adds	r5, r2, #2
 800926c:	e7bf      	b.n	80091ee <_strtol_l.constprop.0+0x3a>
 800926e:	0023      	movs	r3, r4
 8009270:	3b61      	subs	r3, #97	; 0x61
 8009272:	2b19      	cmp	r3, #25
 8009274:	d9dd      	bls.n	8009232 <_strtol_l.constprop.0+0x7e>
 8009276:	1c53      	adds	r3, r2, #1
 8009278:	d109      	bne.n	800928e <_strtol_l.constprop.0+0xda>
 800927a:	2322      	movs	r3, #34	; 0x22
 800927c:	9a05      	ldr	r2, [sp, #20]
 800927e:	9803      	ldr	r0, [sp, #12]
 8009280:	6013      	str	r3, [r2, #0]
 8009282:	9b02      	ldr	r3, [sp, #8]
 8009284:	2b00      	cmp	r3, #0
 8009286:	d0eb      	beq.n	8009260 <_strtol_l.constprop.0+0xac>
 8009288:	1e6b      	subs	r3, r5, #1
 800928a:	9301      	str	r3, [sp, #4]
 800928c:	e007      	b.n	800929e <_strtol_l.constprop.0+0xea>
 800928e:	2f00      	cmp	r7, #0
 8009290:	d000      	beq.n	8009294 <_strtol_l.constprop.0+0xe0>
 8009292:	4240      	negs	r0, r0
 8009294:	9b02      	ldr	r3, [sp, #8]
 8009296:	2b00      	cmp	r3, #0
 8009298:	d0e2      	beq.n	8009260 <_strtol_l.constprop.0+0xac>
 800929a:	2a00      	cmp	r2, #0
 800929c:	d1f4      	bne.n	8009288 <_strtol_l.constprop.0+0xd4>
 800929e:	9b02      	ldr	r3, [sp, #8]
 80092a0:	9a01      	ldr	r2, [sp, #4]
 80092a2:	601a      	str	r2, [r3, #0]
 80092a4:	e7dc      	b.n	8009260 <_strtol_l.constprop.0+0xac>
 80092a6:	2430      	movs	r4, #48	; 0x30
 80092a8:	2e00      	cmp	r6, #0
 80092aa:	d1ae      	bne.n	800920a <_strtol_l.constprop.0+0x56>
 80092ac:	3608      	adds	r6, #8
 80092ae:	e7ac      	b.n	800920a <_strtol_l.constprop.0+0x56>
 80092b0:	2c30      	cmp	r4, #48	; 0x30
 80092b2:	d0a2      	beq.n	80091fa <_strtol_l.constprop.0+0x46>
 80092b4:	260a      	movs	r6, #10
 80092b6:	e7a8      	b.n	800920a <_strtol_l.constprop.0+0x56>
 80092b8:	0800a889 	.word	0x0800a889
 80092bc:	7fffffff 	.word	0x7fffffff

080092c0 <_strtol_r>:
 80092c0:	b510      	push	{r4, lr}
 80092c2:	f7ff ff77 	bl	80091b4 <_strtol_l.constprop.0>
 80092c6:	bd10      	pop	{r4, pc}

080092c8 <__ssputs_r>:
 80092c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80092ca:	b085      	sub	sp, #20
 80092cc:	9301      	str	r3, [sp, #4]
 80092ce:	9203      	str	r2, [sp, #12]
 80092d0:	688e      	ldr	r6, [r1, #8]
 80092d2:	9a01      	ldr	r2, [sp, #4]
 80092d4:	0007      	movs	r7, r0
 80092d6:	000c      	movs	r4, r1
 80092d8:	680b      	ldr	r3, [r1, #0]
 80092da:	4296      	cmp	r6, r2
 80092dc:	d831      	bhi.n	8009342 <__ssputs_r+0x7a>
 80092de:	898a      	ldrh	r2, [r1, #12]
 80092e0:	2190      	movs	r1, #144	; 0x90
 80092e2:	00c9      	lsls	r1, r1, #3
 80092e4:	420a      	tst	r2, r1
 80092e6:	d029      	beq.n	800933c <__ssputs_r+0x74>
 80092e8:	2003      	movs	r0, #3
 80092ea:	6921      	ldr	r1, [r4, #16]
 80092ec:	1a5b      	subs	r3, r3, r1
 80092ee:	9302      	str	r3, [sp, #8]
 80092f0:	6963      	ldr	r3, [r4, #20]
 80092f2:	4343      	muls	r3, r0
 80092f4:	0fdd      	lsrs	r5, r3, #31
 80092f6:	18ed      	adds	r5, r5, r3
 80092f8:	9b01      	ldr	r3, [sp, #4]
 80092fa:	9802      	ldr	r0, [sp, #8]
 80092fc:	3301      	adds	r3, #1
 80092fe:	181b      	adds	r3, r3, r0
 8009300:	106d      	asrs	r5, r5, #1
 8009302:	42ab      	cmp	r3, r5
 8009304:	d900      	bls.n	8009308 <__ssputs_r+0x40>
 8009306:	001d      	movs	r5, r3
 8009308:	0552      	lsls	r2, r2, #21
 800930a:	d529      	bpl.n	8009360 <__ssputs_r+0x98>
 800930c:	0029      	movs	r1, r5
 800930e:	0038      	movs	r0, r7
 8009310:	f7fe fbd8 	bl	8007ac4 <_malloc_r>
 8009314:	1e06      	subs	r6, r0, #0
 8009316:	d02d      	beq.n	8009374 <__ssputs_r+0xac>
 8009318:	9a02      	ldr	r2, [sp, #8]
 800931a:	6921      	ldr	r1, [r4, #16]
 800931c:	f000 fa22 	bl	8009764 <memcpy>
 8009320:	89a2      	ldrh	r2, [r4, #12]
 8009322:	4b19      	ldr	r3, [pc, #100]	; (8009388 <__ssputs_r+0xc0>)
 8009324:	401a      	ands	r2, r3
 8009326:	2380      	movs	r3, #128	; 0x80
 8009328:	4313      	orrs	r3, r2
 800932a:	81a3      	strh	r3, [r4, #12]
 800932c:	9b02      	ldr	r3, [sp, #8]
 800932e:	6126      	str	r6, [r4, #16]
 8009330:	18f6      	adds	r6, r6, r3
 8009332:	6026      	str	r6, [r4, #0]
 8009334:	6165      	str	r5, [r4, #20]
 8009336:	9e01      	ldr	r6, [sp, #4]
 8009338:	1aed      	subs	r5, r5, r3
 800933a:	60a5      	str	r5, [r4, #8]
 800933c:	9b01      	ldr	r3, [sp, #4]
 800933e:	429e      	cmp	r6, r3
 8009340:	d900      	bls.n	8009344 <__ssputs_r+0x7c>
 8009342:	9e01      	ldr	r6, [sp, #4]
 8009344:	0032      	movs	r2, r6
 8009346:	9903      	ldr	r1, [sp, #12]
 8009348:	6820      	ldr	r0, [r4, #0]
 800934a:	f000 f9d4 	bl	80096f6 <memmove>
 800934e:	2000      	movs	r0, #0
 8009350:	68a3      	ldr	r3, [r4, #8]
 8009352:	1b9b      	subs	r3, r3, r6
 8009354:	60a3      	str	r3, [r4, #8]
 8009356:	6823      	ldr	r3, [r4, #0]
 8009358:	199b      	adds	r3, r3, r6
 800935a:	6023      	str	r3, [r4, #0]
 800935c:	b005      	add	sp, #20
 800935e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009360:	002a      	movs	r2, r5
 8009362:	0038      	movs	r0, r7
 8009364:	f000 fdc8 	bl	8009ef8 <_realloc_r>
 8009368:	1e06      	subs	r6, r0, #0
 800936a:	d1df      	bne.n	800932c <__ssputs_r+0x64>
 800936c:	0038      	movs	r0, r7
 800936e:	6921      	ldr	r1, [r4, #16]
 8009370:	f7fe fb32 	bl	80079d8 <_free_r>
 8009374:	230c      	movs	r3, #12
 8009376:	2001      	movs	r0, #1
 8009378:	603b      	str	r3, [r7, #0]
 800937a:	89a2      	ldrh	r2, [r4, #12]
 800937c:	3334      	adds	r3, #52	; 0x34
 800937e:	4313      	orrs	r3, r2
 8009380:	81a3      	strh	r3, [r4, #12]
 8009382:	4240      	negs	r0, r0
 8009384:	e7ea      	b.n	800935c <__ssputs_r+0x94>
 8009386:	46c0      	nop			; (mov r8, r8)
 8009388:	fffffb7f 	.word	0xfffffb7f

0800938c <_svfiprintf_r>:
 800938c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800938e:	b0a1      	sub	sp, #132	; 0x84
 8009390:	9003      	str	r0, [sp, #12]
 8009392:	001d      	movs	r5, r3
 8009394:	898b      	ldrh	r3, [r1, #12]
 8009396:	000f      	movs	r7, r1
 8009398:	0016      	movs	r6, r2
 800939a:	061b      	lsls	r3, r3, #24
 800939c:	d511      	bpl.n	80093c2 <_svfiprintf_r+0x36>
 800939e:	690b      	ldr	r3, [r1, #16]
 80093a0:	2b00      	cmp	r3, #0
 80093a2:	d10e      	bne.n	80093c2 <_svfiprintf_r+0x36>
 80093a4:	2140      	movs	r1, #64	; 0x40
 80093a6:	f7fe fb8d 	bl	8007ac4 <_malloc_r>
 80093aa:	6038      	str	r0, [r7, #0]
 80093ac:	6138      	str	r0, [r7, #16]
 80093ae:	2800      	cmp	r0, #0
 80093b0:	d105      	bne.n	80093be <_svfiprintf_r+0x32>
 80093b2:	230c      	movs	r3, #12
 80093b4:	9a03      	ldr	r2, [sp, #12]
 80093b6:	3801      	subs	r0, #1
 80093b8:	6013      	str	r3, [r2, #0]
 80093ba:	b021      	add	sp, #132	; 0x84
 80093bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093be:	2340      	movs	r3, #64	; 0x40
 80093c0:	617b      	str	r3, [r7, #20]
 80093c2:	2300      	movs	r3, #0
 80093c4:	ac08      	add	r4, sp, #32
 80093c6:	6163      	str	r3, [r4, #20]
 80093c8:	3320      	adds	r3, #32
 80093ca:	7663      	strb	r3, [r4, #25]
 80093cc:	3310      	adds	r3, #16
 80093ce:	76a3      	strb	r3, [r4, #26]
 80093d0:	9507      	str	r5, [sp, #28]
 80093d2:	0035      	movs	r5, r6
 80093d4:	782b      	ldrb	r3, [r5, #0]
 80093d6:	2b00      	cmp	r3, #0
 80093d8:	d001      	beq.n	80093de <_svfiprintf_r+0x52>
 80093da:	2b25      	cmp	r3, #37	; 0x25
 80093dc:	d148      	bne.n	8009470 <_svfiprintf_r+0xe4>
 80093de:	1bab      	subs	r3, r5, r6
 80093e0:	9305      	str	r3, [sp, #20]
 80093e2:	42b5      	cmp	r5, r6
 80093e4:	d00b      	beq.n	80093fe <_svfiprintf_r+0x72>
 80093e6:	0032      	movs	r2, r6
 80093e8:	0039      	movs	r1, r7
 80093ea:	9803      	ldr	r0, [sp, #12]
 80093ec:	f7ff ff6c 	bl	80092c8 <__ssputs_r>
 80093f0:	3001      	adds	r0, #1
 80093f2:	d100      	bne.n	80093f6 <_svfiprintf_r+0x6a>
 80093f4:	e0af      	b.n	8009556 <_svfiprintf_r+0x1ca>
 80093f6:	6963      	ldr	r3, [r4, #20]
 80093f8:	9a05      	ldr	r2, [sp, #20]
 80093fa:	189b      	adds	r3, r3, r2
 80093fc:	6163      	str	r3, [r4, #20]
 80093fe:	782b      	ldrb	r3, [r5, #0]
 8009400:	2b00      	cmp	r3, #0
 8009402:	d100      	bne.n	8009406 <_svfiprintf_r+0x7a>
 8009404:	e0a7      	b.n	8009556 <_svfiprintf_r+0x1ca>
 8009406:	2201      	movs	r2, #1
 8009408:	2300      	movs	r3, #0
 800940a:	4252      	negs	r2, r2
 800940c:	6062      	str	r2, [r4, #4]
 800940e:	a904      	add	r1, sp, #16
 8009410:	3254      	adds	r2, #84	; 0x54
 8009412:	1852      	adds	r2, r2, r1
 8009414:	1c6e      	adds	r6, r5, #1
 8009416:	6023      	str	r3, [r4, #0]
 8009418:	60e3      	str	r3, [r4, #12]
 800941a:	60a3      	str	r3, [r4, #8]
 800941c:	7013      	strb	r3, [r2, #0]
 800941e:	65a3      	str	r3, [r4, #88]	; 0x58
 8009420:	4b55      	ldr	r3, [pc, #340]	; (8009578 <_svfiprintf_r+0x1ec>)
 8009422:	2205      	movs	r2, #5
 8009424:	0018      	movs	r0, r3
 8009426:	7831      	ldrb	r1, [r6, #0]
 8009428:	9305      	str	r3, [sp, #20]
 800942a:	f7fd fc28 	bl	8006c7e <memchr>
 800942e:	1c75      	adds	r5, r6, #1
 8009430:	2800      	cmp	r0, #0
 8009432:	d11f      	bne.n	8009474 <_svfiprintf_r+0xe8>
 8009434:	6822      	ldr	r2, [r4, #0]
 8009436:	06d3      	lsls	r3, r2, #27
 8009438:	d504      	bpl.n	8009444 <_svfiprintf_r+0xb8>
 800943a:	2353      	movs	r3, #83	; 0x53
 800943c:	a904      	add	r1, sp, #16
 800943e:	185b      	adds	r3, r3, r1
 8009440:	2120      	movs	r1, #32
 8009442:	7019      	strb	r1, [r3, #0]
 8009444:	0713      	lsls	r3, r2, #28
 8009446:	d504      	bpl.n	8009452 <_svfiprintf_r+0xc6>
 8009448:	2353      	movs	r3, #83	; 0x53
 800944a:	a904      	add	r1, sp, #16
 800944c:	185b      	adds	r3, r3, r1
 800944e:	212b      	movs	r1, #43	; 0x2b
 8009450:	7019      	strb	r1, [r3, #0]
 8009452:	7833      	ldrb	r3, [r6, #0]
 8009454:	2b2a      	cmp	r3, #42	; 0x2a
 8009456:	d016      	beq.n	8009486 <_svfiprintf_r+0xfa>
 8009458:	0035      	movs	r5, r6
 800945a:	2100      	movs	r1, #0
 800945c:	200a      	movs	r0, #10
 800945e:	68e3      	ldr	r3, [r4, #12]
 8009460:	782a      	ldrb	r2, [r5, #0]
 8009462:	1c6e      	adds	r6, r5, #1
 8009464:	3a30      	subs	r2, #48	; 0x30
 8009466:	2a09      	cmp	r2, #9
 8009468:	d94e      	bls.n	8009508 <_svfiprintf_r+0x17c>
 800946a:	2900      	cmp	r1, #0
 800946c:	d111      	bne.n	8009492 <_svfiprintf_r+0x106>
 800946e:	e017      	b.n	80094a0 <_svfiprintf_r+0x114>
 8009470:	3501      	adds	r5, #1
 8009472:	e7af      	b.n	80093d4 <_svfiprintf_r+0x48>
 8009474:	9b05      	ldr	r3, [sp, #20]
 8009476:	6822      	ldr	r2, [r4, #0]
 8009478:	1ac0      	subs	r0, r0, r3
 800947a:	2301      	movs	r3, #1
 800947c:	4083      	lsls	r3, r0
 800947e:	4313      	orrs	r3, r2
 8009480:	002e      	movs	r6, r5
 8009482:	6023      	str	r3, [r4, #0]
 8009484:	e7cc      	b.n	8009420 <_svfiprintf_r+0x94>
 8009486:	9b07      	ldr	r3, [sp, #28]
 8009488:	1d19      	adds	r1, r3, #4
 800948a:	681b      	ldr	r3, [r3, #0]
 800948c:	9107      	str	r1, [sp, #28]
 800948e:	2b00      	cmp	r3, #0
 8009490:	db01      	blt.n	8009496 <_svfiprintf_r+0x10a>
 8009492:	930b      	str	r3, [sp, #44]	; 0x2c
 8009494:	e004      	b.n	80094a0 <_svfiprintf_r+0x114>
 8009496:	425b      	negs	r3, r3
 8009498:	60e3      	str	r3, [r4, #12]
 800949a:	2302      	movs	r3, #2
 800949c:	4313      	orrs	r3, r2
 800949e:	6023      	str	r3, [r4, #0]
 80094a0:	782b      	ldrb	r3, [r5, #0]
 80094a2:	2b2e      	cmp	r3, #46	; 0x2e
 80094a4:	d10a      	bne.n	80094bc <_svfiprintf_r+0x130>
 80094a6:	786b      	ldrb	r3, [r5, #1]
 80094a8:	2b2a      	cmp	r3, #42	; 0x2a
 80094aa:	d135      	bne.n	8009518 <_svfiprintf_r+0x18c>
 80094ac:	9b07      	ldr	r3, [sp, #28]
 80094ae:	3502      	adds	r5, #2
 80094b0:	1d1a      	adds	r2, r3, #4
 80094b2:	681b      	ldr	r3, [r3, #0]
 80094b4:	9207      	str	r2, [sp, #28]
 80094b6:	2b00      	cmp	r3, #0
 80094b8:	db2b      	blt.n	8009512 <_svfiprintf_r+0x186>
 80094ba:	9309      	str	r3, [sp, #36]	; 0x24
 80094bc:	4e2f      	ldr	r6, [pc, #188]	; (800957c <_svfiprintf_r+0x1f0>)
 80094be:	2203      	movs	r2, #3
 80094c0:	0030      	movs	r0, r6
 80094c2:	7829      	ldrb	r1, [r5, #0]
 80094c4:	f7fd fbdb 	bl	8006c7e <memchr>
 80094c8:	2800      	cmp	r0, #0
 80094ca:	d006      	beq.n	80094da <_svfiprintf_r+0x14e>
 80094cc:	2340      	movs	r3, #64	; 0x40
 80094ce:	1b80      	subs	r0, r0, r6
 80094d0:	4083      	lsls	r3, r0
 80094d2:	6822      	ldr	r2, [r4, #0]
 80094d4:	3501      	adds	r5, #1
 80094d6:	4313      	orrs	r3, r2
 80094d8:	6023      	str	r3, [r4, #0]
 80094da:	7829      	ldrb	r1, [r5, #0]
 80094dc:	2206      	movs	r2, #6
 80094de:	4828      	ldr	r0, [pc, #160]	; (8009580 <_svfiprintf_r+0x1f4>)
 80094e0:	1c6e      	adds	r6, r5, #1
 80094e2:	7621      	strb	r1, [r4, #24]
 80094e4:	f7fd fbcb 	bl	8006c7e <memchr>
 80094e8:	2800      	cmp	r0, #0
 80094ea:	d03c      	beq.n	8009566 <_svfiprintf_r+0x1da>
 80094ec:	4b25      	ldr	r3, [pc, #148]	; (8009584 <_svfiprintf_r+0x1f8>)
 80094ee:	2b00      	cmp	r3, #0
 80094f0:	d125      	bne.n	800953e <_svfiprintf_r+0x1b2>
 80094f2:	2207      	movs	r2, #7
 80094f4:	9b07      	ldr	r3, [sp, #28]
 80094f6:	3307      	adds	r3, #7
 80094f8:	4393      	bics	r3, r2
 80094fa:	3308      	adds	r3, #8
 80094fc:	9307      	str	r3, [sp, #28]
 80094fe:	6963      	ldr	r3, [r4, #20]
 8009500:	9a04      	ldr	r2, [sp, #16]
 8009502:	189b      	adds	r3, r3, r2
 8009504:	6163      	str	r3, [r4, #20]
 8009506:	e764      	b.n	80093d2 <_svfiprintf_r+0x46>
 8009508:	4343      	muls	r3, r0
 800950a:	0035      	movs	r5, r6
 800950c:	2101      	movs	r1, #1
 800950e:	189b      	adds	r3, r3, r2
 8009510:	e7a6      	b.n	8009460 <_svfiprintf_r+0xd4>
 8009512:	2301      	movs	r3, #1
 8009514:	425b      	negs	r3, r3
 8009516:	e7d0      	b.n	80094ba <_svfiprintf_r+0x12e>
 8009518:	2300      	movs	r3, #0
 800951a:	200a      	movs	r0, #10
 800951c:	001a      	movs	r2, r3
 800951e:	3501      	adds	r5, #1
 8009520:	6063      	str	r3, [r4, #4]
 8009522:	7829      	ldrb	r1, [r5, #0]
 8009524:	1c6e      	adds	r6, r5, #1
 8009526:	3930      	subs	r1, #48	; 0x30
 8009528:	2909      	cmp	r1, #9
 800952a:	d903      	bls.n	8009534 <_svfiprintf_r+0x1a8>
 800952c:	2b00      	cmp	r3, #0
 800952e:	d0c5      	beq.n	80094bc <_svfiprintf_r+0x130>
 8009530:	9209      	str	r2, [sp, #36]	; 0x24
 8009532:	e7c3      	b.n	80094bc <_svfiprintf_r+0x130>
 8009534:	4342      	muls	r2, r0
 8009536:	0035      	movs	r5, r6
 8009538:	2301      	movs	r3, #1
 800953a:	1852      	adds	r2, r2, r1
 800953c:	e7f1      	b.n	8009522 <_svfiprintf_r+0x196>
 800953e:	aa07      	add	r2, sp, #28
 8009540:	9200      	str	r2, [sp, #0]
 8009542:	0021      	movs	r1, r4
 8009544:	003a      	movs	r2, r7
 8009546:	4b10      	ldr	r3, [pc, #64]	; (8009588 <_svfiprintf_r+0x1fc>)
 8009548:	9803      	ldr	r0, [sp, #12]
 800954a:	f7fc fc03 	bl	8005d54 <_printf_float>
 800954e:	9004      	str	r0, [sp, #16]
 8009550:	9b04      	ldr	r3, [sp, #16]
 8009552:	3301      	adds	r3, #1
 8009554:	d1d3      	bne.n	80094fe <_svfiprintf_r+0x172>
 8009556:	89bb      	ldrh	r3, [r7, #12]
 8009558:	980d      	ldr	r0, [sp, #52]	; 0x34
 800955a:	065b      	lsls	r3, r3, #25
 800955c:	d400      	bmi.n	8009560 <_svfiprintf_r+0x1d4>
 800955e:	e72c      	b.n	80093ba <_svfiprintf_r+0x2e>
 8009560:	2001      	movs	r0, #1
 8009562:	4240      	negs	r0, r0
 8009564:	e729      	b.n	80093ba <_svfiprintf_r+0x2e>
 8009566:	aa07      	add	r2, sp, #28
 8009568:	9200      	str	r2, [sp, #0]
 800956a:	0021      	movs	r1, r4
 800956c:	003a      	movs	r2, r7
 800956e:	4b06      	ldr	r3, [pc, #24]	; (8009588 <_svfiprintf_r+0x1fc>)
 8009570:	9803      	ldr	r0, [sp, #12]
 8009572:	f7fc feb5 	bl	80062e0 <_printf_i>
 8009576:	e7ea      	b.n	800954e <_svfiprintf_r+0x1c2>
 8009578:	0800a989 	.word	0x0800a989
 800957c:	0800a98f 	.word	0x0800a98f
 8009580:	0800a993 	.word	0x0800a993
 8009584:	08005d55 	.word	0x08005d55
 8009588:	080092c9 	.word	0x080092c9

0800958c <__sflush_r>:
 800958c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800958e:	898b      	ldrh	r3, [r1, #12]
 8009590:	0005      	movs	r5, r0
 8009592:	000c      	movs	r4, r1
 8009594:	071a      	lsls	r2, r3, #28
 8009596:	d45c      	bmi.n	8009652 <__sflush_r+0xc6>
 8009598:	684a      	ldr	r2, [r1, #4]
 800959a:	2a00      	cmp	r2, #0
 800959c:	dc04      	bgt.n	80095a8 <__sflush_r+0x1c>
 800959e:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80095a0:	2a00      	cmp	r2, #0
 80095a2:	dc01      	bgt.n	80095a8 <__sflush_r+0x1c>
 80095a4:	2000      	movs	r0, #0
 80095a6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80095a8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80095aa:	2f00      	cmp	r7, #0
 80095ac:	d0fa      	beq.n	80095a4 <__sflush_r+0x18>
 80095ae:	2200      	movs	r2, #0
 80095b0:	2080      	movs	r0, #128	; 0x80
 80095b2:	682e      	ldr	r6, [r5, #0]
 80095b4:	602a      	str	r2, [r5, #0]
 80095b6:	001a      	movs	r2, r3
 80095b8:	0140      	lsls	r0, r0, #5
 80095ba:	6a21      	ldr	r1, [r4, #32]
 80095bc:	4002      	ands	r2, r0
 80095be:	4203      	tst	r3, r0
 80095c0:	d034      	beq.n	800962c <__sflush_r+0xa0>
 80095c2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80095c4:	89a3      	ldrh	r3, [r4, #12]
 80095c6:	075b      	lsls	r3, r3, #29
 80095c8:	d506      	bpl.n	80095d8 <__sflush_r+0x4c>
 80095ca:	6863      	ldr	r3, [r4, #4]
 80095cc:	1ac0      	subs	r0, r0, r3
 80095ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80095d0:	2b00      	cmp	r3, #0
 80095d2:	d001      	beq.n	80095d8 <__sflush_r+0x4c>
 80095d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80095d6:	1ac0      	subs	r0, r0, r3
 80095d8:	0002      	movs	r2, r0
 80095da:	2300      	movs	r3, #0
 80095dc:	0028      	movs	r0, r5
 80095de:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80095e0:	6a21      	ldr	r1, [r4, #32]
 80095e2:	47b8      	blx	r7
 80095e4:	89a2      	ldrh	r2, [r4, #12]
 80095e6:	1c43      	adds	r3, r0, #1
 80095e8:	d106      	bne.n	80095f8 <__sflush_r+0x6c>
 80095ea:	6829      	ldr	r1, [r5, #0]
 80095ec:	291d      	cmp	r1, #29
 80095ee:	d82c      	bhi.n	800964a <__sflush_r+0xbe>
 80095f0:	4b2a      	ldr	r3, [pc, #168]	; (800969c <__sflush_r+0x110>)
 80095f2:	410b      	asrs	r3, r1
 80095f4:	07db      	lsls	r3, r3, #31
 80095f6:	d428      	bmi.n	800964a <__sflush_r+0xbe>
 80095f8:	2300      	movs	r3, #0
 80095fa:	6063      	str	r3, [r4, #4]
 80095fc:	6923      	ldr	r3, [r4, #16]
 80095fe:	6023      	str	r3, [r4, #0]
 8009600:	04d2      	lsls	r2, r2, #19
 8009602:	d505      	bpl.n	8009610 <__sflush_r+0x84>
 8009604:	1c43      	adds	r3, r0, #1
 8009606:	d102      	bne.n	800960e <__sflush_r+0x82>
 8009608:	682b      	ldr	r3, [r5, #0]
 800960a:	2b00      	cmp	r3, #0
 800960c:	d100      	bne.n	8009610 <__sflush_r+0x84>
 800960e:	6560      	str	r0, [r4, #84]	; 0x54
 8009610:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009612:	602e      	str	r6, [r5, #0]
 8009614:	2900      	cmp	r1, #0
 8009616:	d0c5      	beq.n	80095a4 <__sflush_r+0x18>
 8009618:	0023      	movs	r3, r4
 800961a:	3344      	adds	r3, #68	; 0x44
 800961c:	4299      	cmp	r1, r3
 800961e:	d002      	beq.n	8009626 <__sflush_r+0x9a>
 8009620:	0028      	movs	r0, r5
 8009622:	f7fe f9d9 	bl	80079d8 <_free_r>
 8009626:	2000      	movs	r0, #0
 8009628:	6360      	str	r0, [r4, #52]	; 0x34
 800962a:	e7bc      	b.n	80095a6 <__sflush_r+0x1a>
 800962c:	2301      	movs	r3, #1
 800962e:	0028      	movs	r0, r5
 8009630:	47b8      	blx	r7
 8009632:	1c43      	adds	r3, r0, #1
 8009634:	d1c6      	bne.n	80095c4 <__sflush_r+0x38>
 8009636:	682b      	ldr	r3, [r5, #0]
 8009638:	2b00      	cmp	r3, #0
 800963a:	d0c3      	beq.n	80095c4 <__sflush_r+0x38>
 800963c:	2b1d      	cmp	r3, #29
 800963e:	d001      	beq.n	8009644 <__sflush_r+0xb8>
 8009640:	2b16      	cmp	r3, #22
 8009642:	d101      	bne.n	8009648 <__sflush_r+0xbc>
 8009644:	602e      	str	r6, [r5, #0]
 8009646:	e7ad      	b.n	80095a4 <__sflush_r+0x18>
 8009648:	89a2      	ldrh	r2, [r4, #12]
 800964a:	2340      	movs	r3, #64	; 0x40
 800964c:	4313      	orrs	r3, r2
 800964e:	81a3      	strh	r3, [r4, #12]
 8009650:	e7a9      	b.n	80095a6 <__sflush_r+0x1a>
 8009652:	690e      	ldr	r6, [r1, #16]
 8009654:	2e00      	cmp	r6, #0
 8009656:	d0a5      	beq.n	80095a4 <__sflush_r+0x18>
 8009658:	680f      	ldr	r7, [r1, #0]
 800965a:	600e      	str	r6, [r1, #0]
 800965c:	1bba      	subs	r2, r7, r6
 800965e:	9201      	str	r2, [sp, #4]
 8009660:	2200      	movs	r2, #0
 8009662:	079b      	lsls	r3, r3, #30
 8009664:	d100      	bne.n	8009668 <__sflush_r+0xdc>
 8009666:	694a      	ldr	r2, [r1, #20]
 8009668:	60a2      	str	r2, [r4, #8]
 800966a:	9b01      	ldr	r3, [sp, #4]
 800966c:	2b00      	cmp	r3, #0
 800966e:	dd99      	ble.n	80095a4 <__sflush_r+0x18>
 8009670:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8009672:	0032      	movs	r2, r6
 8009674:	001f      	movs	r7, r3
 8009676:	0028      	movs	r0, r5
 8009678:	9b01      	ldr	r3, [sp, #4]
 800967a:	6a21      	ldr	r1, [r4, #32]
 800967c:	47b8      	blx	r7
 800967e:	2800      	cmp	r0, #0
 8009680:	dc06      	bgt.n	8009690 <__sflush_r+0x104>
 8009682:	2340      	movs	r3, #64	; 0x40
 8009684:	2001      	movs	r0, #1
 8009686:	89a2      	ldrh	r2, [r4, #12]
 8009688:	4240      	negs	r0, r0
 800968a:	4313      	orrs	r3, r2
 800968c:	81a3      	strh	r3, [r4, #12]
 800968e:	e78a      	b.n	80095a6 <__sflush_r+0x1a>
 8009690:	9b01      	ldr	r3, [sp, #4]
 8009692:	1836      	adds	r6, r6, r0
 8009694:	1a1b      	subs	r3, r3, r0
 8009696:	9301      	str	r3, [sp, #4]
 8009698:	e7e7      	b.n	800966a <__sflush_r+0xde>
 800969a:	46c0      	nop			; (mov r8, r8)
 800969c:	dfbffffe 	.word	0xdfbffffe

080096a0 <_fflush_r>:
 80096a0:	690b      	ldr	r3, [r1, #16]
 80096a2:	b570      	push	{r4, r5, r6, lr}
 80096a4:	0005      	movs	r5, r0
 80096a6:	000c      	movs	r4, r1
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	d102      	bne.n	80096b2 <_fflush_r+0x12>
 80096ac:	2500      	movs	r5, #0
 80096ae:	0028      	movs	r0, r5
 80096b0:	bd70      	pop	{r4, r5, r6, pc}
 80096b2:	2800      	cmp	r0, #0
 80096b4:	d004      	beq.n	80096c0 <_fflush_r+0x20>
 80096b6:	6a03      	ldr	r3, [r0, #32]
 80096b8:	2b00      	cmp	r3, #0
 80096ba:	d101      	bne.n	80096c0 <_fflush_r+0x20>
 80096bc:	f7fd f9b8 	bl	8006a30 <__sinit>
 80096c0:	220c      	movs	r2, #12
 80096c2:	5ea3      	ldrsh	r3, [r4, r2]
 80096c4:	2b00      	cmp	r3, #0
 80096c6:	d0f1      	beq.n	80096ac <_fflush_r+0xc>
 80096c8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80096ca:	07d2      	lsls	r2, r2, #31
 80096cc:	d404      	bmi.n	80096d8 <_fflush_r+0x38>
 80096ce:	059b      	lsls	r3, r3, #22
 80096d0:	d402      	bmi.n	80096d8 <_fflush_r+0x38>
 80096d2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80096d4:	f7fd fad1 	bl	8006c7a <__retarget_lock_acquire_recursive>
 80096d8:	0028      	movs	r0, r5
 80096da:	0021      	movs	r1, r4
 80096dc:	f7ff ff56 	bl	800958c <__sflush_r>
 80096e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80096e2:	0005      	movs	r5, r0
 80096e4:	07db      	lsls	r3, r3, #31
 80096e6:	d4e2      	bmi.n	80096ae <_fflush_r+0xe>
 80096e8:	89a3      	ldrh	r3, [r4, #12]
 80096ea:	059b      	lsls	r3, r3, #22
 80096ec:	d4df      	bmi.n	80096ae <_fflush_r+0xe>
 80096ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80096f0:	f7fd fac4 	bl	8006c7c <__retarget_lock_release_recursive>
 80096f4:	e7db      	b.n	80096ae <_fflush_r+0xe>

080096f6 <memmove>:
 80096f6:	b510      	push	{r4, lr}
 80096f8:	4288      	cmp	r0, r1
 80096fa:	d902      	bls.n	8009702 <memmove+0xc>
 80096fc:	188b      	adds	r3, r1, r2
 80096fe:	4298      	cmp	r0, r3
 8009700:	d303      	bcc.n	800970a <memmove+0x14>
 8009702:	2300      	movs	r3, #0
 8009704:	e007      	b.n	8009716 <memmove+0x20>
 8009706:	5c8b      	ldrb	r3, [r1, r2]
 8009708:	5483      	strb	r3, [r0, r2]
 800970a:	3a01      	subs	r2, #1
 800970c:	d2fb      	bcs.n	8009706 <memmove+0x10>
 800970e:	bd10      	pop	{r4, pc}
 8009710:	5ccc      	ldrb	r4, [r1, r3]
 8009712:	54c4      	strb	r4, [r0, r3]
 8009714:	3301      	adds	r3, #1
 8009716:	429a      	cmp	r2, r3
 8009718:	d1fa      	bne.n	8009710 <memmove+0x1a>
 800971a:	e7f8      	b.n	800970e <memmove+0x18>

0800971c <strncmp>:
 800971c:	b530      	push	{r4, r5, lr}
 800971e:	0005      	movs	r5, r0
 8009720:	1e10      	subs	r0, r2, #0
 8009722:	d00b      	beq.n	800973c <strncmp+0x20>
 8009724:	2400      	movs	r4, #0
 8009726:	3a01      	subs	r2, #1
 8009728:	5d2b      	ldrb	r3, [r5, r4]
 800972a:	5d08      	ldrb	r0, [r1, r4]
 800972c:	4283      	cmp	r3, r0
 800972e:	d104      	bne.n	800973a <strncmp+0x1e>
 8009730:	42a2      	cmp	r2, r4
 8009732:	d002      	beq.n	800973a <strncmp+0x1e>
 8009734:	3401      	adds	r4, #1
 8009736:	2b00      	cmp	r3, #0
 8009738:	d1f6      	bne.n	8009728 <strncmp+0xc>
 800973a:	1a18      	subs	r0, r3, r0
 800973c:	bd30      	pop	{r4, r5, pc}
	...

08009740 <_sbrk_r>:
 8009740:	2300      	movs	r3, #0
 8009742:	b570      	push	{r4, r5, r6, lr}
 8009744:	4d06      	ldr	r5, [pc, #24]	; (8009760 <_sbrk_r+0x20>)
 8009746:	0004      	movs	r4, r0
 8009748:	0008      	movs	r0, r1
 800974a:	602b      	str	r3, [r5, #0]
 800974c:	f7fa fd1e 	bl	800418c <_sbrk>
 8009750:	1c43      	adds	r3, r0, #1
 8009752:	d103      	bne.n	800975c <_sbrk_r+0x1c>
 8009754:	682b      	ldr	r3, [r5, #0]
 8009756:	2b00      	cmp	r3, #0
 8009758:	d000      	beq.n	800975c <_sbrk_r+0x1c>
 800975a:	6023      	str	r3, [r4, #0]
 800975c:	bd70      	pop	{r4, r5, r6, pc}
 800975e:	46c0      	nop			; (mov r8, r8)
 8009760:	200003b4 	.word	0x200003b4

08009764 <memcpy>:
 8009764:	2300      	movs	r3, #0
 8009766:	b510      	push	{r4, lr}
 8009768:	429a      	cmp	r2, r3
 800976a:	d100      	bne.n	800976e <memcpy+0xa>
 800976c:	bd10      	pop	{r4, pc}
 800976e:	5ccc      	ldrb	r4, [r1, r3]
 8009770:	54c4      	strb	r4, [r0, r3]
 8009772:	3301      	adds	r3, #1
 8009774:	e7f8      	b.n	8009768 <memcpy+0x4>
	...

08009778 <nan>:
 8009778:	2000      	movs	r0, #0
 800977a:	4901      	ldr	r1, [pc, #4]	; (8009780 <nan+0x8>)
 800977c:	4770      	bx	lr
 800977e:	46c0      	nop			; (mov r8, r8)
 8009780:	7ff80000 	.word	0x7ff80000

08009784 <__assert_func>:
 8009784:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009786:	0014      	movs	r4, r2
 8009788:	001a      	movs	r2, r3
 800978a:	4b09      	ldr	r3, [pc, #36]	; (80097b0 <__assert_func+0x2c>)
 800978c:	0005      	movs	r5, r0
 800978e:	681b      	ldr	r3, [r3, #0]
 8009790:	000e      	movs	r6, r1
 8009792:	68d8      	ldr	r0, [r3, #12]
 8009794:	4b07      	ldr	r3, [pc, #28]	; (80097b4 <__assert_func+0x30>)
 8009796:	2c00      	cmp	r4, #0
 8009798:	d101      	bne.n	800979e <__assert_func+0x1a>
 800979a:	4b07      	ldr	r3, [pc, #28]	; (80097b8 <__assert_func+0x34>)
 800979c:	001c      	movs	r4, r3
 800979e:	4907      	ldr	r1, [pc, #28]	; (80097bc <__assert_func+0x38>)
 80097a0:	9301      	str	r3, [sp, #4]
 80097a2:	9402      	str	r4, [sp, #8]
 80097a4:	002b      	movs	r3, r5
 80097a6:	9600      	str	r6, [sp, #0]
 80097a8:	f000 fbe2 	bl	8009f70 <fiprintf>
 80097ac:	f000 fbf0 	bl	8009f90 <abort>
 80097b0:	20000064 	.word	0x20000064
 80097b4:	0800a9a2 	.word	0x0800a9a2
 80097b8:	0800a9dd 	.word	0x0800a9dd
 80097bc:	0800a9af 	.word	0x0800a9af

080097c0 <_calloc_r>:
 80097c0:	b570      	push	{r4, r5, r6, lr}
 80097c2:	0c0b      	lsrs	r3, r1, #16
 80097c4:	0c15      	lsrs	r5, r2, #16
 80097c6:	2b00      	cmp	r3, #0
 80097c8:	d11e      	bne.n	8009808 <_calloc_r+0x48>
 80097ca:	2d00      	cmp	r5, #0
 80097cc:	d10c      	bne.n	80097e8 <_calloc_r+0x28>
 80097ce:	b289      	uxth	r1, r1
 80097d0:	b294      	uxth	r4, r2
 80097d2:	434c      	muls	r4, r1
 80097d4:	0021      	movs	r1, r4
 80097d6:	f7fe f975 	bl	8007ac4 <_malloc_r>
 80097da:	1e05      	subs	r5, r0, #0
 80097dc:	d01b      	beq.n	8009816 <_calloc_r+0x56>
 80097de:	0022      	movs	r2, r4
 80097e0:	2100      	movs	r1, #0
 80097e2:	f7fd f9c5 	bl	8006b70 <memset>
 80097e6:	e016      	b.n	8009816 <_calloc_r+0x56>
 80097e8:	1c2b      	adds	r3, r5, #0
 80097ea:	1c0c      	adds	r4, r1, #0
 80097ec:	b289      	uxth	r1, r1
 80097ee:	b292      	uxth	r2, r2
 80097f0:	434a      	muls	r2, r1
 80097f2:	b2a1      	uxth	r1, r4
 80097f4:	b29c      	uxth	r4, r3
 80097f6:	434c      	muls	r4, r1
 80097f8:	0c13      	lsrs	r3, r2, #16
 80097fa:	18e4      	adds	r4, r4, r3
 80097fc:	0c23      	lsrs	r3, r4, #16
 80097fe:	d107      	bne.n	8009810 <_calloc_r+0x50>
 8009800:	0424      	lsls	r4, r4, #16
 8009802:	b292      	uxth	r2, r2
 8009804:	4314      	orrs	r4, r2
 8009806:	e7e5      	b.n	80097d4 <_calloc_r+0x14>
 8009808:	2d00      	cmp	r5, #0
 800980a:	d101      	bne.n	8009810 <_calloc_r+0x50>
 800980c:	1c14      	adds	r4, r2, #0
 800980e:	e7ed      	b.n	80097ec <_calloc_r+0x2c>
 8009810:	230c      	movs	r3, #12
 8009812:	2500      	movs	r5, #0
 8009814:	6003      	str	r3, [r0, #0]
 8009816:	0028      	movs	r0, r5
 8009818:	bd70      	pop	{r4, r5, r6, pc}

0800981a <rshift>:
 800981a:	0002      	movs	r2, r0
 800981c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800981e:	6904      	ldr	r4, [r0, #16]
 8009820:	114b      	asrs	r3, r1, #5
 8009822:	b085      	sub	sp, #20
 8009824:	3214      	adds	r2, #20
 8009826:	9302      	str	r3, [sp, #8]
 8009828:	114d      	asrs	r5, r1, #5
 800982a:	0013      	movs	r3, r2
 800982c:	42ac      	cmp	r4, r5
 800982e:	dd32      	ble.n	8009896 <rshift+0x7c>
 8009830:	261f      	movs	r6, #31
 8009832:	000f      	movs	r7, r1
 8009834:	114b      	asrs	r3, r1, #5
 8009836:	009b      	lsls	r3, r3, #2
 8009838:	00a5      	lsls	r5, r4, #2
 800983a:	18d3      	adds	r3, r2, r3
 800983c:	4037      	ands	r7, r6
 800983e:	1955      	adds	r5, r2, r5
 8009840:	9300      	str	r3, [sp, #0]
 8009842:	9701      	str	r7, [sp, #4]
 8009844:	4231      	tst	r1, r6
 8009846:	d10d      	bne.n	8009864 <rshift+0x4a>
 8009848:	0016      	movs	r6, r2
 800984a:	0019      	movs	r1, r3
 800984c:	428d      	cmp	r5, r1
 800984e:	d836      	bhi.n	80098be <rshift+0xa4>
 8009850:	9900      	ldr	r1, [sp, #0]
 8009852:	2300      	movs	r3, #0
 8009854:	3903      	subs	r1, #3
 8009856:	428d      	cmp	r5, r1
 8009858:	d302      	bcc.n	8009860 <rshift+0x46>
 800985a:	9b02      	ldr	r3, [sp, #8]
 800985c:	1ae4      	subs	r4, r4, r3
 800985e:	00a3      	lsls	r3, r4, #2
 8009860:	18d3      	adds	r3, r2, r3
 8009862:	e018      	b.n	8009896 <rshift+0x7c>
 8009864:	2120      	movs	r1, #32
 8009866:	9e01      	ldr	r6, [sp, #4]
 8009868:	9f01      	ldr	r7, [sp, #4]
 800986a:	1b89      	subs	r1, r1, r6
 800986c:	9e00      	ldr	r6, [sp, #0]
 800986e:	9103      	str	r1, [sp, #12]
 8009870:	ce02      	ldmia	r6!, {r1}
 8009872:	4694      	mov	ip, r2
 8009874:	40f9      	lsrs	r1, r7
 8009876:	42b5      	cmp	r5, r6
 8009878:	d816      	bhi.n	80098a8 <rshift+0x8e>
 800987a:	9e00      	ldr	r6, [sp, #0]
 800987c:	2300      	movs	r3, #0
 800987e:	3601      	adds	r6, #1
 8009880:	42b5      	cmp	r5, r6
 8009882:	d303      	bcc.n	800988c <rshift+0x72>
 8009884:	9b02      	ldr	r3, [sp, #8]
 8009886:	1ae3      	subs	r3, r4, r3
 8009888:	009b      	lsls	r3, r3, #2
 800988a:	3b04      	subs	r3, #4
 800988c:	18d3      	adds	r3, r2, r3
 800988e:	6019      	str	r1, [r3, #0]
 8009890:	2900      	cmp	r1, #0
 8009892:	d000      	beq.n	8009896 <rshift+0x7c>
 8009894:	3304      	adds	r3, #4
 8009896:	1a99      	subs	r1, r3, r2
 8009898:	1089      	asrs	r1, r1, #2
 800989a:	6101      	str	r1, [r0, #16]
 800989c:	4293      	cmp	r3, r2
 800989e:	d101      	bne.n	80098a4 <rshift+0x8a>
 80098a0:	2300      	movs	r3, #0
 80098a2:	6143      	str	r3, [r0, #20]
 80098a4:	b005      	add	sp, #20
 80098a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80098a8:	6837      	ldr	r7, [r6, #0]
 80098aa:	9b03      	ldr	r3, [sp, #12]
 80098ac:	409f      	lsls	r7, r3
 80098ae:	430f      	orrs	r7, r1
 80098b0:	4661      	mov	r1, ip
 80098b2:	c180      	stmia	r1!, {r7}
 80098b4:	468c      	mov	ip, r1
 80098b6:	9b01      	ldr	r3, [sp, #4]
 80098b8:	ce02      	ldmia	r6!, {r1}
 80098ba:	40d9      	lsrs	r1, r3
 80098bc:	e7db      	b.n	8009876 <rshift+0x5c>
 80098be:	c980      	ldmia	r1!, {r7}
 80098c0:	c680      	stmia	r6!, {r7}
 80098c2:	e7c3      	b.n	800984c <rshift+0x32>

080098c4 <__hexdig_fun>:
 80098c4:	0002      	movs	r2, r0
 80098c6:	3a30      	subs	r2, #48	; 0x30
 80098c8:	0003      	movs	r3, r0
 80098ca:	2a09      	cmp	r2, #9
 80098cc:	d802      	bhi.n	80098d4 <__hexdig_fun+0x10>
 80098ce:	3b20      	subs	r3, #32
 80098d0:	b2d8      	uxtb	r0, r3
 80098d2:	4770      	bx	lr
 80098d4:	0002      	movs	r2, r0
 80098d6:	3a61      	subs	r2, #97	; 0x61
 80098d8:	2a05      	cmp	r2, #5
 80098da:	d801      	bhi.n	80098e0 <__hexdig_fun+0x1c>
 80098dc:	3b47      	subs	r3, #71	; 0x47
 80098de:	e7f7      	b.n	80098d0 <__hexdig_fun+0xc>
 80098e0:	001a      	movs	r2, r3
 80098e2:	3a41      	subs	r2, #65	; 0x41
 80098e4:	2000      	movs	r0, #0
 80098e6:	2a05      	cmp	r2, #5
 80098e8:	d8f3      	bhi.n	80098d2 <__hexdig_fun+0xe>
 80098ea:	3b27      	subs	r3, #39	; 0x27
 80098ec:	e7f0      	b.n	80098d0 <__hexdig_fun+0xc>
	...

080098f0 <__gethex>:
 80098f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098f2:	b089      	sub	sp, #36	; 0x24
 80098f4:	9307      	str	r3, [sp, #28]
 80098f6:	2302      	movs	r3, #2
 80098f8:	9201      	str	r2, [sp, #4]
 80098fa:	680a      	ldr	r2, [r1, #0]
 80098fc:	425b      	negs	r3, r3
 80098fe:	9003      	str	r0, [sp, #12]
 8009900:	9106      	str	r1, [sp, #24]
 8009902:	1c96      	adds	r6, r2, #2
 8009904:	1a9b      	subs	r3, r3, r2
 8009906:	199a      	adds	r2, r3, r6
 8009908:	9600      	str	r6, [sp, #0]
 800990a:	9205      	str	r2, [sp, #20]
 800990c:	9a00      	ldr	r2, [sp, #0]
 800990e:	3601      	adds	r6, #1
 8009910:	7810      	ldrb	r0, [r2, #0]
 8009912:	2830      	cmp	r0, #48	; 0x30
 8009914:	d0f7      	beq.n	8009906 <__gethex+0x16>
 8009916:	f7ff ffd5 	bl	80098c4 <__hexdig_fun>
 800991a:	2300      	movs	r3, #0
 800991c:	001d      	movs	r5, r3
 800991e:	9302      	str	r3, [sp, #8]
 8009920:	4298      	cmp	r0, r3
 8009922:	d11d      	bne.n	8009960 <__gethex+0x70>
 8009924:	2201      	movs	r2, #1
 8009926:	49a6      	ldr	r1, [pc, #664]	; (8009bc0 <__gethex+0x2d0>)
 8009928:	9800      	ldr	r0, [sp, #0]
 800992a:	f7ff fef7 	bl	800971c <strncmp>
 800992e:	0007      	movs	r7, r0
 8009930:	42a8      	cmp	r0, r5
 8009932:	d169      	bne.n	8009a08 <__gethex+0x118>
 8009934:	9b00      	ldr	r3, [sp, #0]
 8009936:	0034      	movs	r4, r6
 8009938:	7858      	ldrb	r0, [r3, #1]
 800993a:	f7ff ffc3 	bl	80098c4 <__hexdig_fun>
 800993e:	2301      	movs	r3, #1
 8009940:	9302      	str	r3, [sp, #8]
 8009942:	42a8      	cmp	r0, r5
 8009944:	d02f      	beq.n	80099a6 <__gethex+0xb6>
 8009946:	9600      	str	r6, [sp, #0]
 8009948:	9b00      	ldr	r3, [sp, #0]
 800994a:	7818      	ldrb	r0, [r3, #0]
 800994c:	2830      	cmp	r0, #48	; 0x30
 800994e:	d009      	beq.n	8009964 <__gethex+0x74>
 8009950:	f7ff ffb8 	bl	80098c4 <__hexdig_fun>
 8009954:	4242      	negs	r2, r0
 8009956:	4142      	adcs	r2, r0
 8009958:	2301      	movs	r3, #1
 800995a:	0035      	movs	r5, r6
 800995c:	9202      	str	r2, [sp, #8]
 800995e:	9305      	str	r3, [sp, #20]
 8009960:	9c00      	ldr	r4, [sp, #0]
 8009962:	e004      	b.n	800996e <__gethex+0x7e>
 8009964:	9b00      	ldr	r3, [sp, #0]
 8009966:	3301      	adds	r3, #1
 8009968:	9300      	str	r3, [sp, #0]
 800996a:	e7ed      	b.n	8009948 <__gethex+0x58>
 800996c:	3401      	adds	r4, #1
 800996e:	7820      	ldrb	r0, [r4, #0]
 8009970:	f7ff ffa8 	bl	80098c4 <__hexdig_fun>
 8009974:	1e07      	subs	r7, r0, #0
 8009976:	d1f9      	bne.n	800996c <__gethex+0x7c>
 8009978:	2201      	movs	r2, #1
 800997a:	0020      	movs	r0, r4
 800997c:	4990      	ldr	r1, [pc, #576]	; (8009bc0 <__gethex+0x2d0>)
 800997e:	f7ff fecd 	bl	800971c <strncmp>
 8009982:	2800      	cmp	r0, #0
 8009984:	d10d      	bne.n	80099a2 <__gethex+0xb2>
 8009986:	2d00      	cmp	r5, #0
 8009988:	d106      	bne.n	8009998 <__gethex+0xa8>
 800998a:	3401      	adds	r4, #1
 800998c:	0025      	movs	r5, r4
 800998e:	7820      	ldrb	r0, [r4, #0]
 8009990:	f7ff ff98 	bl	80098c4 <__hexdig_fun>
 8009994:	2800      	cmp	r0, #0
 8009996:	d102      	bne.n	800999e <__gethex+0xae>
 8009998:	1b2d      	subs	r5, r5, r4
 800999a:	00af      	lsls	r7, r5, #2
 800999c:	e003      	b.n	80099a6 <__gethex+0xb6>
 800999e:	3401      	adds	r4, #1
 80099a0:	e7f5      	b.n	800998e <__gethex+0x9e>
 80099a2:	2d00      	cmp	r5, #0
 80099a4:	d1f8      	bne.n	8009998 <__gethex+0xa8>
 80099a6:	2220      	movs	r2, #32
 80099a8:	7823      	ldrb	r3, [r4, #0]
 80099aa:	0026      	movs	r6, r4
 80099ac:	4393      	bics	r3, r2
 80099ae:	2b50      	cmp	r3, #80	; 0x50
 80099b0:	d11d      	bne.n	80099ee <__gethex+0xfe>
 80099b2:	7863      	ldrb	r3, [r4, #1]
 80099b4:	2b2b      	cmp	r3, #43	; 0x2b
 80099b6:	d02c      	beq.n	8009a12 <__gethex+0x122>
 80099b8:	2b2d      	cmp	r3, #45	; 0x2d
 80099ba:	d02e      	beq.n	8009a1a <__gethex+0x12a>
 80099bc:	2300      	movs	r3, #0
 80099be:	1c66      	adds	r6, r4, #1
 80099c0:	9304      	str	r3, [sp, #16]
 80099c2:	7830      	ldrb	r0, [r6, #0]
 80099c4:	f7ff ff7e 	bl	80098c4 <__hexdig_fun>
 80099c8:	1e43      	subs	r3, r0, #1
 80099ca:	b2db      	uxtb	r3, r3
 80099cc:	2b18      	cmp	r3, #24
 80099ce:	d82b      	bhi.n	8009a28 <__gethex+0x138>
 80099d0:	3810      	subs	r0, #16
 80099d2:	0005      	movs	r5, r0
 80099d4:	7870      	ldrb	r0, [r6, #1]
 80099d6:	f7ff ff75 	bl	80098c4 <__hexdig_fun>
 80099da:	1e43      	subs	r3, r0, #1
 80099dc:	b2db      	uxtb	r3, r3
 80099de:	3601      	adds	r6, #1
 80099e0:	2b18      	cmp	r3, #24
 80099e2:	d91c      	bls.n	8009a1e <__gethex+0x12e>
 80099e4:	9b04      	ldr	r3, [sp, #16]
 80099e6:	2b00      	cmp	r3, #0
 80099e8:	d000      	beq.n	80099ec <__gethex+0xfc>
 80099ea:	426d      	negs	r5, r5
 80099ec:	197f      	adds	r7, r7, r5
 80099ee:	9b06      	ldr	r3, [sp, #24]
 80099f0:	601e      	str	r6, [r3, #0]
 80099f2:	9b02      	ldr	r3, [sp, #8]
 80099f4:	2b00      	cmp	r3, #0
 80099f6:	d019      	beq.n	8009a2c <__gethex+0x13c>
 80099f8:	2600      	movs	r6, #0
 80099fa:	9b05      	ldr	r3, [sp, #20]
 80099fc:	42b3      	cmp	r3, r6
 80099fe:	d100      	bne.n	8009a02 <__gethex+0x112>
 8009a00:	3606      	adds	r6, #6
 8009a02:	0030      	movs	r0, r6
 8009a04:	b009      	add	sp, #36	; 0x24
 8009a06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a08:	2301      	movs	r3, #1
 8009a0a:	2700      	movs	r7, #0
 8009a0c:	9c00      	ldr	r4, [sp, #0]
 8009a0e:	9302      	str	r3, [sp, #8]
 8009a10:	e7c9      	b.n	80099a6 <__gethex+0xb6>
 8009a12:	2300      	movs	r3, #0
 8009a14:	9304      	str	r3, [sp, #16]
 8009a16:	1ca6      	adds	r6, r4, #2
 8009a18:	e7d3      	b.n	80099c2 <__gethex+0xd2>
 8009a1a:	2301      	movs	r3, #1
 8009a1c:	e7fa      	b.n	8009a14 <__gethex+0x124>
 8009a1e:	230a      	movs	r3, #10
 8009a20:	435d      	muls	r5, r3
 8009a22:	182d      	adds	r5, r5, r0
 8009a24:	3d10      	subs	r5, #16
 8009a26:	e7d5      	b.n	80099d4 <__gethex+0xe4>
 8009a28:	0026      	movs	r6, r4
 8009a2a:	e7e0      	b.n	80099ee <__gethex+0xfe>
 8009a2c:	9b00      	ldr	r3, [sp, #0]
 8009a2e:	9902      	ldr	r1, [sp, #8]
 8009a30:	1ae3      	subs	r3, r4, r3
 8009a32:	3b01      	subs	r3, #1
 8009a34:	2b07      	cmp	r3, #7
 8009a36:	dc0a      	bgt.n	8009a4e <__gethex+0x15e>
 8009a38:	9803      	ldr	r0, [sp, #12]
 8009a3a:	f7fe f8d5 	bl	8007be8 <_Balloc>
 8009a3e:	1e05      	subs	r5, r0, #0
 8009a40:	d108      	bne.n	8009a54 <__gethex+0x164>
 8009a42:	002a      	movs	r2, r5
 8009a44:	21e4      	movs	r1, #228	; 0xe4
 8009a46:	4b5f      	ldr	r3, [pc, #380]	; (8009bc4 <__gethex+0x2d4>)
 8009a48:	485f      	ldr	r0, [pc, #380]	; (8009bc8 <__gethex+0x2d8>)
 8009a4a:	f7ff fe9b 	bl	8009784 <__assert_func>
 8009a4e:	3101      	adds	r1, #1
 8009a50:	105b      	asrs	r3, r3, #1
 8009a52:	e7ef      	b.n	8009a34 <__gethex+0x144>
 8009a54:	0003      	movs	r3, r0
 8009a56:	3314      	adds	r3, #20
 8009a58:	9302      	str	r3, [sp, #8]
 8009a5a:	9305      	str	r3, [sp, #20]
 8009a5c:	2300      	movs	r3, #0
 8009a5e:	001e      	movs	r6, r3
 8009a60:	9304      	str	r3, [sp, #16]
 8009a62:	9b00      	ldr	r3, [sp, #0]
 8009a64:	42a3      	cmp	r3, r4
 8009a66:	d33f      	bcc.n	8009ae8 <__gethex+0x1f8>
 8009a68:	9c05      	ldr	r4, [sp, #20]
 8009a6a:	9b02      	ldr	r3, [sp, #8]
 8009a6c:	c440      	stmia	r4!, {r6}
 8009a6e:	1ae4      	subs	r4, r4, r3
 8009a70:	10a4      	asrs	r4, r4, #2
 8009a72:	0030      	movs	r0, r6
 8009a74:	612c      	str	r4, [r5, #16]
 8009a76:	f7fe f9af 	bl	8007dd8 <__hi0bits>
 8009a7a:	9b01      	ldr	r3, [sp, #4]
 8009a7c:	0164      	lsls	r4, r4, #5
 8009a7e:	681b      	ldr	r3, [r3, #0]
 8009a80:	1a26      	subs	r6, r4, r0
 8009a82:	9300      	str	r3, [sp, #0]
 8009a84:	429e      	cmp	r6, r3
 8009a86:	dd51      	ble.n	8009b2c <__gethex+0x23c>
 8009a88:	1af6      	subs	r6, r6, r3
 8009a8a:	0031      	movs	r1, r6
 8009a8c:	0028      	movs	r0, r5
 8009a8e:	f7fe fd43 	bl	8008518 <__any_on>
 8009a92:	1e04      	subs	r4, r0, #0
 8009a94:	d016      	beq.n	8009ac4 <__gethex+0x1d4>
 8009a96:	2401      	movs	r4, #1
 8009a98:	231f      	movs	r3, #31
 8009a9a:	0020      	movs	r0, r4
 8009a9c:	1e72      	subs	r2, r6, #1
 8009a9e:	4013      	ands	r3, r2
 8009aa0:	4098      	lsls	r0, r3
 8009aa2:	0003      	movs	r3, r0
 8009aa4:	1151      	asrs	r1, r2, #5
 8009aa6:	9802      	ldr	r0, [sp, #8]
 8009aa8:	0089      	lsls	r1, r1, #2
 8009aaa:	5809      	ldr	r1, [r1, r0]
 8009aac:	4219      	tst	r1, r3
 8009aae:	d009      	beq.n	8009ac4 <__gethex+0x1d4>
 8009ab0:	42a2      	cmp	r2, r4
 8009ab2:	dd06      	ble.n	8009ac2 <__gethex+0x1d2>
 8009ab4:	0028      	movs	r0, r5
 8009ab6:	1eb1      	subs	r1, r6, #2
 8009ab8:	f7fe fd2e 	bl	8008518 <__any_on>
 8009abc:	3402      	adds	r4, #2
 8009abe:	2800      	cmp	r0, #0
 8009ac0:	d100      	bne.n	8009ac4 <__gethex+0x1d4>
 8009ac2:	2402      	movs	r4, #2
 8009ac4:	0031      	movs	r1, r6
 8009ac6:	0028      	movs	r0, r5
 8009ac8:	f7ff fea7 	bl	800981a <rshift>
 8009acc:	19bf      	adds	r7, r7, r6
 8009ace:	9b01      	ldr	r3, [sp, #4]
 8009ad0:	689b      	ldr	r3, [r3, #8]
 8009ad2:	42bb      	cmp	r3, r7
 8009ad4:	da3a      	bge.n	8009b4c <__gethex+0x25c>
 8009ad6:	0029      	movs	r1, r5
 8009ad8:	9803      	ldr	r0, [sp, #12]
 8009ada:	f7fe f8c9 	bl	8007c70 <_Bfree>
 8009ade:	2300      	movs	r3, #0
 8009ae0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009ae2:	26a3      	movs	r6, #163	; 0xa3
 8009ae4:	6013      	str	r3, [r2, #0]
 8009ae6:	e78c      	b.n	8009a02 <__gethex+0x112>
 8009ae8:	3c01      	subs	r4, #1
 8009aea:	7823      	ldrb	r3, [r4, #0]
 8009aec:	2b2e      	cmp	r3, #46	; 0x2e
 8009aee:	d012      	beq.n	8009b16 <__gethex+0x226>
 8009af0:	9b04      	ldr	r3, [sp, #16]
 8009af2:	2b20      	cmp	r3, #32
 8009af4:	d104      	bne.n	8009b00 <__gethex+0x210>
 8009af6:	9b05      	ldr	r3, [sp, #20]
 8009af8:	c340      	stmia	r3!, {r6}
 8009afa:	2600      	movs	r6, #0
 8009afc:	9305      	str	r3, [sp, #20]
 8009afe:	9604      	str	r6, [sp, #16]
 8009b00:	7820      	ldrb	r0, [r4, #0]
 8009b02:	f7ff fedf 	bl	80098c4 <__hexdig_fun>
 8009b06:	230f      	movs	r3, #15
 8009b08:	4018      	ands	r0, r3
 8009b0a:	9b04      	ldr	r3, [sp, #16]
 8009b0c:	4098      	lsls	r0, r3
 8009b0e:	3304      	adds	r3, #4
 8009b10:	4306      	orrs	r6, r0
 8009b12:	9304      	str	r3, [sp, #16]
 8009b14:	e7a5      	b.n	8009a62 <__gethex+0x172>
 8009b16:	9b00      	ldr	r3, [sp, #0]
 8009b18:	42a3      	cmp	r3, r4
 8009b1a:	d8e9      	bhi.n	8009af0 <__gethex+0x200>
 8009b1c:	2201      	movs	r2, #1
 8009b1e:	0020      	movs	r0, r4
 8009b20:	4927      	ldr	r1, [pc, #156]	; (8009bc0 <__gethex+0x2d0>)
 8009b22:	f7ff fdfb 	bl	800971c <strncmp>
 8009b26:	2800      	cmp	r0, #0
 8009b28:	d1e2      	bne.n	8009af0 <__gethex+0x200>
 8009b2a:	e79a      	b.n	8009a62 <__gethex+0x172>
 8009b2c:	9b00      	ldr	r3, [sp, #0]
 8009b2e:	2400      	movs	r4, #0
 8009b30:	429e      	cmp	r6, r3
 8009b32:	dacc      	bge.n	8009ace <__gethex+0x1de>
 8009b34:	1b9e      	subs	r6, r3, r6
 8009b36:	0029      	movs	r1, r5
 8009b38:	0032      	movs	r2, r6
 8009b3a:	9803      	ldr	r0, [sp, #12]
 8009b3c:	f7fe fab8 	bl	80080b0 <__lshift>
 8009b40:	0003      	movs	r3, r0
 8009b42:	3314      	adds	r3, #20
 8009b44:	0005      	movs	r5, r0
 8009b46:	1bbf      	subs	r7, r7, r6
 8009b48:	9302      	str	r3, [sp, #8]
 8009b4a:	e7c0      	b.n	8009ace <__gethex+0x1de>
 8009b4c:	9b01      	ldr	r3, [sp, #4]
 8009b4e:	685e      	ldr	r6, [r3, #4]
 8009b50:	42be      	cmp	r6, r7
 8009b52:	dd70      	ble.n	8009c36 <__gethex+0x346>
 8009b54:	9b00      	ldr	r3, [sp, #0]
 8009b56:	1bf6      	subs	r6, r6, r7
 8009b58:	42b3      	cmp	r3, r6
 8009b5a:	dc37      	bgt.n	8009bcc <__gethex+0x2dc>
 8009b5c:	9b01      	ldr	r3, [sp, #4]
 8009b5e:	68db      	ldr	r3, [r3, #12]
 8009b60:	2b02      	cmp	r3, #2
 8009b62:	d024      	beq.n	8009bae <__gethex+0x2be>
 8009b64:	2b03      	cmp	r3, #3
 8009b66:	d026      	beq.n	8009bb6 <__gethex+0x2c6>
 8009b68:	2b01      	cmp	r3, #1
 8009b6a:	d117      	bne.n	8009b9c <__gethex+0x2ac>
 8009b6c:	9b00      	ldr	r3, [sp, #0]
 8009b6e:	42b3      	cmp	r3, r6
 8009b70:	d114      	bne.n	8009b9c <__gethex+0x2ac>
 8009b72:	2b01      	cmp	r3, #1
 8009b74:	d10b      	bne.n	8009b8e <__gethex+0x29e>
 8009b76:	9b01      	ldr	r3, [sp, #4]
 8009b78:	9a07      	ldr	r2, [sp, #28]
 8009b7a:	685b      	ldr	r3, [r3, #4]
 8009b7c:	2662      	movs	r6, #98	; 0x62
 8009b7e:	6013      	str	r3, [r2, #0]
 8009b80:	2301      	movs	r3, #1
 8009b82:	9a02      	ldr	r2, [sp, #8]
 8009b84:	612b      	str	r3, [r5, #16]
 8009b86:	6013      	str	r3, [r2, #0]
 8009b88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009b8a:	601d      	str	r5, [r3, #0]
 8009b8c:	e739      	b.n	8009a02 <__gethex+0x112>
 8009b8e:	9900      	ldr	r1, [sp, #0]
 8009b90:	0028      	movs	r0, r5
 8009b92:	3901      	subs	r1, #1
 8009b94:	f7fe fcc0 	bl	8008518 <__any_on>
 8009b98:	2800      	cmp	r0, #0
 8009b9a:	d1ec      	bne.n	8009b76 <__gethex+0x286>
 8009b9c:	0029      	movs	r1, r5
 8009b9e:	9803      	ldr	r0, [sp, #12]
 8009ba0:	f7fe f866 	bl	8007c70 <_Bfree>
 8009ba4:	2300      	movs	r3, #0
 8009ba6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009ba8:	2650      	movs	r6, #80	; 0x50
 8009baa:	6013      	str	r3, [r2, #0]
 8009bac:	e729      	b.n	8009a02 <__gethex+0x112>
 8009bae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009bb0:	2b00      	cmp	r3, #0
 8009bb2:	d1f3      	bne.n	8009b9c <__gethex+0x2ac>
 8009bb4:	e7df      	b.n	8009b76 <__gethex+0x286>
 8009bb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009bb8:	2b00      	cmp	r3, #0
 8009bba:	d1dc      	bne.n	8009b76 <__gethex+0x286>
 8009bbc:	e7ee      	b.n	8009b9c <__gethex+0x2ac>
 8009bbe:	46c0      	nop			; (mov r8, r8)
 8009bc0:	0800a834 	.word	0x0800a834
 8009bc4:	0800a6ce 	.word	0x0800a6ce
 8009bc8:	0800a9de 	.word	0x0800a9de
 8009bcc:	1e77      	subs	r7, r6, #1
 8009bce:	2c00      	cmp	r4, #0
 8009bd0:	d12f      	bne.n	8009c32 <__gethex+0x342>
 8009bd2:	2f00      	cmp	r7, #0
 8009bd4:	d004      	beq.n	8009be0 <__gethex+0x2f0>
 8009bd6:	0039      	movs	r1, r7
 8009bd8:	0028      	movs	r0, r5
 8009bda:	f7fe fc9d 	bl	8008518 <__any_on>
 8009bde:	0004      	movs	r4, r0
 8009be0:	231f      	movs	r3, #31
 8009be2:	117a      	asrs	r2, r7, #5
 8009be4:	401f      	ands	r7, r3
 8009be6:	3b1e      	subs	r3, #30
 8009be8:	40bb      	lsls	r3, r7
 8009bea:	9902      	ldr	r1, [sp, #8]
 8009bec:	0092      	lsls	r2, r2, #2
 8009bee:	5852      	ldr	r2, [r2, r1]
 8009bf0:	421a      	tst	r2, r3
 8009bf2:	d001      	beq.n	8009bf8 <__gethex+0x308>
 8009bf4:	2302      	movs	r3, #2
 8009bf6:	431c      	orrs	r4, r3
 8009bf8:	9b00      	ldr	r3, [sp, #0]
 8009bfa:	0031      	movs	r1, r6
 8009bfc:	1b9b      	subs	r3, r3, r6
 8009bfe:	2602      	movs	r6, #2
 8009c00:	0028      	movs	r0, r5
 8009c02:	9300      	str	r3, [sp, #0]
 8009c04:	f7ff fe09 	bl	800981a <rshift>
 8009c08:	9b01      	ldr	r3, [sp, #4]
 8009c0a:	685f      	ldr	r7, [r3, #4]
 8009c0c:	2c00      	cmp	r4, #0
 8009c0e:	d041      	beq.n	8009c94 <__gethex+0x3a4>
 8009c10:	9b01      	ldr	r3, [sp, #4]
 8009c12:	68db      	ldr	r3, [r3, #12]
 8009c14:	2b02      	cmp	r3, #2
 8009c16:	d010      	beq.n	8009c3a <__gethex+0x34a>
 8009c18:	2b03      	cmp	r3, #3
 8009c1a:	d012      	beq.n	8009c42 <__gethex+0x352>
 8009c1c:	2b01      	cmp	r3, #1
 8009c1e:	d106      	bne.n	8009c2e <__gethex+0x33e>
 8009c20:	07a2      	lsls	r2, r4, #30
 8009c22:	d504      	bpl.n	8009c2e <__gethex+0x33e>
 8009c24:	9a02      	ldr	r2, [sp, #8]
 8009c26:	6812      	ldr	r2, [r2, #0]
 8009c28:	4314      	orrs	r4, r2
 8009c2a:	421c      	tst	r4, r3
 8009c2c:	d10c      	bne.n	8009c48 <__gethex+0x358>
 8009c2e:	2310      	movs	r3, #16
 8009c30:	e02f      	b.n	8009c92 <__gethex+0x3a2>
 8009c32:	2401      	movs	r4, #1
 8009c34:	e7d4      	b.n	8009be0 <__gethex+0x2f0>
 8009c36:	2601      	movs	r6, #1
 8009c38:	e7e8      	b.n	8009c0c <__gethex+0x31c>
 8009c3a:	2301      	movs	r3, #1
 8009c3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8009c3e:	1a9b      	subs	r3, r3, r2
 8009c40:	930f      	str	r3, [sp, #60]	; 0x3c
 8009c42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009c44:	2b00      	cmp	r3, #0
 8009c46:	d0f2      	beq.n	8009c2e <__gethex+0x33e>
 8009c48:	692b      	ldr	r3, [r5, #16]
 8009c4a:	2000      	movs	r0, #0
 8009c4c:	9302      	str	r3, [sp, #8]
 8009c4e:	009b      	lsls	r3, r3, #2
 8009c50:	9304      	str	r3, [sp, #16]
 8009c52:	002b      	movs	r3, r5
 8009c54:	9a04      	ldr	r2, [sp, #16]
 8009c56:	3314      	adds	r3, #20
 8009c58:	1899      	adds	r1, r3, r2
 8009c5a:	681a      	ldr	r2, [r3, #0]
 8009c5c:	1c54      	adds	r4, r2, #1
 8009c5e:	d01e      	beq.n	8009c9e <__gethex+0x3ae>
 8009c60:	3201      	adds	r2, #1
 8009c62:	601a      	str	r2, [r3, #0]
 8009c64:	002b      	movs	r3, r5
 8009c66:	3314      	adds	r3, #20
 8009c68:	2e02      	cmp	r6, #2
 8009c6a:	d141      	bne.n	8009cf0 <__gethex+0x400>
 8009c6c:	9a01      	ldr	r2, [sp, #4]
 8009c6e:	9900      	ldr	r1, [sp, #0]
 8009c70:	6812      	ldr	r2, [r2, #0]
 8009c72:	3a01      	subs	r2, #1
 8009c74:	428a      	cmp	r2, r1
 8009c76:	d10b      	bne.n	8009c90 <__gethex+0x3a0>
 8009c78:	221f      	movs	r2, #31
 8009c7a:	9800      	ldr	r0, [sp, #0]
 8009c7c:	1149      	asrs	r1, r1, #5
 8009c7e:	4002      	ands	r2, r0
 8009c80:	2001      	movs	r0, #1
 8009c82:	0004      	movs	r4, r0
 8009c84:	4094      	lsls	r4, r2
 8009c86:	0089      	lsls	r1, r1, #2
 8009c88:	58cb      	ldr	r3, [r1, r3]
 8009c8a:	4223      	tst	r3, r4
 8009c8c:	d000      	beq.n	8009c90 <__gethex+0x3a0>
 8009c8e:	2601      	movs	r6, #1
 8009c90:	2320      	movs	r3, #32
 8009c92:	431e      	orrs	r6, r3
 8009c94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009c96:	601d      	str	r5, [r3, #0]
 8009c98:	9b07      	ldr	r3, [sp, #28]
 8009c9a:	601f      	str	r7, [r3, #0]
 8009c9c:	e6b1      	b.n	8009a02 <__gethex+0x112>
 8009c9e:	c301      	stmia	r3!, {r0}
 8009ca0:	4299      	cmp	r1, r3
 8009ca2:	d8da      	bhi.n	8009c5a <__gethex+0x36a>
 8009ca4:	68ab      	ldr	r3, [r5, #8]
 8009ca6:	9a02      	ldr	r2, [sp, #8]
 8009ca8:	429a      	cmp	r2, r3
 8009caa:	db18      	blt.n	8009cde <__gethex+0x3ee>
 8009cac:	6869      	ldr	r1, [r5, #4]
 8009cae:	9803      	ldr	r0, [sp, #12]
 8009cb0:	3101      	adds	r1, #1
 8009cb2:	f7fd ff99 	bl	8007be8 <_Balloc>
 8009cb6:	1e04      	subs	r4, r0, #0
 8009cb8:	d104      	bne.n	8009cc4 <__gethex+0x3d4>
 8009cba:	0022      	movs	r2, r4
 8009cbc:	2184      	movs	r1, #132	; 0x84
 8009cbe:	4b1c      	ldr	r3, [pc, #112]	; (8009d30 <__gethex+0x440>)
 8009cc0:	481c      	ldr	r0, [pc, #112]	; (8009d34 <__gethex+0x444>)
 8009cc2:	e6c2      	b.n	8009a4a <__gethex+0x15a>
 8009cc4:	0029      	movs	r1, r5
 8009cc6:	692a      	ldr	r2, [r5, #16]
 8009cc8:	310c      	adds	r1, #12
 8009cca:	3202      	adds	r2, #2
 8009ccc:	0092      	lsls	r2, r2, #2
 8009cce:	300c      	adds	r0, #12
 8009cd0:	f7ff fd48 	bl	8009764 <memcpy>
 8009cd4:	0029      	movs	r1, r5
 8009cd6:	9803      	ldr	r0, [sp, #12]
 8009cd8:	f7fd ffca 	bl	8007c70 <_Bfree>
 8009cdc:	0025      	movs	r5, r4
 8009cde:	692b      	ldr	r3, [r5, #16]
 8009ce0:	1c5a      	adds	r2, r3, #1
 8009ce2:	612a      	str	r2, [r5, #16]
 8009ce4:	2201      	movs	r2, #1
 8009ce6:	3304      	adds	r3, #4
 8009ce8:	009b      	lsls	r3, r3, #2
 8009cea:	18eb      	adds	r3, r5, r3
 8009cec:	605a      	str	r2, [r3, #4]
 8009cee:	e7b9      	b.n	8009c64 <__gethex+0x374>
 8009cf0:	692a      	ldr	r2, [r5, #16]
 8009cf2:	9902      	ldr	r1, [sp, #8]
 8009cf4:	428a      	cmp	r2, r1
 8009cf6:	dd09      	ble.n	8009d0c <__gethex+0x41c>
 8009cf8:	2101      	movs	r1, #1
 8009cfa:	0028      	movs	r0, r5
 8009cfc:	f7ff fd8d 	bl	800981a <rshift>
 8009d00:	9b01      	ldr	r3, [sp, #4]
 8009d02:	3701      	adds	r7, #1
 8009d04:	689b      	ldr	r3, [r3, #8]
 8009d06:	42bb      	cmp	r3, r7
 8009d08:	dac1      	bge.n	8009c8e <__gethex+0x39e>
 8009d0a:	e6e4      	b.n	8009ad6 <__gethex+0x1e6>
 8009d0c:	221f      	movs	r2, #31
 8009d0e:	9c00      	ldr	r4, [sp, #0]
 8009d10:	9900      	ldr	r1, [sp, #0]
 8009d12:	2601      	movs	r6, #1
 8009d14:	4014      	ands	r4, r2
 8009d16:	4211      	tst	r1, r2
 8009d18:	d0ba      	beq.n	8009c90 <__gethex+0x3a0>
 8009d1a:	9a04      	ldr	r2, [sp, #16]
 8009d1c:	189b      	adds	r3, r3, r2
 8009d1e:	3b04      	subs	r3, #4
 8009d20:	6818      	ldr	r0, [r3, #0]
 8009d22:	f7fe f859 	bl	8007dd8 <__hi0bits>
 8009d26:	2320      	movs	r3, #32
 8009d28:	1b1b      	subs	r3, r3, r4
 8009d2a:	4298      	cmp	r0, r3
 8009d2c:	dbe4      	blt.n	8009cf8 <__gethex+0x408>
 8009d2e:	e7af      	b.n	8009c90 <__gethex+0x3a0>
 8009d30:	0800a6ce 	.word	0x0800a6ce
 8009d34:	0800a9de 	.word	0x0800a9de

08009d38 <L_shift>:
 8009d38:	2308      	movs	r3, #8
 8009d3a:	b570      	push	{r4, r5, r6, lr}
 8009d3c:	2520      	movs	r5, #32
 8009d3e:	1a9a      	subs	r2, r3, r2
 8009d40:	0092      	lsls	r2, r2, #2
 8009d42:	1aad      	subs	r5, r5, r2
 8009d44:	6843      	ldr	r3, [r0, #4]
 8009d46:	6804      	ldr	r4, [r0, #0]
 8009d48:	001e      	movs	r6, r3
 8009d4a:	40ae      	lsls	r6, r5
 8009d4c:	40d3      	lsrs	r3, r2
 8009d4e:	4334      	orrs	r4, r6
 8009d50:	6004      	str	r4, [r0, #0]
 8009d52:	6043      	str	r3, [r0, #4]
 8009d54:	3004      	adds	r0, #4
 8009d56:	4288      	cmp	r0, r1
 8009d58:	d3f4      	bcc.n	8009d44 <L_shift+0xc>
 8009d5a:	bd70      	pop	{r4, r5, r6, pc}

08009d5c <__match>:
 8009d5c:	b530      	push	{r4, r5, lr}
 8009d5e:	6803      	ldr	r3, [r0, #0]
 8009d60:	780c      	ldrb	r4, [r1, #0]
 8009d62:	3301      	adds	r3, #1
 8009d64:	2c00      	cmp	r4, #0
 8009d66:	d102      	bne.n	8009d6e <__match+0x12>
 8009d68:	6003      	str	r3, [r0, #0]
 8009d6a:	2001      	movs	r0, #1
 8009d6c:	bd30      	pop	{r4, r5, pc}
 8009d6e:	781a      	ldrb	r2, [r3, #0]
 8009d70:	0015      	movs	r5, r2
 8009d72:	3d41      	subs	r5, #65	; 0x41
 8009d74:	2d19      	cmp	r5, #25
 8009d76:	d800      	bhi.n	8009d7a <__match+0x1e>
 8009d78:	3220      	adds	r2, #32
 8009d7a:	3101      	adds	r1, #1
 8009d7c:	42a2      	cmp	r2, r4
 8009d7e:	d0ef      	beq.n	8009d60 <__match+0x4>
 8009d80:	2000      	movs	r0, #0
 8009d82:	e7f3      	b.n	8009d6c <__match+0x10>

08009d84 <__hexnan>:
 8009d84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d86:	680b      	ldr	r3, [r1, #0]
 8009d88:	b08b      	sub	sp, #44	; 0x2c
 8009d8a:	9201      	str	r2, [sp, #4]
 8009d8c:	9901      	ldr	r1, [sp, #4]
 8009d8e:	115a      	asrs	r2, r3, #5
 8009d90:	0092      	lsls	r2, r2, #2
 8009d92:	188a      	adds	r2, r1, r2
 8009d94:	9202      	str	r2, [sp, #8]
 8009d96:	0019      	movs	r1, r3
 8009d98:	221f      	movs	r2, #31
 8009d9a:	4011      	ands	r1, r2
 8009d9c:	9008      	str	r0, [sp, #32]
 8009d9e:	9106      	str	r1, [sp, #24]
 8009da0:	4213      	tst	r3, r2
 8009da2:	d002      	beq.n	8009daa <__hexnan+0x26>
 8009da4:	9b02      	ldr	r3, [sp, #8]
 8009da6:	3304      	adds	r3, #4
 8009da8:	9302      	str	r3, [sp, #8]
 8009daa:	9b02      	ldr	r3, [sp, #8]
 8009dac:	2500      	movs	r5, #0
 8009dae:	1f1f      	subs	r7, r3, #4
 8009db0:	003e      	movs	r6, r7
 8009db2:	003c      	movs	r4, r7
 8009db4:	9b08      	ldr	r3, [sp, #32]
 8009db6:	603d      	str	r5, [r7, #0]
 8009db8:	681b      	ldr	r3, [r3, #0]
 8009dba:	9507      	str	r5, [sp, #28]
 8009dbc:	9305      	str	r3, [sp, #20]
 8009dbe:	9503      	str	r5, [sp, #12]
 8009dc0:	9b05      	ldr	r3, [sp, #20]
 8009dc2:	3301      	adds	r3, #1
 8009dc4:	9309      	str	r3, [sp, #36]	; 0x24
 8009dc6:	9b05      	ldr	r3, [sp, #20]
 8009dc8:	785b      	ldrb	r3, [r3, #1]
 8009dca:	9304      	str	r3, [sp, #16]
 8009dcc:	2b00      	cmp	r3, #0
 8009dce:	d028      	beq.n	8009e22 <__hexnan+0x9e>
 8009dd0:	9804      	ldr	r0, [sp, #16]
 8009dd2:	f7ff fd77 	bl	80098c4 <__hexdig_fun>
 8009dd6:	2800      	cmp	r0, #0
 8009dd8:	d154      	bne.n	8009e84 <__hexnan+0x100>
 8009dda:	9b04      	ldr	r3, [sp, #16]
 8009ddc:	2b20      	cmp	r3, #32
 8009dde:	d819      	bhi.n	8009e14 <__hexnan+0x90>
 8009de0:	9b03      	ldr	r3, [sp, #12]
 8009de2:	9a07      	ldr	r2, [sp, #28]
 8009de4:	4293      	cmp	r3, r2
 8009de6:	dd12      	ble.n	8009e0e <__hexnan+0x8a>
 8009de8:	42b4      	cmp	r4, r6
 8009dea:	d206      	bcs.n	8009dfa <__hexnan+0x76>
 8009dec:	2d07      	cmp	r5, #7
 8009dee:	dc04      	bgt.n	8009dfa <__hexnan+0x76>
 8009df0:	002a      	movs	r2, r5
 8009df2:	0031      	movs	r1, r6
 8009df4:	0020      	movs	r0, r4
 8009df6:	f7ff ff9f 	bl	8009d38 <L_shift>
 8009dfa:	9b01      	ldr	r3, [sp, #4]
 8009dfc:	2508      	movs	r5, #8
 8009dfe:	429c      	cmp	r4, r3
 8009e00:	d905      	bls.n	8009e0e <__hexnan+0x8a>
 8009e02:	1f26      	subs	r6, r4, #4
 8009e04:	2500      	movs	r5, #0
 8009e06:	0034      	movs	r4, r6
 8009e08:	9b03      	ldr	r3, [sp, #12]
 8009e0a:	6035      	str	r5, [r6, #0]
 8009e0c:	9307      	str	r3, [sp, #28]
 8009e0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009e10:	9305      	str	r3, [sp, #20]
 8009e12:	e7d5      	b.n	8009dc0 <__hexnan+0x3c>
 8009e14:	9b04      	ldr	r3, [sp, #16]
 8009e16:	2b29      	cmp	r3, #41	; 0x29
 8009e18:	d159      	bne.n	8009ece <__hexnan+0x14a>
 8009e1a:	9b05      	ldr	r3, [sp, #20]
 8009e1c:	9a08      	ldr	r2, [sp, #32]
 8009e1e:	3302      	adds	r3, #2
 8009e20:	6013      	str	r3, [r2, #0]
 8009e22:	9b03      	ldr	r3, [sp, #12]
 8009e24:	2b00      	cmp	r3, #0
 8009e26:	d052      	beq.n	8009ece <__hexnan+0x14a>
 8009e28:	42b4      	cmp	r4, r6
 8009e2a:	d206      	bcs.n	8009e3a <__hexnan+0xb6>
 8009e2c:	2d07      	cmp	r5, #7
 8009e2e:	dc04      	bgt.n	8009e3a <__hexnan+0xb6>
 8009e30:	002a      	movs	r2, r5
 8009e32:	0031      	movs	r1, r6
 8009e34:	0020      	movs	r0, r4
 8009e36:	f7ff ff7f 	bl	8009d38 <L_shift>
 8009e3a:	9b01      	ldr	r3, [sp, #4]
 8009e3c:	429c      	cmp	r4, r3
 8009e3e:	d935      	bls.n	8009eac <__hexnan+0x128>
 8009e40:	001a      	movs	r2, r3
 8009e42:	0023      	movs	r3, r4
 8009e44:	cb02      	ldmia	r3!, {r1}
 8009e46:	c202      	stmia	r2!, {r1}
 8009e48:	429f      	cmp	r7, r3
 8009e4a:	d2fb      	bcs.n	8009e44 <__hexnan+0xc0>
 8009e4c:	9b02      	ldr	r3, [sp, #8]
 8009e4e:	1c62      	adds	r2, r4, #1
 8009e50:	1ed9      	subs	r1, r3, #3
 8009e52:	2304      	movs	r3, #4
 8009e54:	4291      	cmp	r1, r2
 8009e56:	d305      	bcc.n	8009e64 <__hexnan+0xe0>
 8009e58:	9b02      	ldr	r3, [sp, #8]
 8009e5a:	3b04      	subs	r3, #4
 8009e5c:	1b1b      	subs	r3, r3, r4
 8009e5e:	089b      	lsrs	r3, r3, #2
 8009e60:	3301      	adds	r3, #1
 8009e62:	009b      	lsls	r3, r3, #2
 8009e64:	9a01      	ldr	r2, [sp, #4]
 8009e66:	18d3      	adds	r3, r2, r3
 8009e68:	2200      	movs	r2, #0
 8009e6a:	c304      	stmia	r3!, {r2}
 8009e6c:	429f      	cmp	r7, r3
 8009e6e:	d2fc      	bcs.n	8009e6a <__hexnan+0xe6>
 8009e70:	683b      	ldr	r3, [r7, #0]
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	d104      	bne.n	8009e80 <__hexnan+0xfc>
 8009e76:	9b01      	ldr	r3, [sp, #4]
 8009e78:	429f      	cmp	r7, r3
 8009e7a:	d126      	bne.n	8009eca <__hexnan+0x146>
 8009e7c:	2301      	movs	r3, #1
 8009e7e:	603b      	str	r3, [r7, #0]
 8009e80:	2005      	movs	r0, #5
 8009e82:	e025      	b.n	8009ed0 <__hexnan+0x14c>
 8009e84:	9b03      	ldr	r3, [sp, #12]
 8009e86:	3501      	adds	r5, #1
 8009e88:	3301      	adds	r3, #1
 8009e8a:	9303      	str	r3, [sp, #12]
 8009e8c:	2d08      	cmp	r5, #8
 8009e8e:	dd06      	ble.n	8009e9e <__hexnan+0x11a>
 8009e90:	9b01      	ldr	r3, [sp, #4]
 8009e92:	429c      	cmp	r4, r3
 8009e94:	d9bb      	bls.n	8009e0e <__hexnan+0x8a>
 8009e96:	2300      	movs	r3, #0
 8009e98:	2501      	movs	r5, #1
 8009e9a:	3c04      	subs	r4, #4
 8009e9c:	6023      	str	r3, [r4, #0]
 8009e9e:	220f      	movs	r2, #15
 8009ea0:	6823      	ldr	r3, [r4, #0]
 8009ea2:	4010      	ands	r0, r2
 8009ea4:	011b      	lsls	r3, r3, #4
 8009ea6:	4303      	orrs	r3, r0
 8009ea8:	6023      	str	r3, [r4, #0]
 8009eaa:	e7b0      	b.n	8009e0e <__hexnan+0x8a>
 8009eac:	9b06      	ldr	r3, [sp, #24]
 8009eae:	2b00      	cmp	r3, #0
 8009eb0:	d0de      	beq.n	8009e70 <__hexnan+0xec>
 8009eb2:	2320      	movs	r3, #32
 8009eb4:	9a06      	ldr	r2, [sp, #24]
 8009eb6:	9902      	ldr	r1, [sp, #8]
 8009eb8:	1a9b      	subs	r3, r3, r2
 8009eba:	2201      	movs	r2, #1
 8009ebc:	4252      	negs	r2, r2
 8009ebe:	40da      	lsrs	r2, r3
 8009ec0:	3904      	subs	r1, #4
 8009ec2:	680b      	ldr	r3, [r1, #0]
 8009ec4:	4013      	ands	r3, r2
 8009ec6:	600b      	str	r3, [r1, #0]
 8009ec8:	e7d2      	b.n	8009e70 <__hexnan+0xec>
 8009eca:	3f04      	subs	r7, #4
 8009ecc:	e7d0      	b.n	8009e70 <__hexnan+0xec>
 8009ece:	2004      	movs	r0, #4
 8009ed0:	b00b      	add	sp, #44	; 0x2c
 8009ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009ed4 <__ascii_mbtowc>:
 8009ed4:	b082      	sub	sp, #8
 8009ed6:	2900      	cmp	r1, #0
 8009ed8:	d100      	bne.n	8009edc <__ascii_mbtowc+0x8>
 8009eda:	a901      	add	r1, sp, #4
 8009edc:	1e10      	subs	r0, r2, #0
 8009ede:	d006      	beq.n	8009eee <__ascii_mbtowc+0x1a>
 8009ee0:	2b00      	cmp	r3, #0
 8009ee2:	d006      	beq.n	8009ef2 <__ascii_mbtowc+0x1e>
 8009ee4:	7813      	ldrb	r3, [r2, #0]
 8009ee6:	600b      	str	r3, [r1, #0]
 8009ee8:	7810      	ldrb	r0, [r2, #0]
 8009eea:	1e43      	subs	r3, r0, #1
 8009eec:	4198      	sbcs	r0, r3
 8009eee:	b002      	add	sp, #8
 8009ef0:	4770      	bx	lr
 8009ef2:	2002      	movs	r0, #2
 8009ef4:	4240      	negs	r0, r0
 8009ef6:	e7fa      	b.n	8009eee <__ascii_mbtowc+0x1a>

08009ef8 <_realloc_r>:
 8009ef8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009efa:	0007      	movs	r7, r0
 8009efc:	000e      	movs	r6, r1
 8009efe:	0014      	movs	r4, r2
 8009f00:	2900      	cmp	r1, #0
 8009f02:	d105      	bne.n	8009f10 <_realloc_r+0x18>
 8009f04:	0011      	movs	r1, r2
 8009f06:	f7fd fddd 	bl	8007ac4 <_malloc_r>
 8009f0a:	0005      	movs	r5, r0
 8009f0c:	0028      	movs	r0, r5
 8009f0e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009f10:	2a00      	cmp	r2, #0
 8009f12:	d103      	bne.n	8009f1c <_realloc_r+0x24>
 8009f14:	f7fd fd60 	bl	80079d8 <_free_r>
 8009f18:	0025      	movs	r5, r4
 8009f1a:	e7f7      	b.n	8009f0c <_realloc_r+0x14>
 8009f1c:	f000 f83f 	bl	8009f9e <_malloc_usable_size_r>
 8009f20:	9001      	str	r0, [sp, #4]
 8009f22:	4284      	cmp	r4, r0
 8009f24:	d803      	bhi.n	8009f2e <_realloc_r+0x36>
 8009f26:	0035      	movs	r5, r6
 8009f28:	0843      	lsrs	r3, r0, #1
 8009f2a:	42a3      	cmp	r3, r4
 8009f2c:	d3ee      	bcc.n	8009f0c <_realloc_r+0x14>
 8009f2e:	0021      	movs	r1, r4
 8009f30:	0038      	movs	r0, r7
 8009f32:	f7fd fdc7 	bl	8007ac4 <_malloc_r>
 8009f36:	1e05      	subs	r5, r0, #0
 8009f38:	d0e8      	beq.n	8009f0c <_realloc_r+0x14>
 8009f3a:	9b01      	ldr	r3, [sp, #4]
 8009f3c:	0022      	movs	r2, r4
 8009f3e:	429c      	cmp	r4, r3
 8009f40:	d900      	bls.n	8009f44 <_realloc_r+0x4c>
 8009f42:	001a      	movs	r2, r3
 8009f44:	0031      	movs	r1, r6
 8009f46:	0028      	movs	r0, r5
 8009f48:	f7ff fc0c 	bl	8009764 <memcpy>
 8009f4c:	0031      	movs	r1, r6
 8009f4e:	0038      	movs	r0, r7
 8009f50:	f7fd fd42 	bl	80079d8 <_free_r>
 8009f54:	e7da      	b.n	8009f0c <_realloc_r+0x14>

08009f56 <__ascii_wctomb>:
 8009f56:	0003      	movs	r3, r0
 8009f58:	1e08      	subs	r0, r1, #0
 8009f5a:	d005      	beq.n	8009f68 <__ascii_wctomb+0x12>
 8009f5c:	2aff      	cmp	r2, #255	; 0xff
 8009f5e:	d904      	bls.n	8009f6a <__ascii_wctomb+0x14>
 8009f60:	228a      	movs	r2, #138	; 0x8a
 8009f62:	2001      	movs	r0, #1
 8009f64:	601a      	str	r2, [r3, #0]
 8009f66:	4240      	negs	r0, r0
 8009f68:	4770      	bx	lr
 8009f6a:	2001      	movs	r0, #1
 8009f6c:	700a      	strb	r2, [r1, #0]
 8009f6e:	e7fb      	b.n	8009f68 <__ascii_wctomb+0x12>

08009f70 <fiprintf>:
 8009f70:	b40e      	push	{r1, r2, r3}
 8009f72:	b517      	push	{r0, r1, r2, r4, lr}
 8009f74:	4c05      	ldr	r4, [pc, #20]	; (8009f8c <fiprintf+0x1c>)
 8009f76:	ab05      	add	r3, sp, #20
 8009f78:	cb04      	ldmia	r3!, {r2}
 8009f7a:	0001      	movs	r1, r0
 8009f7c:	6820      	ldr	r0, [r4, #0]
 8009f7e:	9301      	str	r3, [sp, #4]
 8009f80:	f000 f83c 	bl	8009ffc <_vfiprintf_r>
 8009f84:	bc1e      	pop	{r1, r2, r3, r4}
 8009f86:	bc08      	pop	{r3}
 8009f88:	b003      	add	sp, #12
 8009f8a:	4718      	bx	r3
 8009f8c:	20000064 	.word	0x20000064

08009f90 <abort>:
 8009f90:	2006      	movs	r0, #6
 8009f92:	b510      	push	{r4, lr}
 8009f94:	f000 fa1e 	bl	800a3d4 <raise>
 8009f98:	2001      	movs	r0, #1
 8009f9a:	f7fa f886 	bl	80040aa <_exit>

08009f9e <_malloc_usable_size_r>:
 8009f9e:	1f0b      	subs	r3, r1, #4
 8009fa0:	681b      	ldr	r3, [r3, #0]
 8009fa2:	1f18      	subs	r0, r3, #4
 8009fa4:	2b00      	cmp	r3, #0
 8009fa6:	da01      	bge.n	8009fac <_malloc_usable_size_r+0xe>
 8009fa8:	580b      	ldr	r3, [r1, r0]
 8009faa:	18c0      	adds	r0, r0, r3
 8009fac:	4770      	bx	lr

08009fae <__sfputc_r>:
 8009fae:	6893      	ldr	r3, [r2, #8]
 8009fb0:	b510      	push	{r4, lr}
 8009fb2:	3b01      	subs	r3, #1
 8009fb4:	6093      	str	r3, [r2, #8]
 8009fb6:	2b00      	cmp	r3, #0
 8009fb8:	da04      	bge.n	8009fc4 <__sfputc_r+0x16>
 8009fba:	6994      	ldr	r4, [r2, #24]
 8009fbc:	42a3      	cmp	r3, r4
 8009fbe:	db07      	blt.n	8009fd0 <__sfputc_r+0x22>
 8009fc0:	290a      	cmp	r1, #10
 8009fc2:	d005      	beq.n	8009fd0 <__sfputc_r+0x22>
 8009fc4:	6813      	ldr	r3, [r2, #0]
 8009fc6:	1c58      	adds	r0, r3, #1
 8009fc8:	6010      	str	r0, [r2, #0]
 8009fca:	7019      	strb	r1, [r3, #0]
 8009fcc:	0008      	movs	r0, r1
 8009fce:	bd10      	pop	{r4, pc}
 8009fd0:	f000 f930 	bl	800a234 <__swbuf_r>
 8009fd4:	0001      	movs	r1, r0
 8009fd6:	e7f9      	b.n	8009fcc <__sfputc_r+0x1e>

08009fd8 <__sfputs_r>:
 8009fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009fda:	0006      	movs	r6, r0
 8009fdc:	000f      	movs	r7, r1
 8009fde:	0014      	movs	r4, r2
 8009fe0:	18d5      	adds	r5, r2, r3
 8009fe2:	42ac      	cmp	r4, r5
 8009fe4:	d101      	bne.n	8009fea <__sfputs_r+0x12>
 8009fe6:	2000      	movs	r0, #0
 8009fe8:	e007      	b.n	8009ffa <__sfputs_r+0x22>
 8009fea:	7821      	ldrb	r1, [r4, #0]
 8009fec:	003a      	movs	r2, r7
 8009fee:	0030      	movs	r0, r6
 8009ff0:	f7ff ffdd 	bl	8009fae <__sfputc_r>
 8009ff4:	3401      	adds	r4, #1
 8009ff6:	1c43      	adds	r3, r0, #1
 8009ff8:	d1f3      	bne.n	8009fe2 <__sfputs_r+0xa>
 8009ffa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009ffc <_vfiprintf_r>:
 8009ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ffe:	b0a1      	sub	sp, #132	; 0x84
 800a000:	000f      	movs	r7, r1
 800a002:	0015      	movs	r5, r2
 800a004:	001e      	movs	r6, r3
 800a006:	9003      	str	r0, [sp, #12]
 800a008:	2800      	cmp	r0, #0
 800a00a:	d004      	beq.n	800a016 <_vfiprintf_r+0x1a>
 800a00c:	6a03      	ldr	r3, [r0, #32]
 800a00e:	2b00      	cmp	r3, #0
 800a010:	d101      	bne.n	800a016 <_vfiprintf_r+0x1a>
 800a012:	f7fc fd0d 	bl	8006a30 <__sinit>
 800a016:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a018:	07db      	lsls	r3, r3, #31
 800a01a:	d405      	bmi.n	800a028 <_vfiprintf_r+0x2c>
 800a01c:	89bb      	ldrh	r3, [r7, #12]
 800a01e:	059b      	lsls	r3, r3, #22
 800a020:	d402      	bmi.n	800a028 <_vfiprintf_r+0x2c>
 800a022:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800a024:	f7fc fe29 	bl	8006c7a <__retarget_lock_acquire_recursive>
 800a028:	89bb      	ldrh	r3, [r7, #12]
 800a02a:	071b      	lsls	r3, r3, #28
 800a02c:	d502      	bpl.n	800a034 <_vfiprintf_r+0x38>
 800a02e:	693b      	ldr	r3, [r7, #16]
 800a030:	2b00      	cmp	r3, #0
 800a032:	d113      	bne.n	800a05c <_vfiprintf_r+0x60>
 800a034:	0039      	movs	r1, r7
 800a036:	9803      	ldr	r0, [sp, #12]
 800a038:	f000 f93e 	bl	800a2b8 <__swsetup_r>
 800a03c:	2800      	cmp	r0, #0
 800a03e:	d00d      	beq.n	800a05c <_vfiprintf_r+0x60>
 800a040:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a042:	07db      	lsls	r3, r3, #31
 800a044:	d503      	bpl.n	800a04e <_vfiprintf_r+0x52>
 800a046:	2001      	movs	r0, #1
 800a048:	4240      	negs	r0, r0
 800a04a:	b021      	add	sp, #132	; 0x84
 800a04c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a04e:	89bb      	ldrh	r3, [r7, #12]
 800a050:	059b      	lsls	r3, r3, #22
 800a052:	d4f8      	bmi.n	800a046 <_vfiprintf_r+0x4a>
 800a054:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800a056:	f7fc fe11 	bl	8006c7c <__retarget_lock_release_recursive>
 800a05a:	e7f4      	b.n	800a046 <_vfiprintf_r+0x4a>
 800a05c:	2300      	movs	r3, #0
 800a05e:	ac08      	add	r4, sp, #32
 800a060:	6163      	str	r3, [r4, #20]
 800a062:	3320      	adds	r3, #32
 800a064:	7663      	strb	r3, [r4, #25]
 800a066:	3310      	adds	r3, #16
 800a068:	76a3      	strb	r3, [r4, #26]
 800a06a:	9607      	str	r6, [sp, #28]
 800a06c:	002e      	movs	r6, r5
 800a06e:	7833      	ldrb	r3, [r6, #0]
 800a070:	2b00      	cmp	r3, #0
 800a072:	d001      	beq.n	800a078 <_vfiprintf_r+0x7c>
 800a074:	2b25      	cmp	r3, #37	; 0x25
 800a076:	d148      	bne.n	800a10a <_vfiprintf_r+0x10e>
 800a078:	1b73      	subs	r3, r6, r5
 800a07a:	9305      	str	r3, [sp, #20]
 800a07c:	42ae      	cmp	r6, r5
 800a07e:	d00b      	beq.n	800a098 <_vfiprintf_r+0x9c>
 800a080:	002a      	movs	r2, r5
 800a082:	0039      	movs	r1, r7
 800a084:	9803      	ldr	r0, [sp, #12]
 800a086:	f7ff ffa7 	bl	8009fd8 <__sfputs_r>
 800a08a:	3001      	adds	r0, #1
 800a08c:	d100      	bne.n	800a090 <_vfiprintf_r+0x94>
 800a08e:	e0af      	b.n	800a1f0 <_vfiprintf_r+0x1f4>
 800a090:	6963      	ldr	r3, [r4, #20]
 800a092:	9a05      	ldr	r2, [sp, #20]
 800a094:	189b      	adds	r3, r3, r2
 800a096:	6163      	str	r3, [r4, #20]
 800a098:	7833      	ldrb	r3, [r6, #0]
 800a09a:	2b00      	cmp	r3, #0
 800a09c:	d100      	bne.n	800a0a0 <_vfiprintf_r+0xa4>
 800a09e:	e0a7      	b.n	800a1f0 <_vfiprintf_r+0x1f4>
 800a0a0:	2201      	movs	r2, #1
 800a0a2:	2300      	movs	r3, #0
 800a0a4:	4252      	negs	r2, r2
 800a0a6:	6062      	str	r2, [r4, #4]
 800a0a8:	a904      	add	r1, sp, #16
 800a0aa:	3254      	adds	r2, #84	; 0x54
 800a0ac:	1852      	adds	r2, r2, r1
 800a0ae:	1c75      	adds	r5, r6, #1
 800a0b0:	6023      	str	r3, [r4, #0]
 800a0b2:	60e3      	str	r3, [r4, #12]
 800a0b4:	60a3      	str	r3, [r4, #8]
 800a0b6:	7013      	strb	r3, [r2, #0]
 800a0b8:	65a3      	str	r3, [r4, #88]	; 0x58
 800a0ba:	4b59      	ldr	r3, [pc, #356]	; (800a220 <_vfiprintf_r+0x224>)
 800a0bc:	2205      	movs	r2, #5
 800a0be:	0018      	movs	r0, r3
 800a0c0:	7829      	ldrb	r1, [r5, #0]
 800a0c2:	9305      	str	r3, [sp, #20]
 800a0c4:	f7fc fddb 	bl	8006c7e <memchr>
 800a0c8:	1c6e      	adds	r6, r5, #1
 800a0ca:	2800      	cmp	r0, #0
 800a0cc:	d11f      	bne.n	800a10e <_vfiprintf_r+0x112>
 800a0ce:	6822      	ldr	r2, [r4, #0]
 800a0d0:	06d3      	lsls	r3, r2, #27
 800a0d2:	d504      	bpl.n	800a0de <_vfiprintf_r+0xe2>
 800a0d4:	2353      	movs	r3, #83	; 0x53
 800a0d6:	a904      	add	r1, sp, #16
 800a0d8:	185b      	adds	r3, r3, r1
 800a0da:	2120      	movs	r1, #32
 800a0dc:	7019      	strb	r1, [r3, #0]
 800a0de:	0713      	lsls	r3, r2, #28
 800a0e0:	d504      	bpl.n	800a0ec <_vfiprintf_r+0xf0>
 800a0e2:	2353      	movs	r3, #83	; 0x53
 800a0e4:	a904      	add	r1, sp, #16
 800a0e6:	185b      	adds	r3, r3, r1
 800a0e8:	212b      	movs	r1, #43	; 0x2b
 800a0ea:	7019      	strb	r1, [r3, #0]
 800a0ec:	782b      	ldrb	r3, [r5, #0]
 800a0ee:	2b2a      	cmp	r3, #42	; 0x2a
 800a0f0:	d016      	beq.n	800a120 <_vfiprintf_r+0x124>
 800a0f2:	002e      	movs	r6, r5
 800a0f4:	2100      	movs	r1, #0
 800a0f6:	200a      	movs	r0, #10
 800a0f8:	68e3      	ldr	r3, [r4, #12]
 800a0fa:	7832      	ldrb	r2, [r6, #0]
 800a0fc:	1c75      	adds	r5, r6, #1
 800a0fe:	3a30      	subs	r2, #48	; 0x30
 800a100:	2a09      	cmp	r2, #9
 800a102:	d94e      	bls.n	800a1a2 <_vfiprintf_r+0x1a6>
 800a104:	2900      	cmp	r1, #0
 800a106:	d111      	bne.n	800a12c <_vfiprintf_r+0x130>
 800a108:	e017      	b.n	800a13a <_vfiprintf_r+0x13e>
 800a10a:	3601      	adds	r6, #1
 800a10c:	e7af      	b.n	800a06e <_vfiprintf_r+0x72>
 800a10e:	9b05      	ldr	r3, [sp, #20]
 800a110:	6822      	ldr	r2, [r4, #0]
 800a112:	1ac0      	subs	r0, r0, r3
 800a114:	2301      	movs	r3, #1
 800a116:	4083      	lsls	r3, r0
 800a118:	4313      	orrs	r3, r2
 800a11a:	0035      	movs	r5, r6
 800a11c:	6023      	str	r3, [r4, #0]
 800a11e:	e7cc      	b.n	800a0ba <_vfiprintf_r+0xbe>
 800a120:	9b07      	ldr	r3, [sp, #28]
 800a122:	1d19      	adds	r1, r3, #4
 800a124:	681b      	ldr	r3, [r3, #0]
 800a126:	9107      	str	r1, [sp, #28]
 800a128:	2b00      	cmp	r3, #0
 800a12a:	db01      	blt.n	800a130 <_vfiprintf_r+0x134>
 800a12c:	930b      	str	r3, [sp, #44]	; 0x2c
 800a12e:	e004      	b.n	800a13a <_vfiprintf_r+0x13e>
 800a130:	425b      	negs	r3, r3
 800a132:	60e3      	str	r3, [r4, #12]
 800a134:	2302      	movs	r3, #2
 800a136:	4313      	orrs	r3, r2
 800a138:	6023      	str	r3, [r4, #0]
 800a13a:	7833      	ldrb	r3, [r6, #0]
 800a13c:	2b2e      	cmp	r3, #46	; 0x2e
 800a13e:	d10a      	bne.n	800a156 <_vfiprintf_r+0x15a>
 800a140:	7873      	ldrb	r3, [r6, #1]
 800a142:	2b2a      	cmp	r3, #42	; 0x2a
 800a144:	d135      	bne.n	800a1b2 <_vfiprintf_r+0x1b6>
 800a146:	9b07      	ldr	r3, [sp, #28]
 800a148:	3602      	adds	r6, #2
 800a14a:	1d1a      	adds	r2, r3, #4
 800a14c:	681b      	ldr	r3, [r3, #0]
 800a14e:	9207      	str	r2, [sp, #28]
 800a150:	2b00      	cmp	r3, #0
 800a152:	db2b      	blt.n	800a1ac <_vfiprintf_r+0x1b0>
 800a154:	9309      	str	r3, [sp, #36]	; 0x24
 800a156:	4d33      	ldr	r5, [pc, #204]	; (800a224 <_vfiprintf_r+0x228>)
 800a158:	2203      	movs	r2, #3
 800a15a:	0028      	movs	r0, r5
 800a15c:	7831      	ldrb	r1, [r6, #0]
 800a15e:	f7fc fd8e 	bl	8006c7e <memchr>
 800a162:	2800      	cmp	r0, #0
 800a164:	d006      	beq.n	800a174 <_vfiprintf_r+0x178>
 800a166:	2340      	movs	r3, #64	; 0x40
 800a168:	1b40      	subs	r0, r0, r5
 800a16a:	4083      	lsls	r3, r0
 800a16c:	6822      	ldr	r2, [r4, #0]
 800a16e:	3601      	adds	r6, #1
 800a170:	4313      	orrs	r3, r2
 800a172:	6023      	str	r3, [r4, #0]
 800a174:	7831      	ldrb	r1, [r6, #0]
 800a176:	2206      	movs	r2, #6
 800a178:	482b      	ldr	r0, [pc, #172]	; (800a228 <_vfiprintf_r+0x22c>)
 800a17a:	1c75      	adds	r5, r6, #1
 800a17c:	7621      	strb	r1, [r4, #24]
 800a17e:	f7fc fd7e 	bl	8006c7e <memchr>
 800a182:	2800      	cmp	r0, #0
 800a184:	d043      	beq.n	800a20e <_vfiprintf_r+0x212>
 800a186:	4b29      	ldr	r3, [pc, #164]	; (800a22c <_vfiprintf_r+0x230>)
 800a188:	2b00      	cmp	r3, #0
 800a18a:	d125      	bne.n	800a1d8 <_vfiprintf_r+0x1dc>
 800a18c:	2207      	movs	r2, #7
 800a18e:	9b07      	ldr	r3, [sp, #28]
 800a190:	3307      	adds	r3, #7
 800a192:	4393      	bics	r3, r2
 800a194:	3308      	adds	r3, #8
 800a196:	9307      	str	r3, [sp, #28]
 800a198:	6963      	ldr	r3, [r4, #20]
 800a19a:	9a04      	ldr	r2, [sp, #16]
 800a19c:	189b      	adds	r3, r3, r2
 800a19e:	6163      	str	r3, [r4, #20]
 800a1a0:	e764      	b.n	800a06c <_vfiprintf_r+0x70>
 800a1a2:	4343      	muls	r3, r0
 800a1a4:	002e      	movs	r6, r5
 800a1a6:	2101      	movs	r1, #1
 800a1a8:	189b      	adds	r3, r3, r2
 800a1aa:	e7a6      	b.n	800a0fa <_vfiprintf_r+0xfe>
 800a1ac:	2301      	movs	r3, #1
 800a1ae:	425b      	negs	r3, r3
 800a1b0:	e7d0      	b.n	800a154 <_vfiprintf_r+0x158>
 800a1b2:	2300      	movs	r3, #0
 800a1b4:	200a      	movs	r0, #10
 800a1b6:	001a      	movs	r2, r3
 800a1b8:	3601      	adds	r6, #1
 800a1ba:	6063      	str	r3, [r4, #4]
 800a1bc:	7831      	ldrb	r1, [r6, #0]
 800a1be:	1c75      	adds	r5, r6, #1
 800a1c0:	3930      	subs	r1, #48	; 0x30
 800a1c2:	2909      	cmp	r1, #9
 800a1c4:	d903      	bls.n	800a1ce <_vfiprintf_r+0x1d2>
 800a1c6:	2b00      	cmp	r3, #0
 800a1c8:	d0c5      	beq.n	800a156 <_vfiprintf_r+0x15a>
 800a1ca:	9209      	str	r2, [sp, #36]	; 0x24
 800a1cc:	e7c3      	b.n	800a156 <_vfiprintf_r+0x15a>
 800a1ce:	4342      	muls	r2, r0
 800a1d0:	002e      	movs	r6, r5
 800a1d2:	2301      	movs	r3, #1
 800a1d4:	1852      	adds	r2, r2, r1
 800a1d6:	e7f1      	b.n	800a1bc <_vfiprintf_r+0x1c0>
 800a1d8:	aa07      	add	r2, sp, #28
 800a1da:	9200      	str	r2, [sp, #0]
 800a1dc:	0021      	movs	r1, r4
 800a1de:	003a      	movs	r2, r7
 800a1e0:	4b13      	ldr	r3, [pc, #76]	; (800a230 <_vfiprintf_r+0x234>)
 800a1e2:	9803      	ldr	r0, [sp, #12]
 800a1e4:	f7fb fdb6 	bl	8005d54 <_printf_float>
 800a1e8:	9004      	str	r0, [sp, #16]
 800a1ea:	9b04      	ldr	r3, [sp, #16]
 800a1ec:	3301      	adds	r3, #1
 800a1ee:	d1d3      	bne.n	800a198 <_vfiprintf_r+0x19c>
 800a1f0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a1f2:	07db      	lsls	r3, r3, #31
 800a1f4:	d405      	bmi.n	800a202 <_vfiprintf_r+0x206>
 800a1f6:	89bb      	ldrh	r3, [r7, #12]
 800a1f8:	059b      	lsls	r3, r3, #22
 800a1fa:	d402      	bmi.n	800a202 <_vfiprintf_r+0x206>
 800a1fc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800a1fe:	f7fc fd3d 	bl	8006c7c <__retarget_lock_release_recursive>
 800a202:	89bb      	ldrh	r3, [r7, #12]
 800a204:	065b      	lsls	r3, r3, #25
 800a206:	d500      	bpl.n	800a20a <_vfiprintf_r+0x20e>
 800a208:	e71d      	b.n	800a046 <_vfiprintf_r+0x4a>
 800a20a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a20c:	e71d      	b.n	800a04a <_vfiprintf_r+0x4e>
 800a20e:	aa07      	add	r2, sp, #28
 800a210:	9200      	str	r2, [sp, #0]
 800a212:	0021      	movs	r1, r4
 800a214:	003a      	movs	r2, r7
 800a216:	4b06      	ldr	r3, [pc, #24]	; (800a230 <_vfiprintf_r+0x234>)
 800a218:	9803      	ldr	r0, [sp, #12]
 800a21a:	f7fc f861 	bl	80062e0 <_printf_i>
 800a21e:	e7e3      	b.n	800a1e8 <_vfiprintf_r+0x1ec>
 800a220:	0800a989 	.word	0x0800a989
 800a224:	0800a98f 	.word	0x0800a98f
 800a228:	0800a993 	.word	0x0800a993
 800a22c:	08005d55 	.word	0x08005d55
 800a230:	08009fd9 	.word	0x08009fd9

0800a234 <__swbuf_r>:
 800a234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a236:	0006      	movs	r6, r0
 800a238:	000d      	movs	r5, r1
 800a23a:	0014      	movs	r4, r2
 800a23c:	2800      	cmp	r0, #0
 800a23e:	d004      	beq.n	800a24a <__swbuf_r+0x16>
 800a240:	6a03      	ldr	r3, [r0, #32]
 800a242:	2b00      	cmp	r3, #0
 800a244:	d101      	bne.n	800a24a <__swbuf_r+0x16>
 800a246:	f7fc fbf3 	bl	8006a30 <__sinit>
 800a24a:	69a3      	ldr	r3, [r4, #24]
 800a24c:	60a3      	str	r3, [r4, #8]
 800a24e:	89a3      	ldrh	r3, [r4, #12]
 800a250:	071b      	lsls	r3, r3, #28
 800a252:	d528      	bpl.n	800a2a6 <__swbuf_r+0x72>
 800a254:	6923      	ldr	r3, [r4, #16]
 800a256:	2b00      	cmp	r3, #0
 800a258:	d025      	beq.n	800a2a6 <__swbuf_r+0x72>
 800a25a:	6923      	ldr	r3, [r4, #16]
 800a25c:	6820      	ldr	r0, [r4, #0]
 800a25e:	b2ef      	uxtb	r7, r5
 800a260:	1ac0      	subs	r0, r0, r3
 800a262:	6963      	ldr	r3, [r4, #20]
 800a264:	b2ed      	uxtb	r5, r5
 800a266:	4283      	cmp	r3, r0
 800a268:	dc05      	bgt.n	800a276 <__swbuf_r+0x42>
 800a26a:	0021      	movs	r1, r4
 800a26c:	0030      	movs	r0, r6
 800a26e:	f7ff fa17 	bl	80096a0 <_fflush_r>
 800a272:	2800      	cmp	r0, #0
 800a274:	d11d      	bne.n	800a2b2 <__swbuf_r+0x7e>
 800a276:	68a3      	ldr	r3, [r4, #8]
 800a278:	3001      	adds	r0, #1
 800a27a:	3b01      	subs	r3, #1
 800a27c:	60a3      	str	r3, [r4, #8]
 800a27e:	6823      	ldr	r3, [r4, #0]
 800a280:	1c5a      	adds	r2, r3, #1
 800a282:	6022      	str	r2, [r4, #0]
 800a284:	701f      	strb	r7, [r3, #0]
 800a286:	6963      	ldr	r3, [r4, #20]
 800a288:	4283      	cmp	r3, r0
 800a28a:	d004      	beq.n	800a296 <__swbuf_r+0x62>
 800a28c:	89a3      	ldrh	r3, [r4, #12]
 800a28e:	07db      	lsls	r3, r3, #31
 800a290:	d507      	bpl.n	800a2a2 <__swbuf_r+0x6e>
 800a292:	2d0a      	cmp	r5, #10
 800a294:	d105      	bne.n	800a2a2 <__swbuf_r+0x6e>
 800a296:	0021      	movs	r1, r4
 800a298:	0030      	movs	r0, r6
 800a29a:	f7ff fa01 	bl	80096a0 <_fflush_r>
 800a29e:	2800      	cmp	r0, #0
 800a2a0:	d107      	bne.n	800a2b2 <__swbuf_r+0x7e>
 800a2a2:	0028      	movs	r0, r5
 800a2a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2a6:	0021      	movs	r1, r4
 800a2a8:	0030      	movs	r0, r6
 800a2aa:	f000 f805 	bl	800a2b8 <__swsetup_r>
 800a2ae:	2800      	cmp	r0, #0
 800a2b0:	d0d3      	beq.n	800a25a <__swbuf_r+0x26>
 800a2b2:	2501      	movs	r5, #1
 800a2b4:	426d      	negs	r5, r5
 800a2b6:	e7f4      	b.n	800a2a2 <__swbuf_r+0x6e>

0800a2b8 <__swsetup_r>:
 800a2b8:	4b30      	ldr	r3, [pc, #192]	; (800a37c <__swsetup_r+0xc4>)
 800a2ba:	b570      	push	{r4, r5, r6, lr}
 800a2bc:	0005      	movs	r5, r0
 800a2be:	6818      	ldr	r0, [r3, #0]
 800a2c0:	000c      	movs	r4, r1
 800a2c2:	2800      	cmp	r0, #0
 800a2c4:	d004      	beq.n	800a2d0 <__swsetup_r+0x18>
 800a2c6:	6a03      	ldr	r3, [r0, #32]
 800a2c8:	2b00      	cmp	r3, #0
 800a2ca:	d101      	bne.n	800a2d0 <__swsetup_r+0x18>
 800a2cc:	f7fc fbb0 	bl	8006a30 <__sinit>
 800a2d0:	230c      	movs	r3, #12
 800a2d2:	5ee2      	ldrsh	r2, [r4, r3]
 800a2d4:	b293      	uxth	r3, r2
 800a2d6:	0711      	lsls	r1, r2, #28
 800a2d8:	d423      	bmi.n	800a322 <__swsetup_r+0x6a>
 800a2da:	06d9      	lsls	r1, r3, #27
 800a2dc:	d407      	bmi.n	800a2ee <__swsetup_r+0x36>
 800a2de:	2309      	movs	r3, #9
 800a2e0:	2001      	movs	r0, #1
 800a2e2:	602b      	str	r3, [r5, #0]
 800a2e4:	3337      	adds	r3, #55	; 0x37
 800a2e6:	4313      	orrs	r3, r2
 800a2e8:	81a3      	strh	r3, [r4, #12]
 800a2ea:	4240      	negs	r0, r0
 800a2ec:	bd70      	pop	{r4, r5, r6, pc}
 800a2ee:	075b      	lsls	r3, r3, #29
 800a2f0:	d513      	bpl.n	800a31a <__swsetup_r+0x62>
 800a2f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a2f4:	2900      	cmp	r1, #0
 800a2f6:	d008      	beq.n	800a30a <__swsetup_r+0x52>
 800a2f8:	0023      	movs	r3, r4
 800a2fa:	3344      	adds	r3, #68	; 0x44
 800a2fc:	4299      	cmp	r1, r3
 800a2fe:	d002      	beq.n	800a306 <__swsetup_r+0x4e>
 800a300:	0028      	movs	r0, r5
 800a302:	f7fd fb69 	bl	80079d8 <_free_r>
 800a306:	2300      	movs	r3, #0
 800a308:	6363      	str	r3, [r4, #52]	; 0x34
 800a30a:	2224      	movs	r2, #36	; 0x24
 800a30c:	89a3      	ldrh	r3, [r4, #12]
 800a30e:	4393      	bics	r3, r2
 800a310:	81a3      	strh	r3, [r4, #12]
 800a312:	2300      	movs	r3, #0
 800a314:	6063      	str	r3, [r4, #4]
 800a316:	6923      	ldr	r3, [r4, #16]
 800a318:	6023      	str	r3, [r4, #0]
 800a31a:	2308      	movs	r3, #8
 800a31c:	89a2      	ldrh	r2, [r4, #12]
 800a31e:	4313      	orrs	r3, r2
 800a320:	81a3      	strh	r3, [r4, #12]
 800a322:	6923      	ldr	r3, [r4, #16]
 800a324:	2b00      	cmp	r3, #0
 800a326:	d10b      	bne.n	800a340 <__swsetup_r+0x88>
 800a328:	21a0      	movs	r1, #160	; 0xa0
 800a32a:	2280      	movs	r2, #128	; 0x80
 800a32c:	89a3      	ldrh	r3, [r4, #12]
 800a32e:	0089      	lsls	r1, r1, #2
 800a330:	0092      	lsls	r2, r2, #2
 800a332:	400b      	ands	r3, r1
 800a334:	4293      	cmp	r3, r2
 800a336:	d003      	beq.n	800a340 <__swsetup_r+0x88>
 800a338:	0021      	movs	r1, r4
 800a33a:	0028      	movs	r0, r5
 800a33c:	f000 f892 	bl	800a464 <__smakebuf_r>
 800a340:	220c      	movs	r2, #12
 800a342:	5ea3      	ldrsh	r3, [r4, r2]
 800a344:	2001      	movs	r0, #1
 800a346:	001a      	movs	r2, r3
 800a348:	b299      	uxth	r1, r3
 800a34a:	4002      	ands	r2, r0
 800a34c:	4203      	tst	r3, r0
 800a34e:	d00f      	beq.n	800a370 <__swsetup_r+0xb8>
 800a350:	2200      	movs	r2, #0
 800a352:	60a2      	str	r2, [r4, #8]
 800a354:	6962      	ldr	r2, [r4, #20]
 800a356:	4252      	negs	r2, r2
 800a358:	61a2      	str	r2, [r4, #24]
 800a35a:	2000      	movs	r0, #0
 800a35c:	6922      	ldr	r2, [r4, #16]
 800a35e:	4282      	cmp	r2, r0
 800a360:	d1c4      	bne.n	800a2ec <__swsetup_r+0x34>
 800a362:	0609      	lsls	r1, r1, #24
 800a364:	d5c2      	bpl.n	800a2ec <__swsetup_r+0x34>
 800a366:	2240      	movs	r2, #64	; 0x40
 800a368:	4313      	orrs	r3, r2
 800a36a:	81a3      	strh	r3, [r4, #12]
 800a36c:	3801      	subs	r0, #1
 800a36e:	e7bd      	b.n	800a2ec <__swsetup_r+0x34>
 800a370:	0788      	lsls	r0, r1, #30
 800a372:	d400      	bmi.n	800a376 <__swsetup_r+0xbe>
 800a374:	6962      	ldr	r2, [r4, #20]
 800a376:	60a2      	str	r2, [r4, #8]
 800a378:	e7ef      	b.n	800a35a <__swsetup_r+0xa2>
 800a37a:	46c0      	nop			; (mov r8, r8)
 800a37c:	20000064 	.word	0x20000064

0800a380 <_raise_r>:
 800a380:	b570      	push	{r4, r5, r6, lr}
 800a382:	0004      	movs	r4, r0
 800a384:	000d      	movs	r5, r1
 800a386:	291f      	cmp	r1, #31
 800a388:	d904      	bls.n	800a394 <_raise_r+0x14>
 800a38a:	2316      	movs	r3, #22
 800a38c:	6003      	str	r3, [r0, #0]
 800a38e:	2001      	movs	r0, #1
 800a390:	4240      	negs	r0, r0
 800a392:	bd70      	pop	{r4, r5, r6, pc}
 800a394:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800a396:	2b00      	cmp	r3, #0
 800a398:	d004      	beq.n	800a3a4 <_raise_r+0x24>
 800a39a:	008a      	lsls	r2, r1, #2
 800a39c:	189b      	adds	r3, r3, r2
 800a39e:	681a      	ldr	r2, [r3, #0]
 800a3a0:	2a00      	cmp	r2, #0
 800a3a2:	d108      	bne.n	800a3b6 <_raise_r+0x36>
 800a3a4:	0020      	movs	r0, r4
 800a3a6:	f000 f831 	bl	800a40c <_getpid_r>
 800a3aa:	002a      	movs	r2, r5
 800a3ac:	0001      	movs	r1, r0
 800a3ae:	0020      	movs	r0, r4
 800a3b0:	f000 f81a 	bl	800a3e8 <_kill_r>
 800a3b4:	e7ed      	b.n	800a392 <_raise_r+0x12>
 800a3b6:	2000      	movs	r0, #0
 800a3b8:	2a01      	cmp	r2, #1
 800a3ba:	d0ea      	beq.n	800a392 <_raise_r+0x12>
 800a3bc:	1c51      	adds	r1, r2, #1
 800a3be:	d103      	bne.n	800a3c8 <_raise_r+0x48>
 800a3c0:	2316      	movs	r3, #22
 800a3c2:	3001      	adds	r0, #1
 800a3c4:	6023      	str	r3, [r4, #0]
 800a3c6:	e7e4      	b.n	800a392 <_raise_r+0x12>
 800a3c8:	2400      	movs	r4, #0
 800a3ca:	0028      	movs	r0, r5
 800a3cc:	601c      	str	r4, [r3, #0]
 800a3ce:	4790      	blx	r2
 800a3d0:	0020      	movs	r0, r4
 800a3d2:	e7de      	b.n	800a392 <_raise_r+0x12>

0800a3d4 <raise>:
 800a3d4:	b510      	push	{r4, lr}
 800a3d6:	4b03      	ldr	r3, [pc, #12]	; (800a3e4 <raise+0x10>)
 800a3d8:	0001      	movs	r1, r0
 800a3da:	6818      	ldr	r0, [r3, #0]
 800a3dc:	f7ff ffd0 	bl	800a380 <_raise_r>
 800a3e0:	bd10      	pop	{r4, pc}
 800a3e2:	46c0      	nop			; (mov r8, r8)
 800a3e4:	20000064 	.word	0x20000064

0800a3e8 <_kill_r>:
 800a3e8:	2300      	movs	r3, #0
 800a3ea:	b570      	push	{r4, r5, r6, lr}
 800a3ec:	4d06      	ldr	r5, [pc, #24]	; (800a408 <_kill_r+0x20>)
 800a3ee:	0004      	movs	r4, r0
 800a3f0:	0008      	movs	r0, r1
 800a3f2:	0011      	movs	r1, r2
 800a3f4:	602b      	str	r3, [r5, #0]
 800a3f6:	f7f9 fe48 	bl	800408a <_kill>
 800a3fa:	1c43      	adds	r3, r0, #1
 800a3fc:	d103      	bne.n	800a406 <_kill_r+0x1e>
 800a3fe:	682b      	ldr	r3, [r5, #0]
 800a400:	2b00      	cmp	r3, #0
 800a402:	d000      	beq.n	800a406 <_kill_r+0x1e>
 800a404:	6023      	str	r3, [r4, #0]
 800a406:	bd70      	pop	{r4, r5, r6, pc}
 800a408:	200003b4 	.word	0x200003b4

0800a40c <_getpid_r>:
 800a40c:	b510      	push	{r4, lr}
 800a40e:	f7f9 fe36 	bl	800407e <_getpid>
 800a412:	bd10      	pop	{r4, pc}

0800a414 <__swhatbuf_r>:
 800a414:	b570      	push	{r4, r5, r6, lr}
 800a416:	000e      	movs	r6, r1
 800a418:	001d      	movs	r5, r3
 800a41a:	230e      	movs	r3, #14
 800a41c:	5ec9      	ldrsh	r1, [r1, r3]
 800a41e:	0014      	movs	r4, r2
 800a420:	b096      	sub	sp, #88	; 0x58
 800a422:	2900      	cmp	r1, #0
 800a424:	da0c      	bge.n	800a440 <__swhatbuf_r+0x2c>
 800a426:	89b2      	ldrh	r2, [r6, #12]
 800a428:	2380      	movs	r3, #128	; 0x80
 800a42a:	0011      	movs	r1, r2
 800a42c:	4019      	ands	r1, r3
 800a42e:	421a      	tst	r2, r3
 800a430:	d013      	beq.n	800a45a <__swhatbuf_r+0x46>
 800a432:	2100      	movs	r1, #0
 800a434:	3b40      	subs	r3, #64	; 0x40
 800a436:	2000      	movs	r0, #0
 800a438:	6029      	str	r1, [r5, #0]
 800a43a:	6023      	str	r3, [r4, #0]
 800a43c:	b016      	add	sp, #88	; 0x58
 800a43e:	bd70      	pop	{r4, r5, r6, pc}
 800a440:	466a      	mov	r2, sp
 800a442:	f000 f84d 	bl	800a4e0 <_fstat_r>
 800a446:	2800      	cmp	r0, #0
 800a448:	dbed      	blt.n	800a426 <__swhatbuf_r+0x12>
 800a44a:	23f0      	movs	r3, #240	; 0xf0
 800a44c:	9901      	ldr	r1, [sp, #4]
 800a44e:	021b      	lsls	r3, r3, #8
 800a450:	4019      	ands	r1, r3
 800a452:	4b03      	ldr	r3, [pc, #12]	; (800a460 <__swhatbuf_r+0x4c>)
 800a454:	18c9      	adds	r1, r1, r3
 800a456:	424b      	negs	r3, r1
 800a458:	4159      	adcs	r1, r3
 800a45a:	2380      	movs	r3, #128	; 0x80
 800a45c:	00db      	lsls	r3, r3, #3
 800a45e:	e7ea      	b.n	800a436 <__swhatbuf_r+0x22>
 800a460:	ffffe000 	.word	0xffffe000

0800a464 <__smakebuf_r>:
 800a464:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a466:	2602      	movs	r6, #2
 800a468:	898b      	ldrh	r3, [r1, #12]
 800a46a:	0005      	movs	r5, r0
 800a46c:	000c      	movs	r4, r1
 800a46e:	4233      	tst	r3, r6
 800a470:	d006      	beq.n	800a480 <__smakebuf_r+0x1c>
 800a472:	0023      	movs	r3, r4
 800a474:	3347      	adds	r3, #71	; 0x47
 800a476:	6023      	str	r3, [r4, #0]
 800a478:	6123      	str	r3, [r4, #16]
 800a47a:	2301      	movs	r3, #1
 800a47c:	6163      	str	r3, [r4, #20]
 800a47e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800a480:	466a      	mov	r2, sp
 800a482:	ab01      	add	r3, sp, #4
 800a484:	f7ff ffc6 	bl	800a414 <__swhatbuf_r>
 800a488:	9900      	ldr	r1, [sp, #0]
 800a48a:	0007      	movs	r7, r0
 800a48c:	0028      	movs	r0, r5
 800a48e:	f7fd fb19 	bl	8007ac4 <_malloc_r>
 800a492:	2800      	cmp	r0, #0
 800a494:	d108      	bne.n	800a4a8 <__smakebuf_r+0x44>
 800a496:	220c      	movs	r2, #12
 800a498:	5ea3      	ldrsh	r3, [r4, r2]
 800a49a:	059a      	lsls	r2, r3, #22
 800a49c:	d4ef      	bmi.n	800a47e <__smakebuf_r+0x1a>
 800a49e:	2203      	movs	r2, #3
 800a4a0:	4393      	bics	r3, r2
 800a4a2:	431e      	orrs	r6, r3
 800a4a4:	81a6      	strh	r6, [r4, #12]
 800a4a6:	e7e4      	b.n	800a472 <__smakebuf_r+0xe>
 800a4a8:	2380      	movs	r3, #128	; 0x80
 800a4aa:	89a2      	ldrh	r2, [r4, #12]
 800a4ac:	6020      	str	r0, [r4, #0]
 800a4ae:	4313      	orrs	r3, r2
 800a4b0:	81a3      	strh	r3, [r4, #12]
 800a4b2:	9b00      	ldr	r3, [sp, #0]
 800a4b4:	6120      	str	r0, [r4, #16]
 800a4b6:	6163      	str	r3, [r4, #20]
 800a4b8:	9b01      	ldr	r3, [sp, #4]
 800a4ba:	2b00      	cmp	r3, #0
 800a4bc:	d00c      	beq.n	800a4d8 <__smakebuf_r+0x74>
 800a4be:	0028      	movs	r0, r5
 800a4c0:	230e      	movs	r3, #14
 800a4c2:	5ee1      	ldrsh	r1, [r4, r3]
 800a4c4:	f000 f81e 	bl	800a504 <_isatty_r>
 800a4c8:	2800      	cmp	r0, #0
 800a4ca:	d005      	beq.n	800a4d8 <__smakebuf_r+0x74>
 800a4cc:	2303      	movs	r3, #3
 800a4ce:	89a2      	ldrh	r2, [r4, #12]
 800a4d0:	439a      	bics	r2, r3
 800a4d2:	3b02      	subs	r3, #2
 800a4d4:	4313      	orrs	r3, r2
 800a4d6:	81a3      	strh	r3, [r4, #12]
 800a4d8:	89a3      	ldrh	r3, [r4, #12]
 800a4da:	433b      	orrs	r3, r7
 800a4dc:	81a3      	strh	r3, [r4, #12]
 800a4de:	e7ce      	b.n	800a47e <__smakebuf_r+0x1a>

0800a4e0 <_fstat_r>:
 800a4e0:	2300      	movs	r3, #0
 800a4e2:	b570      	push	{r4, r5, r6, lr}
 800a4e4:	4d06      	ldr	r5, [pc, #24]	; (800a500 <_fstat_r+0x20>)
 800a4e6:	0004      	movs	r4, r0
 800a4e8:	0008      	movs	r0, r1
 800a4ea:	0011      	movs	r1, r2
 800a4ec:	602b      	str	r3, [r5, #0]
 800a4ee:	f7f9 fe2b 	bl	8004148 <_fstat>
 800a4f2:	1c43      	adds	r3, r0, #1
 800a4f4:	d103      	bne.n	800a4fe <_fstat_r+0x1e>
 800a4f6:	682b      	ldr	r3, [r5, #0]
 800a4f8:	2b00      	cmp	r3, #0
 800a4fa:	d000      	beq.n	800a4fe <_fstat_r+0x1e>
 800a4fc:	6023      	str	r3, [r4, #0]
 800a4fe:	bd70      	pop	{r4, r5, r6, pc}
 800a500:	200003b4 	.word	0x200003b4

0800a504 <_isatty_r>:
 800a504:	2300      	movs	r3, #0
 800a506:	b570      	push	{r4, r5, r6, lr}
 800a508:	4d06      	ldr	r5, [pc, #24]	; (800a524 <_isatty_r+0x20>)
 800a50a:	0004      	movs	r4, r0
 800a50c:	0008      	movs	r0, r1
 800a50e:	602b      	str	r3, [r5, #0]
 800a510:	f7f9 fe28 	bl	8004164 <_isatty>
 800a514:	1c43      	adds	r3, r0, #1
 800a516:	d103      	bne.n	800a520 <_isatty_r+0x1c>
 800a518:	682b      	ldr	r3, [r5, #0]
 800a51a:	2b00      	cmp	r3, #0
 800a51c:	d000      	beq.n	800a520 <_isatty_r+0x1c>
 800a51e:	6023      	str	r3, [r4, #0]
 800a520:	bd70      	pop	{r4, r5, r6, pc}
 800a522:	46c0      	nop			; (mov r8, r8)
 800a524:	200003b4 	.word	0x200003b4

0800a528 <_init>:
 800a528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a52a:	46c0      	nop			; (mov r8, r8)
 800a52c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a52e:	bc08      	pop	{r3}
 800a530:	469e      	mov	lr, r3
 800a532:	4770      	bx	lr

0800a534 <_fini>:
 800a534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a536:	46c0      	nop			; (mov r8, r8)
 800a538:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a53a:	bc08      	pop	{r3}
 800a53c:	469e      	mov	lr, r3
 800a53e:	4770      	bx	lr
